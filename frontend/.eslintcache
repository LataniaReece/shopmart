[{"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\index.js":"1","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\App.js":"2","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Footer.js":"3","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\store.js":"4","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\products\\ProductsListScreen.js":"6","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Pay.js":"7","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Navbar.js":"8","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\CartScreen.js":"9","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\OrderSuccess.js":"10","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\orders\\OrdersScreen.js":"11","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\assets\\theme.js":"12","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js":"13","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\users\\LoginScreen.js":"14","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\users\\RegisterScreen.js":"15","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js":"16","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\admin\\DashboardScreen.js":"17","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Spinner.js":"18","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\productAction.js":"19","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\cartReducers.js":"20","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\orderReducers.js":"21","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\productReducers.js":"22","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\userReducers.js":"23","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\products\\ProductListComponent.js":"24","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\products\\ProductsComponent.js":"25","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\AdminSidenav.js":"26","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\ShowcaseComponent.js":"27","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\cartActions.js":"28","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\userActions.js":"29","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\orderActions.js":"30","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js":"31","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js":"32","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\admin\\Chart.js":"33","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\admin\\LatestOrdersComponent.js":"34","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\admin\\NewUsersComponent.js":"35","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\productTypes.js":"36","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\userTypes.js":"37","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\admin\\RevenueComponent.js":"38"},{"size":151,"mtime":1637094399105,"results":"39","hashOfConfig":"40"},{"size":2422,"mtime":1638902156039,"results":"41","hashOfConfig":"40"},{"size":504,"mtime":1638287174476,"results":"42","hashOfConfig":"40"},{"size":1736,"mtime":1638902156287,"results":"43","hashOfConfig":"40"},{"size":355,"mtime":1638287174492,"results":"44","hashOfConfig":"40"},{"size":791,"mtime":1638287174492,"results":"45","hashOfConfig":"40"},{"size":2623,"mtime":1638902156161,"results":"46","hashOfConfig":"40"},{"size":4166,"mtime":1638902156131,"results":"47","hashOfConfig":"40"},{"size":9365,"mtime":1638904641920,"results":"48","hashOfConfig":"40"},{"size":1302,"mtime":1638902156251,"results":"49","hashOfConfig":"40"},{"size":3887,"mtime":1638902156259,"results":"50","hashOfConfig":"40"},{"size":527,"mtime":1638902156106,"results":"51","hashOfConfig":"40"},{"size":5422,"mtime":1638902156279,"results":"52","hashOfConfig":"40"},{"size":3209,"mtime":1638902156282,"results":"53","hashOfConfig":"40"},{"size":4422,"mtime":1638902156283,"results":"54","hashOfConfig":"40"},{"size":5562,"mtime":1638902156257,"results":"55","hashOfConfig":"40"},{"size":4588,"mtime":1638905400291,"results":"56","hashOfConfig":"40"},{"size":297,"mtime":1638287174476,"results":"57","hashOfConfig":"40"},{"size":1365,"mtime":1638287174460,"results":"58","hashOfConfig":"40"},{"size":1150,"mtime":1638902156205,"results":"59","hashOfConfig":"40"},{"size":2013,"mtime":1638902156207,"results":"60","hashOfConfig":"40"},{"size":1156,"mtime":1638902156211,"results":"61","hashOfConfig":"40"},{"size":1528,"mtime":1638902156215,"results":"62","hashOfConfig":"40"},{"size":3875,"mtime":1638902156176,"results":"63","hashOfConfig":"40"},{"size":4529,"mtime":1638902156200,"results":"64","hashOfConfig":"40"},{"size":3995,"mtime":1638902156108,"results":"65","hashOfConfig":"40"},{"size":755,"mtime":1637103217471,"results":"66","hashOfConfig":"40"},{"size":747,"mtime":1638902156074,"results":"67","hashOfConfig":"40"},{"size":2857,"mtime":1638902156103,"results":"68","hashOfConfig":"40"},{"size":2998,"mtime":1638904737103,"results":"69","hashOfConfig":"40"},{"size":142,"mtime":1638902156042,"results":"70","hashOfConfig":"40"},{"size":604,"mtime":1638902156068,"results":"71","hashOfConfig":"40"},{"size":702,"mtime":1638902156164,"results":"72","hashOfConfig":"40"},{"size":2031,"mtime":1638902156166,"results":"73","hashOfConfig":"40"},{"size":1747,"mtime":1638902156168,"results":"74","hashOfConfig":"40"},{"size":366,"mtime":1638287174460,"results":"75","hashOfConfig":"40"},{"size":560,"mtime":1638902156069,"results":"76","hashOfConfig":"40"},{"size":2062,"mtime":1638906489279,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"b0zd7l",{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"80"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\index.js",[],["165","166"],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\App.js",["167"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@mui/material'\r\nimport { Provider } from 'react-redux';\r\nimport store from './store'\r\nimport './App.css'\r\n\r\nimport Pay from './components/Pay'\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductDetailScreen from './screens/products/ProductDetailScreen';\r\nimport ProductsListScreen from './screens/products/ProductsListScreen';\r\nimport CartScreen from './screens/CartScreen';\r\n\r\nimport customTheme from './assets/theme';\r\nimport OrderSuccess from './screens/OrderSuccess';\r\nimport OrdersScreen from './screens/orders/OrdersScreen';\r\nimport OrderDetailScreen from './screens/orders/OrderDetailScreen';\r\nimport LoginScreen from './screens/users/LoginScreen';\r\nimport RegisterScreen from './screens/users/RegisterScreen';\r\nimport DashboardScreen from './screens/admin/DashboardScreen';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <ThemeProvider theme={customTheme}>\r\n                <Router>\r\n                    <main style={{ height: \"100%\", width: \"100%\", minWidth: \"100%\" }}>\r\n                        <Navbar />\r\n                            <Routes>\r\n                                <Route path='/login' element={<LoginScreen/>} />\r\n                                <Route path='/register' element={<RegisterScreen/>} />\r\n                                <Route path='/products/category/:category' element={<ProductsListScreen/>} />\r\n                                <Route path='/products/:id' element={<ProductDetailScreen />} />\r\n                                <Route path='/cart' element={<CartScreen />} />\r\n                                <Route path='/success' element={<OrderSuccess/>} />\r\n                                <Route path='/orders/:id' element={<OrderDetailScreen/>} />\r\n                                <Route path='/orders' element={<OrdersScreen/>} />\r\n                                <Route path='/admin' element={<DashboardScreen/>} />\r\n                                <Route path='/' element={<HomeScreen/>} />\r\n                            </Routes>\r\n                        <Footer />\r\n                    </main>\r\n                </Router>\r\n            </ThemeProvider> \r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\store.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\products\\ProductsListScreen.js",["168","169","170"],"import React, {useState, useEffect} from 'react'\r\nimport {Box} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\nimport ProductListComponent from '../../components/products/ProductListComponent';\r\nimport ProductsComponent from '../../components/products/ProductsComponent';\r\n\r\nconst ProductsListScreen = ({ home=false }) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const location = useLocation();\r\n    const category = location.pathname.split('/')[3]\r\n\r\n    useEffect(() => {\r\n    }, [category])\r\n\r\n    return (\r\n        <Box sx={{mt: 3}}>\r\n            <ProductsComponent category={category} filters={filters} sort={sort}/>\r\n       </Box>\r\n    )\r\n}\r\n\r\nexport default ProductsListScreen\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Pay.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\CartScreen.js",["171","172","173","174","175"],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\OrderSuccess.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\orders\\OrdersScreen.js",["176","177"],"import React, {useEffect} from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useNavigate} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Typography, Box, Container, Alert, Button} from '@mui/material'\r\nimport { getUserOrders } from '../../actions/orderActions'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst OrdersScreen = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userOrders = useSelector(state => state.userOrders)\r\n    let { loading, error, orders } = userOrders\r\n\r\n    useEffect(() => { \r\n        if(!userInfo){\r\n            navigate('/login?redirect=/orders')\r\n        } else{\r\n            dispatch(getUserOrders())\r\n        }\r\n    }, [dispatch])\r\n\r\n    const displayDate = (date) =>{\r\n        const newDate = new Date(date)\r\n        return moment(newDate).format('MM/DD/YYYY')\r\n    }\r\n\r\n    return (\r\n        <Container sx={{minHeight:'85vh'}}>\r\n            <Box sx={{display:'flex', justifyContent: 'space-between'}}>\r\n                <Typography variant=\"h4\" sx={{my: 3}}>Your Orders</Typography>\r\n                <Link to=\"/\" style={{alignSelf:'center'}}><Button variant=\"contained\" color=\"secondary\">Continue Shopping</Button></Link>\r\n            </Box>\r\n            {loading && <Spinner />}\r\n            {error && <Alert severity=\"error\">{error}</Alert> }\r\n            { (orders && orders.length !== 0) ? (\r\n                orders.map(order => {\r\n                   return <Box \r\n                        sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', mb: 3, boxShadow: '0 3px 10px rgb(0 0 0 / 0.2)'}}\r\n                        key={order._id}\r\n                    >\r\n                        <Box sx={{display: 'flex', justifyContent: 'space-between'}} className=\"order-details\">\r\n                            <div className=\"info\">\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Order Placed</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">{displayDate(order.createdAt)}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Total</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Ship To</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">{order.address.name && order.address.name.toUpperCase()}</Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"order-number\">\r\n                                <Typography variant=\"p\">Order #: {order._id}</Typography>\r\n                                <Link to={`/orders/${order._id}`}>View Order Details</Link>\r\n                            </div>\r\n                        </Box>\r\n                    <Box className=\"order-products\" sx={{mt: 3}}>\r\n                    {order.products && order.products.map(product => {\r\n                        return  <Link to={`/products/${product._id}`} key={product._id}>\r\n                        <img \r\n                            src={product.image} \r\n                            alt=\"image\" \r\n                        />   \r\n                    </Link>   \r\n                    })}                   \r\n                    </Box>\r\n                </Box>\r\n                })\r\n            ) : <Alert severity=\"info\">No Orders Found...</Alert>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrdersScreen\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\assets\\theme.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js",["178","179","180"],"import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router';\r\n\r\nimport {Box, FormControl, InputLabel, Select, MenuItem, Container, Typography, Button, Grid} from '@mui/material'\r\nimport { getProductDetail } from '../../actions/productAction'\r\nimport Spinner from '../../components/Spinner'\r\nimport { CART_ADD_ITEM } from '../../actions/actionTypes/cartTypes';\r\nimport { addToCart } from '../../actions/cartActions';\r\n\r\nconst ProductDetailScreen = () => {\r\n    const [size, setSize ] = useState('')\r\n    const [color, setColor ] = useState('')\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams();\r\n\r\n    const productDetail = useSelector(state => state.productDetail)\r\n    let { loading, error, product } = productDetail\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetail(id))\r\n    }, [id])\r\n\r\n    const displaySize = (size) => {\r\n        if(size === 'S'){\r\n            return 'Small'\r\n        } else if (size === 'M'){\r\n            return 'Medium'\r\n        } else if (size === 'L'){\r\n            return 'Large'\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (type) => {\r\n        if(type === 'sub'){\r\n            quantity > 1 && setQuantity(quantity - 1)\r\n        } else if (type === 'add'){\r\n            setQuantity(quantity + 1)\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        dispatch(addToCart({\r\n            ...product, \r\n                quantity,\r\n                color,\r\n                size,\r\n                productId: product._id + Date.now()\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"product-detail-container\">\r\n            {loading ? \r\n                 <Spinner /> : (\r\n                    product && product._id && (\r\n                        <Container>\r\n                            <Typography variant=\"h3\" sx={{fontWeight: \"light\", mt: 4, mb:2, fontSize: 38}}>{product.title}</Typography>\r\n                            <Grid container spacing={{ xs: 2, md: 3}}>\r\n                                <Grid item sx={{ width:'100%'}} xs={12} md={6}>\r\n                                    <img src={product.image} alt={product.title} /> \r\n                                </Grid>\r\n                                <Grid item sx={{ width:'100%' }} xs={12} md={6}>\r\n                                    <Typography gutterbottom variant=\"h4\" sx={{fontWeight: \"light\", my: 3}}>$ {product.price}</Typography>\r\n                                    <Typography gutterbottom variant=\"p\" sx={{lineHeight: 1.5}}>{product.description}</Typography>\r\n                                    <Box sx={{display: 'flex', mt: 3, alignItems: 'center'}}>\r\n                                        <Box sx={{display: 'flex'}}>\r\n                                            <Typography variant=\"p\" sx={{fontSize: 20, mr: 1}}>Color</Typography>\r\n                                            <div className=\"colors\">\r\n                                                {product.color.map( c => {\r\n                                                    return  <button className=\"color\" style={{backgroundColor: `${c}`}} key={c} onClick={()=>setColor(c)}></button>\r\n                                                })}\r\n                                            </div>\r\n                                        </Box> \r\n                                        <Box sx={{ minWidth: 120 }}>\r\n                                            <FormControl fullWidth sx={{ml: 4}}>\r\n                                            <InputLabel id=\"size\">Size</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"size\"\r\n                                                id=\"size-select\"\r\n                                                value={size}\r\n                                                label=\"Size\"\r\n                                                onChange={(e) => {setSize(e.target.value)}}\r\n                                            >\r\n                                                {product.size.map( size => {\r\n                                                    return  <MenuItem value={size} key={size}>{displaySize(size)}</MenuItem>\r\n                                                })}\r\n                                            </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                    </Box>   \r\n                                    <div className=\"quantity-counter\">\r\n                                        <button onClick={()=>handleQuantity('sub')}><i class=\"fas fa-minus\"></i></button>\r\n                                        <span className=\"number\">{quantity}</span>\r\n                                        <button onClick={()=>handleQuantity('add')}><i class=\"fas fa-plus\"></i></button>\r\n                                    </div>\r\n                                    <Button variant=\"contained\" color=\"secondary\" sx={{mt: 4, display: 'inline-block', width: '100%'}} onClick={()=>handleClick()}>Add to cart</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                    )\r\n                 )}\r\n          \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductDetailScreen\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\users\\LoginScreen.js",["181"],"import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { Typography, FormControl, Button, Box, TextField, Alert} from '@mui/material'\r\nimport { login } from '../../actions/userActions'\r\n\r\nconst LoginScreen = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo, error, success } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() =>{\r\n        // if(success){\r\n        //     dispatch({\r\n        //         type: SET_GLOBAL_ALERT,\r\n        //         payload: {\r\n        //             alert: 'Welcome back!',\r\n        //             alertType: 'success'\r\n        //         }\r\n        //     })\r\n        //     history.push(redirect)\r\n        // }\r\n        // if(userInfo){\r\n        //     return history.push(redirect)\r\n        // }\r\n        if(success){\r\n            navigate(redirect)\r\n        }\r\n        if(userInfo){\r\n            return navigate(redirect)\r\n        }\r\n    }, [success, navigate, dispatch, userInfo])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(username, password))\r\n    }\r\n\r\n    return (\r\n        <Box className=\"auth-form\">\r\n            <form className=\"form-container\" onSubmit={handleSubmit}>\r\n                <Typography textAlign=\"center\" variant=\"h4\">Sign In</Typography>\r\n                {error && <Alert severity=\"error\">{error}</Alert>}\r\n                <div>   \r\n                    <FormControl sx={{mt:3, width: '100%'}}>\r\n                        <TextField \r\n                            name=\"username\" \r\n                            type=\"text\"\r\n                            label=\"Username\" \r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)} \r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl sx={{mt:3, width: '100%'}}>\r\n                        <TextField \r\n                            name=\"password\" \r\n                            type=\"password\"\r\n                            label=\"Password\" \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)} \r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                </div>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    sx={{mt:5, width:\"100%\"}}\r\n                    type=\"submit\"\r\n                > \r\n                    Sign In\r\n                </Button>\r\n                <Typography component=\"p\" variant=\"p\" color=\"light\" sx={{mt:3}}>Don't have an account? <Link to=\"/register\">Sign Up Here</Link></Typography>\r\n            </form>        \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\users\\RegisterScreen.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js",["182","183","184"],"import React, {useEffect} from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport { Box, Typography, Container, Button} from '@mui/material'\r\nimport moment from 'moment'\r\nimport { getOrderDetails } from '../../actions/orderActions'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst OrderDetailScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { loading, error, order } = orderDetails \r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(params.id))\r\n    }, [])\r\n\r\n    const displayDate = (date) =>{\r\n        const newDate = new Date(date)\r\n        return moment(newDate).format('MM/DD/YYYY')\r\n    }\r\n\r\n    return (\r\n        <>\r\n       {loading ? <Spinner /> : (\r\n            order && (\r\n                <Container sx={{minHeight: '85vh', pt: 3}}>\r\n                    <Box sx={{display:'flex', justifyContent: 'space-between'}}>\r\n                        <Typography variant=\"h4\" sx={{mt: 2, mb: 1}}>Order Details:  (Order# {order._id})</Typography>\r\n                        <Link to=\"/\" style={{alignSelf:'center'}}><Button variant=\"contained\" color=\"secondary\">Continue Shopping</Button></Link>\r\n                    </Box>\r\n                    <Typography component=\"p\" variant=\"p\"></Typography>\r\n                        <Typography component=\"p\" variant=\"p\" sx={{mb:2}}>Order placed on: {displayDate(order.createdAt)}</Typography>\r\n                    <Box \r\n                    sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', mb: 3}}\r\n                    key={order._id}\r\n                    >\r\n                        <Box sx={{display: 'flex', justifyContent: 'space-between'}} className=\"order-details\">\r\n                            <div className=\"address\">\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Shipping Address</Typography>\r\n                                <Typography variant=\"p\" component=\"p\">{order.address.name.toUpperCase()}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.line1}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.line2}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.city}, {order.address.address.state}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.postal_code}</Typography>  \r\n                            </div>\r\n                            <div className=\"payment-method\">\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Payment Method</Typography>\r\n                                <Typography variant=\"p\" component=\"p\">{order.paymentMethod.card.network.toUpperCase()} **** {order.paymentMethod.card.last4}</Typography>   \r\n                            </div>\r\n                            <Box sx={{width: 275}}>\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Order Summary</Typography>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Item(s) Subtotal</Typography>\r\n                                    <Typography variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Shipping & Handling</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Tax</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Grand Total</Typography>\r\n                                    <Typography variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"order-products\" sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', my: 3}}>\r\n                    {order.products && order.products.map(product => {\r\n                        return  <Link to={`/products/${product._id}`} key={product._id}>\r\n                        <img \r\n                            src={product.image} \r\n                            alt=\"image\" \r\n                        />   \r\n                    </Link>   \r\n                    })}                   \r\n                    </Box>\r\n                </Container>\r\n            )\r\n       )}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default OrderDetailScreen\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\admin\\DashboardScreen.js",["185","186","187"],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\productAction.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\products\\ProductListComponent.js",["188"],"import React, {useState, useEffect}from 'react' \r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Grid, Card, CardMedia, CardContent, Typography, Alert} from '@mui/material'\r\nimport { getProducts } from '../../actions/productAction'\r\nimport Spinner from '../Spinner'\r\n\r\n\r\nconst ProductListComponent = ({category, filters, sort}) => {\r\n    const [ displayProducts, setDisplayProducts ] = useState([])\r\n    const [currentFilters, setCurrentFilters ] = useState({})\r\n    const [currentCategory, setCurrentCategory] = useState([])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    let { loading, error, products } = productList\r\n\r\n    useEffect(() => { \r\n        if(currentCategory !== category){\r\n            setCurrentCategory(category)\r\n            dispatch(getProducts(category))\r\n        }\r\n    }, [category, currentCategory, dispatch])\r\n \r\n    useEffect(() => {\r\n        if(products && !Object.values(filters).every(x => x === '') && filters !== currentFilters){\r\n            setCurrentFilters(filters)\r\n            setDisplayProducts(products.filter((product) => {\r\n                for (const [key, value] of Object.entries(filters)){\r\n                    if(value !== ''){\r\n                        return product[key].includes(value)\r\n                    }           \r\n                }\r\n            }))\r\n        } else if (products && Object.keys(currentFilters).length === 0){\r\n            setDisplayProducts(products)\r\n        }\r\n    }, [products, filters, currentFilters])\r\n\r\n    useEffect(() =>  {\r\n        if(sort === 'newest'){\r\n            setDisplayProducts((prev) => \r\n                [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n            )\r\n        } else if(sort === 'asc'){\r\n            setDisplayProducts((prev) => \r\n                [...prev].sort((a, b) => a.price - b.price)\r\n            )\r\n        }else{\r\n            setDisplayProducts((prev) =>\r\n                [...prev].sort((a, b) => b.price - a.price)\r\n            )\r\n        }\r\n    }, [sort])\r\n\r\n// filteredProducts ? show filtered products : show all products\r\n    return (\r\n        <>\r\n        {loading && <Spinner /> } \r\n        {displayProducts && displayProducts.length > 0 ? (\r\n            <Grid className=\"products-container\" container spacing={{ xs: 2, md: 3 }} sx={{minHeight: '70vh'}}>\r\n                { error && <Alert severity=\"error\">{error}</Alert>}\r\n                {displayProducts.map((product, index) => {\r\n                    return  <Grid className=\"product-item\" item sx={{ width:'100%' }} xs={12} sm={6} md={3} key={index}>\r\n                        <Link to={`/products/${product._id}`}>\r\n                        <Card sx={{ width:'100%'}}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"300\"\r\n                                image={product.image}\r\n                                alt={product.title}\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"p\" sx={{ color: 'text.primary', fontSize: 22, fontWeight: 'medium' }} className=\"product-title\">{product.title}</Typography>\r\n                                <Typography gutterBottom variant=\"p\" sx={{ display: 'block', color: 'text.primary', fontSize: 18, fontWeight: 'medium' }}>${product.price}</Typography>\r\n                            </CardContent>                       \r\n                        </Card>\r\n                        </Link>\r\n                    </Grid>\r\n                })}\r\n            </Grid>\r\n        ) : <Alert severity=\"warning\" sx={{display: 'block', minHeight: '70vh'}}>No Products Found...</Alert>\r\n            }        \r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListComponent\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\products\\ProductsComponent.js",["189"],"import React, {useState} from 'react'\r\nimport {Box, FormControl, InputLabel, Select, MenuItem, Container, Typography} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\n\r\nimport ProductListComponent from './ProductListComponent';\r\n\r\nconst ProductsComponent = ({ home = false, category}) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const handleFilters = (e) =>{\r\n        const value = e.target.value;\r\n        setFilters({\r\n            ...filters,\r\n            [e.target.name]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container sx={{mb: 5}}>\r\n            {category && <Typography variant=\"h3\">{category}</Typography>}\r\n            <Box className=\"product-filters\" sx={{ display: 'flex', marginTop: home ? '3rem' : '', justifyContent: 'space-between'}}>\r\n                <div className=\"left-section\">\r\n                    <div style={{display: 'flex', alignItems: 'center', marginRight: '1rem'}}>\r\n                        <Typography variant=\"h5\" sx={{fontSize: '1.5rem'}}>Filter Products:</Typography>\r\n                    </div>\r\n                    <Box sx={{ minWidth: 120, mr:3 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Size</InputLabel>\r\n                            <Select\r\n                                labelId=\"size\"\r\n                                label=\"Size\"\r\n                                name=\"size\"\r\n                                value={filters.size}\r\n                                onChange={(e)=>handleFilters(e)}\r\n                            >\r\n                                <MenuItem value={\"S\"}>Small</MenuItem>\r\n                                <MenuItem value={\"M\"}>Medium</MenuItem>\r\n                                <MenuItem value={\"L\"}>Large</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Color</InputLabel>\r\n                            <Select\r\n                                labelId=\"color\"\r\n                                label=\"color\"\r\n                                name=\"color\"\r\n                                value={filters.color}\r\n                                onChange={(e)=>handleFilters(e)}\r\n                            >\r\n                                <MenuItem value={\"black\"}>Black</MenuItem>\r\n                                <MenuItem value={\"yellow\"}>Yellow</MenuItem>\r\n                                <MenuItem value={\"orange\"}>Orange</MenuItem>\r\n                                <MenuItem value={\"blue\"}>Blue</MenuItem>\r\n                                <MenuItem value={\"khaki\"}>Khaki</MenuItem>\r\n                                <MenuItem value={\"beige\"}>Beige</MenuItem>\r\n                                <MenuItem value={\"pink\"}>Pink</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                </div>\r\n                <div className=\"right-section\">\r\n                    <div style={{display: 'flex', alignItems: 'center', marginRight: '1rem'}}>\r\n                        <Typography variant=\"h5\" sx={{fontSize: '1.5rem'}}>Sort Products:</Typography>\r\n                    </div>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Sort</InputLabel>\r\n                            <Select\r\n                                labelId=\"sort\"\r\n                                id=\"sort-select\"\r\n                                value={sort}\r\n                                label=\"sort\"\r\n                                name=\"sort\"\r\n                                onChange={(e) => {setSort(e.target.value)}}\r\n                            >\r\n                                <MenuItem value={\"newest\"}>Newest</MenuItem>\r\n                                <MenuItem value={\"desc\"}>Price: High To Low</MenuItem>\r\n                                <MenuItem value={\"asc\"}>Price: Low To High</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    </div>\r\n                </Box>\r\n                <ProductListComponent category={category} filters={filters} sort={sort}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductsComponent\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\AdminSidenav.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\ShowcaseComponent.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\admin\\Chart.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\admin\\LatestOrdersComponent.js",["190"],"import React from 'react';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nfunction createData(orderNumber, name, date, amount, status) {\r\n  return { orderNumber, name, date, amount, status };\r\n}\r\n\r\nconst rows = [\r\n  createData('#123', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#123', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#123', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#123', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n];\r\n\r\nconst LatestOrdersComponent = () => {\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align='center'>Order Number</TableCell>\r\n            <TableCell align='center'>Customer</TableCell>\r\n            <TableCell align='center'>Date</TableCell>\r\n            <TableCell align='center'>Amount</TableCell>\r\n            <TableCell align='center'>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              key={row.orderNumber}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component='th' scope='row' align='center'>\r\n                {row.orderNumber}\r\n              </TableCell>\r\n              <TableCell align='center'>{row.name}</TableCell>\r\n              <TableCell align='center'>{row.date}</TableCell>\r\n              <TableCell align='center'>{row.amount}</TableCell>\r\n              <TableCell align='center'>{row.status}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default LatestOrdersComponent;\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\admin\\NewUsersComponent.js",["191"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Box, Typography, Alert } from '@mui/material';\r\n\r\nconst NewUsersComponent = ({ users }) => {\r\n  const [newUsers, setNewUsers] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    !userInfo && navigate('/login?redirect=/admin');\r\n    userInfo && !userInfo.isAdmin && navigate('/');\r\n\r\n    const getNewUserInfo = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users?new=true`, config);\r\n\r\n        setNewUsers(data);\r\n      } catch (err) {\r\n        if (err) {\r\n          setMessage(err);\r\n        }\r\n      }\r\n    };\r\n    getNewUserInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {message && <Alert severity='error'>{message}</Alert>}\r\n      {newUsers &&\r\n        newUsers.map((user) => {\r\n          return (\r\n            <Box\r\n              sx={{ display: 'flex', justifyContent: 'space-between', my: 3 }}\r\n              key={user._id}\r\n            >\r\n              <Typography component='p' variant='p'>\r\n                {user.username}\r\n              </Typography>\r\n              <Typography component='p' variant='p'>\r\n                {user.email}\r\n              </Typography>\r\n            </Box>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewUsersComponent;\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\productTypes.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\userTypes.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\admin\\RevenueComponent.js",["192","193"],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","severity":1,"message":"199","line":8,"column":8,"nodeType":"200","messageId":"201","endLine":8,"endColumn":11},{"ruleId":"198","severity":1,"message":"202","line":5,"column":8,"nodeType":"200","messageId":"201","endLine":5,"endColumn":28},{"ruleId":"198","severity":1,"message":"203","line":9,"column":21,"nodeType":"200","messageId":"201","endLine":9,"endColumn":31},{"ruleId":"198","severity":1,"message":"204","line":10,"column":18,"nodeType":"200","messageId":"201","endLine":10,"endColumn":25},{"ruleId":"198","severity":1,"message":"205","line":10,"column":8,"nodeType":"200","messageId":"201","endLine":10,"endColumn":15},{"ruleId":"198","severity":1,"message":"206","line":26,"column":12,"nodeType":"200","messageId":"201","endLine":26,"endColumn":19},{"ruleId":"207","severity":1,"message":"208","line":33,"column":8,"nodeType":"209","endLine":33,"endColumn":10,"suggestions":"210"},{"ruleId":"207","severity":1,"message":"211","line":45,"column":8,"nodeType":"209","endLine":45,"endColumn":28,"suggestions":"212"},{"ruleId":"207","severity":1,"message":"213","line":77,"column":8,"nodeType":"209","endLine":77,"endColumn":27,"suggestions":"214"},{"ruleId":"207","severity":1,"message":"215","line":26,"column":8,"nodeType":"209","endLine":26,"endColumn":18,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":70,"column":25,"nodeType":"219","endLine":73,"endColumn":27},{"ruleId":"198","severity":1,"message":"220","line":8,"column":10,"nodeType":"200","messageId":"201","endLine":8,"endColumn":23},{"ruleId":"198","severity":1,"message":"221","line":20,"column":20,"nodeType":"200","messageId":"201","endLine":20,"endColumn":25},{"ruleId":"207","severity":1,"message":"208","line":24,"column":8,"nodeType":"209","endLine":24,"endColumn":12,"suggestions":"222"},{"ruleId":"207","severity":1,"message":"223","line":40,"column":8,"nodeType":"209","endLine":40,"endColumn":47,"suggestions":"224"},{"ruleId":"198","severity":1,"message":"221","line":14,"column":22,"nodeType":"200","messageId":"201","endLine":14,"endColumn":27},{"ruleId":"207","severity":1,"message":"225","line":18,"column":8,"nodeType":"209","endLine":18,"endColumn":10,"suggestions":"226"},{"ruleId":"217","severity":1,"message":"218","line":77,"column":25,"nodeType":"219","endLine":80,"endColumn":27},{"ruleId":"198","severity":1,"message":"227","line":4,"column":10,"nodeType":"200","messageId":"201","endLine":4,"endColumn":21},{"ruleId":"198","severity":1,"message":"228","line":7,"column":10,"nodeType":"200","messageId":"201","endLine":7,"endColumn":22},{"ruleId":"207","severity":1,"message":"215","line":68,"column":6,"nodeType":"209","endLine":68,"endColumn":14,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":29,"column":58,"nodeType":"232","messageId":"233","endLine":29,"endColumn":60},{"ruleId":"198","severity":1,"message":"234","line":3,"column":10,"nodeType":"200","messageId":"201","endLine":3,"endColumn":21},{"ruleId":"198","severity":1,"message":"235","line":9,"column":8,"nodeType":"200","messageId":"201","endLine":9,"endColumn":13},{"ruleId":"207","severity":1,"message":"215","line":39,"column":6,"nodeType":"209","endLine":39,"endColumn":8,"suggestions":"236"},{"ruleId":"198","severity":1,"message":"237","line":11,"column":10,"nodeType":"200","messageId":"201","endLine":11,"endColumn":17},{"ruleId":"207","severity":1,"message":"238","line":35,"column":6,"nodeType":"209","endLine":35,"endColumn":8,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'Pay' is defined but never used.","Identifier","unusedVar","'ProductListComponent' is defined but never used.","'setFilters' is assigned a value but never used.","'setSort' is assigned a value but never used.","'Spinner' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["242"],"React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'order'. Either include them or remove the dependency array.",["243"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo.token'. Either include them or remove the dependency array.",["244"],"React Hook useEffect has missing dependencies: 'navigate' and 'userInfo'. Either include them or remove the dependency array.",["245"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'CART_ADD_ITEM' is defined but never used.","'error' is assigned a value but never used.",["246"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["247"],"React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.",["248"],"'useDispatch' is defined but never used.","'getUserStats' is defined but never used.",["249"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useLocation' is defined but never used.","'Paper' is defined but never used.",["250"],"'message' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo.token'. Either include it or remove the dependency array.",["251"],"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},"Update the dependencies array to be: [dispatch]",{"range":"272","text":"273"},"Update the dependencies array to be: [dispatch, navigate, order, orderCreateSuccess]",{"range":"274","text":"275"},"Update the dependencies array to be: [stripeToken, cart, userInfo.token, dispatch]",{"range":"276","text":"277"},"Update the dependencies array to be: [dispatch, navigate, userInfo]",{"range":"278","text":"279"},"Update the dependencies array to be: [dispatch, id]",{"range":"280","text":"281"},"Update the dependencies array to be: [success, navigate, dispatch, userInfo, redirect]",{"range":"282","text":"283"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"284","text":"285"},"Update the dependencies array to be: [MONTHS, navigate, userInfo]",{"range":"286","text":"287"},"Update the dependencies array to be: [navigate, userInfo]",{"range":"288","text":"289"},"Update the dependencies array to be: [userInfo.token]",{"range":"290","text":"291"},[1276,1278],"[dispatch]",[1544,1564],"[dispatch, navigate, order, orderCreateSuccess]",[2740,2759],"[stripeToken, cart, userInfo.token, dispatch]",[852,862],"[dispatch, navigate, userInfo]",[947,951],"[dispatch, id]",[1319,1358],"[success, navigate, dispatch, userInfo, redirect]",[658,660],"[dispatch, params.id]",[1897,1905],"[MONTHS, navigate, userInfo]",[1108,1110],"[navigate, userInfo]",[1093,1095],"[userInfo.token]"]