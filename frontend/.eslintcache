[{"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\index.js":"1","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\App.js":"2","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\HomeScreen.js":"3","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\CartScreen.js":"4","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Navbar.js":"5","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\OrderSuccess.js":"6","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\assets\\theme.js":"7","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js":"8","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrdersScreen.js":"9","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductsListScreen.js":"10","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js":"11","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\RegisterScreen.js":"12","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\LoginScreen.js":"13","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\DashboardScreen.js":"14","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductsScreen.js":"15","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\CreateProductScreen.js":"16","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\store.js":"17","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductScreen.js":"18","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ShowcaseComponent.js":"19","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Spinner.js":"20","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductsComponent.js":"21","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductListComponent.js":"22","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\firebase.js":"23","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\cartActions.js":"24","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\userActions.js":"25","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js":"26","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\orderActions.js":"27","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\Chart.js":"28","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\AdminSidenav.js":"29","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js":"30","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\productAction.js":"31","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\LatestOrdersComponent.js":"32","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\NewUsersComponent.js":"33","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\RevenueComponent.js":"34","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\orderReducers.js":"35","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\userReducers.js":"36","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\productReducers.js":"37","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\cartReducers.js":"38","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\requestMethods.js":"39","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\userTypes.js":"40","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\productTypes.js":"41","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\AlertClosable.js":"42","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ProgressBar.js":"43","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\hooks\\useStorage.js":"44","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\UsersScreen.js":"45","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\TransactionsScreen.js":"46","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\UserTransactionsScreen.js":"47"},{"size":153,"mtime":1641764593377,"results":"48","hashOfConfig":"49"},{"size":5684,"mtime":1641769114100,"results":"50","hashOfConfig":"49"},{"size":355,"mtime":1637778632910,"results":"51","hashOfConfig":"49"},{"size":11977,"mtime":1641767238022,"results":"52","hashOfConfig":"49"},{"size":4426,"mtime":1641415944500,"results":"53","hashOfConfig":"49"},{"size":1548,"mtime":1640360419520,"results":"54","hashOfConfig":"49"},{"size":527,"mtime":1638827499680,"results":"55","hashOfConfig":"49"},{"size":6013,"mtime":1641752657011,"results":"56","hashOfConfig":"49"},{"size":3764,"mtime":1641767280219,"results":"57","hashOfConfig":"49"},{"size":791,"mtime":1638042042416,"results":"58","hashOfConfig":"49"},{"size":6578,"mtime":1641769057482,"results":"59","hashOfConfig":"49"},{"size":3490,"mtime":1641506798224,"results":"60","hashOfConfig":"49"},{"size":2414,"mtime":1641582423294,"results":"61","hashOfConfig":"49"},{"size":3395,"mtime":1641766927424,"results":"62","hashOfConfig":"49"},{"size":3971,"mtime":1641159770758,"results":"63","hashOfConfig":"49"},{"size":6096,"mtime":1641752641059,"results":"64","hashOfConfig":"49"},{"size":1931,"mtime":1639695441149,"results":"65","hashOfConfig":"49"},{"size":13338,"mtime":1641752656680,"results":"66","hashOfConfig":"49"},{"size":892,"mtime":1641506110142,"results":"67","hashOfConfig":"49"},{"size":297,"mtime":1637781129761,"results":"68","hashOfConfig":"49"},{"size":4281,"mtime":1641582135614,"results":"69","hashOfConfig":"49"},{"size":4352,"mtime":1641415194712,"results":"70","hashOfConfig":"49"},{"size":671,"mtime":1640037810919,"results":"71","hashOfConfig":"49"},{"size":895,"mtime":1641765128365,"results":"72","hashOfConfig":"49"},{"size":1992,"mtime":1640278196502,"results":"73","hashOfConfig":"49"},{"size":188,"mtime":1641582818451,"results":"74","hashOfConfig":"49"},{"size":1865,"mtime":1640036637665,"results":"75","hashOfConfig":"49"},{"size":702,"mtime":1638833498749,"results":"76","hashOfConfig":"49"},{"size":2124,"mtime":1641492614005,"results":"77","hashOfConfig":"49"},{"size":604,"mtime":1638656388978,"results":"78","hashOfConfig":"49"},{"size":3041,"mtime":1640728204514,"results":"79","hashOfConfig":"49"},{"size":2664,"mtime":1641767059267,"results":"80","hashOfConfig":"49"},{"size":1211,"mtime":1640736877306,"results":"81","hashOfConfig":"49"},{"size":2334,"mtime":1641766998110,"results":"82","hashOfConfig":"49"},{"size":1738,"mtime":1641582864423,"results":"83","hashOfConfig":"49"},{"size":1528,"mtime":1638832590507,"results":"84","hashOfConfig":"49"},{"size":2595,"mtime":1641582872450,"results":"85","hashOfConfig":"49"},{"size":1153,"mtime":1641764367202,"results":"86","hashOfConfig":"49"},{"size":366,"mtime":1640036077746,"results":"87","hashOfConfig":"49"},{"size":560,"mtime":1638832164896,"results":"88","hashOfConfig":"49"},{"size":1066,"mtime":1639695440878,"results":"89","hashOfConfig":"49"},{"size":952,"mtime":1640017072262,"results":"90","hashOfConfig":"49"},{"size":473,"mtime":1640186615277,"results":"91","hashOfConfig":"49"},{"size":1040,"mtime":1640128733876,"results":"92","hashOfConfig":"49"},{"size":3048,"mtime":1641159730631,"results":"93","hashOfConfig":"49"},{"size":4287,"mtime":1641159808736,"results":"94","hashOfConfig":"49"},{"size":4486,"mtime":1641752656676,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sa1lf3",{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"102"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"102"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"102"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"102"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"102"},"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\index.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\App.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\HomeScreen.js",[],["203","204"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\CartScreen.js",["205","206","207","208"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\OrderSuccess.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\assets\\theme.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js",["209","210"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n  Alert,\r\n} from '@mui/material';\r\nimport { getProductDetail } from '../../actions/productAction';\r\nimport Spinner from '../../components/Spinner';\r\nimport { addToCart } from '../../actions/cartActions';\r\n\r\nconst ProductDetailScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  const productDetail = useSelector((state) => state.productDetail);\r\n  let { loading, error, product } = productDetail;\r\n\r\n  useEffect(() => {\r\n    if (!product || !product._id || id !== product._id) {\r\n      dispatch(getProductDetail(id));\r\n    } else if (product) {\r\n      if (product.color.length === 1) {\r\n        setColor(product.color[0]);\r\n      }\r\n      if (product.size.length === 1) {\r\n        setSize(product.size[0]);\r\n      }\r\n    }\r\n  }, [id, product]);\r\n\r\n  const displaySize = (size) => {\r\n    if (size === 'S') {\r\n      return 'Small';\r\n    } else if (size === 'M') {\r\n      return 'Medium';\r\n    } else if (size === 'L') {\r\n      return 'Large';\r\n    }\r\n  };\r\n\r\n  const handleQuantity = (type) => {\r\n    if (type === 'sub') {\r\n      quantity > 1 && setQuantity(quantity - 1);\r\n    } else if (type === 'add') {\r\n      setQuantity(quantity + 1);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = () => {\r\n    if (!quantity || !color || !size) {\r\n      setMessage('Please select all fields');\r\n    } else {\r\n      setMessage('');\r\n      dispatch(\r\n        addToCart({\r\n          ...product,\r\n          quantity,\r\n          color,\r\n          totalPrice: quantity * product.price,\r\n          size,\r\n          productId: product._id + Date.now(),\r\n        })\r\n      );\r\n      setMessage('Added to cart!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='product-detail-container'>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          product &&\r\n          product._id && (\r\n            <Container>\r\n              <Typography\r\n                variant='h3'\r\n                sx={{ fontWeight: 'light', mt: 4, mb: 2, fontSize: 38 }}\r\n              >\r\n                {product.title}\r\n              </Typography>\r\n              <Grid container spacing={{ xs: 2, md: 3 }}>\r\n                <Grid item sx={{ width: '100%' }} xs={12} md={6}>\r\n                  <img src={product.image} alt={product.title} />\r\n                </Grid>\r\n                <Grid item sx={{ width: '100%' }} xs={12} md={6}>\r\n                  <Typography\r\n                    gutterbottom\r\n                    variant='h4'\r\n                    sx={{ fontWeight: 'light', my: 3 }}\r\n                  >\r\n                    $ {product.price}\r\n                  </Typography>\r\n                  <Typography gutterbottom variant='p' sx={{ lineHeight: 1.5 }}>\r\n                    {product.description}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', mt: 3, alignItems: 'center' }}>\r\n                    <Box sx={{ display: 'flex' }}>\r\n                      <Typography variant='p' sx={{ fontSize: 20, mr: 1 }}>\r\n                        Color\r\n                      </Typography>\r\n                      <div className='colors'>\r\n                        {product.color.map((c) => {\r\n                          return (\r\n                            <button\r\n                              className='color'\r\n                              style={{ backgroundColor: `${c}` }}\r\n                              key={c}\r\n                              onClick={() => setColor(c)}\r\n                            ></button>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </Box>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                      <FormControl fullWidth sx={{ ml: 4 }}>\r\n                        <InputLabel id='size'>Size</InputLabel>\r\n                        <Select\r\n                          labelId='size'\r\n                          id='size-select'\r\n                          value={size}\r\n                          label='Size'\r\n                          onChange={(e) => {\r\n                            setSize(e.target.value);\r\n                          }}\r\n                        >\r\n                          {product.size.map((size) => {\r\n                            return (\r\n                              <MenuItem value={size} key={size}>\r\n                                {displaySize(size)}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Box>\r\n                  </Box>\r\n                  <div className='quantity-counter'>\r\n                    <button onClick={() => handleQuantity('sub')}>\r\n                      <i class='fas fa-minus'></i>\r\n                    </button>\r\n                    <span className='number'>{quantity}</span>\r\n                    <button onClick={() => handleQuantity('add')}>\r\n                      <i class='fas fa-plus'></i>\r\n                    </button>\r\n                  </div>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='secondary'\r\n                    sx={{ mt: 4, display: 'inline-block', width: '100%' }}\r\n                    onClick={() => handleAddToCart()}\r\n                  >\r\n                    Add to cart\r\n                  </Button>\r\n                  {message && <Alert severity='info'>{message}</Alert>}\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          )\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetailScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrdersScreen.js",["211","212"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductsListScreen.js",["213","214","215"],"import React, {useState, useEffect} from 'react'\r\nimport {Box} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\nimport ProductListComponent from '../../components/products/ProductListComponent';\r\nimport ProductsComponent from '../../components/products/ProductsComponent';\r\n\r\nconst ProductsListScreen = ({ home=false }) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const location = useLocation();\r\n    const category = location.pathname.split('/')[3]\r\n\r\n    useEffect(() => {\r\n    }, [category])\r\n\r\n    return (\r\n        <Box sx={{mt: 3}}>\r\n            <ProductsComponent category={category} filters={filters} sort={sort}/>\r\n       </Box>\r\n    )\r\n}\r\n\r\nexport default ProductsListScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js",["216","217","218","219"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\RegisterScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\LoginScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\DashboardScreen.js",["220"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductsScreen.js",["221","222","223"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Container, Typography, Alert, Button } from '@mui/material';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { deleteProduct, getProducts } from '../../actions/productAction';\r\nimport Spinner from '../../components/Spinner';\r\nimport AlertClosable from '../../components/AlertClosable';\r\n\r\nconst ProductsScreen = () => {\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const { error: deleteError, success: successDelete } = productDelete;\r\n\r\n  useEffect(() => {\r\n    const history = createBrowserHistory();\r\n    if (history.location.state && history.location.state.successMessage) {\r\n      setSuccessMessage(location.state.successMessage);\r\n      let state = { ...history.location.state };\r\n      delete state.successMessage;\r\n      history.replace({ ...history.location, state });\r\n    }\r\n    dispatch(getProducts());\r\n  }, [successDelete, location]);\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this product?')) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: '_id', headerName: 'ID', width: 250 },\r\n    {\r\n      field: 'product',\r\n      headerName: 'Product',\r\n      width: 220,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className='productListItem'>\r\n            <img className='productListImg' src={params.row.image} alt='' />\r\n            {params.row.title}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    { field: 'inStock', headerName: 'Stock', width: 200 },\r\n    { field: 'price', headerName: 'Price', width: 160 },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/admin/products/${params.row._id}`}>\r\n              <Button\r\n                variant='contained'\r\n                size='small'\r\n                sx={{ mr: 3 }}\r\n                color='secondary'\r\n              >\r\n                Edit\r\n              </Button>\r\n            </Link>\r\n            <DeleteOutlineIcon\r\n              className='productListDelete'\r\n              onClick={() => handleDelete(params.row._id)}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{ minHeight: '90vh', mt: 4, mb: 5 }}>\r\n        <Typography variant='h4'>Products</Typography>\r\n        <Button variant='outlined' color='primary' sx={{ mt: 1, mb: 2, mr: 2 }}>\r\n          <Link to={'/admin'}>Admin Dashboard</Link>\r\n        </Button>\r\n        <Button variant='contained' color='secondary' sx={{ mt: 1, mb: 2 }}>\r\n          <Link to={'/admin/products/create'}>Create Product</Link>\r\n        </Button>\r\n        {loading && <Spinner />}\r\n        {error && <Alert severity='error'>{error}</Alert>}\r\n        {successMessage && (\r\n          <AlertClosable message={successMessage} variant='success' />\r\n        )}\r\n        {products && (\r\n          <div style={{ height: '800', width: '100%' }} className='productList'>\r\n            <DataGrid\r\n              rows={products}\r\n              disableSelectionOnClick\r\n              columns={columns}\r\n              getRowId={(row) => row._id}\r\n              pageSize={10}\r\n              checkboxSelection\r\n            />\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\CreateProductScreen.js",["224"],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  Typography,\r\n  TextField,\r\n  Alert,\r\n  Button,\r\n} from '@mui/material';\r\nimport ProgressBar from '../../components/ProgressBar';\r\nimport { createProduct } from '../../actions/productAction';\r\nimport { PRODUCT_CREATE_RESET } from '../../actions/actionTypes/productTypes';\r\n\r\nconst CreateProductScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n  const [categories, setCategories] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [price, setPrice] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const { error: successError, success: createSuccess } = productCreate;\r\n\r\n  const types = ['image/png', 'image/jpeg'];\r\n\r\n  const handleFileChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError('');\r\n    } else {\r\n      setFile(null);\r\n      setError('Please select an image file (png or jpg)');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title && description && url && categories && size && color && price) {\r\n      dispatch(\r\n        createProduct({\r\n          title,\r\n          description,\r\n          image: url,\r\n          categories: categories.map((item) => item.trim()),\r\n          size: size.map((item) => item.trim()),\r\n          color: color.map((item) => item.trim()),\r\n          price,\r\n        })\r\n      );\r\n    } else {\r\n      setMessage('Please enter all fields');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (createSuccess) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_RESET,\r\n      });\r\n      navigate('/admin/products', {\r\n        state: {\r\n          successMessage: 'Product Created!',\r\n        },\r\n      });\r\n    }\r\n  }, [createSuccess]);\r\n\r\n  return (\r\n    <Box sx={{ my: 5 }}>\r\n      <form\r\n        className='form-container create-product-form'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography textAlign='center' variant='h4'>\r\n          Create New Product\r\n        </Typography>\r\n        {successError && <Alert severity='error'>{successError}</Alert>}\r\n        {message && <Alert severity='error'>{message}</Alert>}\r\n        <div>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='title'\r\n              type='text'\r\n              label='Title'\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              variant='outlined'\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='description'\r\n              label='Description'\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              variant='outlined'\r\n              placeholder='Product description'\r\n              multiline\r\n              rows={5}\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='price'\r\n              type='number'\r\n              label='Price'\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n              variant='outlined'\r\n              inputProps={{ inputMode: 'numeric', min: '0' }}\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='color'\r\n              type='text'\r\n              label='Color'\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value.split(','))}\r\n              variant='outlined'\r\n              helperText='e.g blue, red, green'\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='categories'\r\n              type='text'\r\n              label='Categories'\r\n              value={categories}\r\n              onChange={(e) => setCategories(e.target.value.split(','))}\r\n              variant='outlined'\r\n              helperText='e.g shirt, jacket, shoes'\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='size'\r\n              type='text'\r\n              label='Sizes'\r\n              value={size}\r\n              onChange={(e) => setSize(e.target.value.split(','))}\r\n              variant='outlined'\r\n              helperText='e.g S, M, L, XL, XXL'\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='file'\r\n              type='file'\r\n              onChange={handleFileChange}\r\n              variant='outlined'\r\n              required\r\n            />\r\n          </FormControl>\r\n          <div className='file-output'>\r\n            {error && <Alert severity='warning'>{error}</Alert>}\r\n            {file && (\r\n              <ProgressBar\r\n                file={file}\r\n                setFile={setFile}\r\n                url={url}\r\n                setUrl={setUrl}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Button\r\n          variant='contained'\r\n          sx={{ mt: 5, width: '100%' }}\r\n          type='submit'\r\n          // disabled={progress ? true : false}\r\n        >\r\n          Create\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateProductScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\store.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductScreen.js",["225","226","227","228","229"],"import { useEffect, useMemo, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Alert,\r\n  Avatar,\r\n  FormControl,\r\n  TextField,\r\n  Button,\r\n} from '@mui/material';\r\nimport Chart from '../../components/admin/Chart';\r\nimport AdminSidenav from '../../components/admin/AdminSidenav';\r\nimport { useParams } from 'react-router';\r\nimport { getProductDetail, updateProduct } from '../../actions/productAction';\r\nimport { userRequest } from '../../requestMethods';\r\nimport ProgressBar from '../../components/ProgressBar';\r\nimport AlertClosable from '../../components/AlertClosable';\r\nimport { PRODUCT_UPDATE_RESET } from '../../actions/actionTypes/productTypes';\r\n\r\nconst ProductScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [successUpdateMessage, setSuccessUpdateMessage] = useState('');\r\n  const [pStats, setPStats] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [file, setFile] = useState('');\r\n  const [url, setUrl] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [categories, setCategories] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [price, setPrice] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const { id: productId } = useParams();\r\n\r\n  const productDetail = useSelector((state) => state.productDetail);\r\n  let { loading, error: detailError, product } = productDetail;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  let {\r\n    success: successUpdate,\r\n    error: successError,\r\n    product: updatedProduct,\r\n  } = productUpdate;\r\n\r\n  const types = ['image/png', 'image/jpeg'];\r\n\r\n  const handleFileChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError('');\r\n    } else {\r\n      setFile(null);\r\n      setError('Please select an image file (png or jpg)');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (url) {\r\n      dispatch(\r\n        updateProduct(product._id, {\r\n          title,\r\n          description,\r\n          image: url,\r\n          categories: categories.map((item) => item.trim()),\r\n          size: size.map((item) => item.trim()),\r\n          color: color.map((item) => item.trim()),\r\n          price,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        updateProduct(product._id, {\r\n          title,\r\n          description,\r\n          categories: categories.map((item) => item.trim()),\r\n          size: size.map((item) => item.trim()),\r\n          color: color.map((item) => item.trim()),\r\n          price,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!product || product._id !== productId || updatedProduct) {\r\n      dispatch(getProductDetail(productId));\r\n    } else {\r\n      setTitle(product.title);\r\n      setDescription(product.description);\r\n      setColor(product.color.join(', '));\r\n      setSize(product.size.join(', '));\r\n      setCategories(product.categories.join(', '));\r\n      setPrice(product.price);\r\n    }\r\n  }, [productId, product, updatedProduct]);\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_RESET,\r\n      });\r\n      setSuccessUpdateMessage('Product Updated');\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [successUpdate]);\r\n\r\n  const MONTHS = useMemo(\r\n    () => [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec',\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getStats = async () => {\r\n      try {\r\n        const { data } = await userRequest.get(\r\n          '/orders/stats?pid=' + productId\r\n        );\r\n        const list = data.sort((a, b) => {\r\n          return a._id - b._id;\r\n        });\r\n        list.map((item) =>\r\n          setPStats((prev) => [\r\n            ...prev,\r\n            { name: MONTHS[item._id - 1], Sales: item.total },\r\n          ])\r\n        );\r\n      } catch (err) {\r\n        setMessage(err);\r\n      }\r\n    };\r\n    getStats();\r\n  }, [MONTHS, productId]);\r\n\r\n  return (\r\n    <Box sx={{ minHeight: '85vh' }}>\r\n      <Typography\r\n        variant='h4'\r\n        sx={{ my: 3, paddingLeft: '1rem' }}\r\n        align='center'\r\n      >\r\n        {product && product.title}\r\n      </Typography>\r\n      {message && <Alert severity='error'>{message}</Alert>}\r\n      {successUpdateMessage && (\r\n        <AlertClosable message={successUpdateMessage} variant='success' />\r\n      )}\r\n      {detailError && <Alert severity='error'>{detailError}</Alert>}\r\n      <Grid container spacing={2} sx={{ mt: 4 }}>\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          md={2}\r\n          sx={{ marginLeft: '0.5rem', backgroundColor: '#F2F2F5' }}\r\n        >\r\n          <AdminSidenav />\r\n        </Grid>\r\n        {product && (\r\n          <>\r\n            <Grid item xs={6} md={9}>\r\n              <Button variant='contained' color='secondary' sx={{ mb: 3 }}>\r\n                <Link to={`/products/${product._id}`}>View Product Page</Link>\r\n              </Button>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Paper elevation={3} sx={{ padding: '2rem', width: '48%' }}>\r\n                  <Chart\r\n                    data={pStats}\r\n                    dataKey='Sales'\r\n                    title='Sales Performance'\r\n                  />\r\n                </Paper>\r\n                <Paper elevation={3} sx={{ padding: '2rem', width: '48%' }}>\r\n                  <Box sx={{ display: 'flex', mb: 3 }}>\r\n                    <Avatar alt={product.title} src={product.image} />\r\n                    <Typography\r\n                      component='p'\r\n                      sx={{ ml: 2, alignSelf: 'center', fontWeight: 600 }}\r\n                    >\r\n                      {product.title}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '70%',\r\n                    }}\r\n                  >\r\n                    <Typography component='p'>Id:</Typography>\r\n                    <Typography component='p'>{product._id}</Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '70%',\r\n                    }}\r\n                  >\r\n                    <Typography component='p'>Sales:</Typography>\r\n                    <Typography component='p'>{product.title}</Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '70%',\r\n                    }}\r\n                  >\r\n                    <Typography component='p'>Active:</Typography>\r\n                    <Typography component='p'>true</Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '70%',\r\n                    }}\r\n                  >\r\n                    <Typography component='p'>In stock:</Typography>\r\n                    <Typography component='p'>\r\n                      {product.inStock ? 'true' : 'false'}\r\n                    </Typography>\r\n                  </Box>\r\n                </Paper>\r\n              </Box>\r\n              <Box sx={{ mt: 3 }}>\r\n                <Paper elevation={3} sx={{ padding: '2rem', width: '100%' }}>\r\n                  <Typography\r\n                    variant='p'\r\n                    sx={{ fontWeight: 600, fontSize: 20, mb: 3 }}\r\n                  >\r\n                    Edit Product\r\n                  </Typography>\r\n                  <Box\r\n                    sx={{ display: 'flex', justifyContent: 'space-between' }}\r\n                  >\r\n                    <form\r\n                      className='product-update-form'\r\n                      onSubmit={handleSubmit}\r\n                    >\r\n                      {message && <Alert severity='error'>{message}</Alert>}\r\n                      <div>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='title'\r\n                            type='text'\r\n                            label='Title'\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            variant='standard'\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='description'\r\n                            label='Description'\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            variant='outlined'\r\n                            placeholder='Product description'\r\n                            multiline\r\n                            rows={5}\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='price'\r\n                            type='number'\r\n                            label='Price'\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                            variant='standard'\r\n                            inputProps={{ inputMode: 'numeric', min: '0' }}\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='color'\r\n                            type='text'\r\n                            label='Color'\r\n                            value={color}\r\n                            onChange={(e) =>\r\n                              setColor(e.target.value.split(','))\r\n                            }\r\n                            variant='standard'\r\n                            helperText='e.g blue, red, green'\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='categories'\r\n                            type='text'\r\n                            label='Categories'\r\n                            value={categories}\r\n                            onChange={(e) =>\r\n                              setCategories(e.target.value.split(','))\r\n                            }\r\n                            variant='standard'\r\n                            helperText='e.g shirt, jacket, shoes'\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='size'\r\n                            type='text'\r\n                            label='Sizes'\r\n                            value={size}\r\n                            onChange={(e) => setSize(e.target.value.split(','))}\r\n                            variant='standard'\r\n                            helperText='e.g S, M, L, XL, XXL'\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='file'\r\n                            type='file'\r\n                            onChange={handleFileChange}\r\n                            variant='outlined'\r\n                          />\r\n                        </FormControl>\r\n                        <div className='file-output'>\r\n                          {error && <Alert severity='warning'>{error}</Alert>}\r\n                          {file && (\r\n                            <ProgressBar\r\n                              file={file}\r\n                              setFile={setFile}\r\n                              url={url}\r\n                              setUrl={setUrl}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <Button\r\n                        variant='contained'\r\n                        sx={{ mt: 5, width: '100%' }}\r\n                        type='submit'\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                    </form>\r\n                    <img className='admin-product-image' src={product.image} />\r\n                  </Box>\r\n                </Paper>\r\n              </Box>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ShowcaseComponent.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductsComponent.js",["230"],"import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Container,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport ProductListComponent from './ProductListComponent';\r\n\r\nconst ProductsComponent = ({ home = false, category }) => {\r\n  const [filters, setFilters] = useState({ color: '', size: '' });\r\n  const [sort, setSort] = useState('newest');\r\n\r\n  const handleFilters = (e) => {\r\n    const value = e.target.value;\r\n    setFilters({\r\n      ...filters,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n\r\n  function titleCase(string) {\r\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\r\n  }\r\n\r\n  return (\r\n    <Container sx={{ paddingBottom: '2rem', minHeight: '85vh' }}>\r\n      {category && <Typography variant='h4'>{titleCase(category)}</Typography>}\r\n      <Box\r\n        className='product-filters'\r\n        sx={{\r\n          marginTop: home ? '3rem' : '',\r\n        }}\r\n      >\r\n        <div className='left-section'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginRight: '1rem',\r\n            }}\r\n          >\r\n            <Typography variant='h5' sx={{ fontSize: '1.5rem' }}>\r\n              Filter:\r\n            </Typography>\r\n          </div>\r\n          <Box sx={{ minWidth: 120, mr: 3 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='size'>Size</InputLabel>\r\n              <Select\r\n                labelId='size'\r\n                label='Size'\r\n                name='size'\r\n                value={filters.size}\r\n                onChange={(e) => handleFilters(e)}\r\n              >\r\n                <MenuItem value={'S'}>Small</MenuItem>\r\n                <MenuItem value={'M'}>Medium</MenuItem>\r\n                <MenuItem value={'L'}>Large</MenuItem>\r\n                <MenuItem value={'XL'}>X-Large</MenuItem>\r\n                <MenuItem value={'XXL'}>XX-Large</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Box sx={{ minWidth: 120 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='size'>Color</InputLabel>\r\n              <Select\r\n                labelId='color'\r\n                label='color'\r\n                name='color'\r\n                value={filters.color}\r\n                onChange={(e) => handleFilters(e)}\r\n              >\r\n                <MenuItem value={'black'}>Black</MenuItem>\r\n                <MenuItem value={'yellow'}>Yellow</MenuItem>\r\n                <MenuItem value={'orange'}>Orange</MenuItem>\r\n                <MenuItem value={'blue'}>Blue</MenuItem>\r\n                <MenuItem value={'khaki'}>Khaki</MenuItem>\r\n                <MenuItem value={'beige'}>Beige</MenuItem>\r\n                <MenuItem value={'pink'}>Pink</MenuItem>\r\n                <MenuItem value={'gray'}>Gray</MenuItem>\r\n                <MenuItem value={'white'}>White</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </div>\r\n        <div className='right-section'>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginRight: '1rem',\r\n            }}\r\n          >\r\n            <Typography variant='h5' sx={{ fontSize: '1.5rem' }}>\r\n              Sort:\r\n            </Typography>\r\n          </div>\r\n          <Box sx={{ minWidth: 120 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel id='size'>Sort</InputLabel>\r\n              <Select\r\n                labelId='sort'\r\n                id='sort-select'\r\n                value={sort}\r\n                label='sort'\r\n                name='sort'\r\n                onChange={(e) => {\r\n                  setSort(e.target.value);\r\n                }}\r\n              >\r\n                <MenuItem value={'newest'}>Newest</MenuItem>\r\n                <MenuItem value={'desc'}>Price: High To Low</MenuItem>\r\n                <MenuItem value={'asc'}>Price: Low To High</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </div>\r\n      </Box>\r\n      <ProductListComponent category={category} filters={filters} sort={sort} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProductsComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductListComponent.js",["231"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Alert,\r\n} from '@mui/material';\r\nimport { getProducts } from '../../actions/productAction';\r\nimport Spinner from '../Spinner';\r\n\r\nconst ProductListComponent = ({ category, filters, sort }) => {\r\n  const [displayProducts, setDisplayProducts] = useState([]);\r\n  const [currentFilters, setCurrentFilters] = useState({});\r\n  const [currentCategory, setCurrentCategory] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  let { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    if (currentCategory !== category) {\r\n      setCurrentCategory(category);\r\n      dispatch(getProducts(category));\r\n    }\r\n  }, [category, currentCategory, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      products &&\r\n      !Object.values(filters).every((x) => x === '') &&\r\n      filters !== currentFilters\r\n    ) {\r\n      setCurrentFilters(filters);\r\n      setDisplayProducts(\r\n        products.filter((product) => {\r\n          for (const [key, value] of Object.entries(filters)) {\r\n            if (value !== '') {\r\n              return product[key].includes(value);\r\n            }\r\n          }\r\n        })\r\n      );\r\n    } else if (products && Object.keys(currentFilters).length === 0) {\r\n      setDisplayProducts(products);\r\n    }\r\n  }, [products, filters, currentFilters]);\r\n\r\n  useEffect(() => {\r\n    if (sort === 'newest') {\r\n      setDisplayProducts((prev) =>\r\n        [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n      );\r\n    } else if (sort === 'asc') {\r\n      setDisplayProducts((prev) => [...prev].sort((a, b) => a.price - b.price));\r\n    } else {\r\n      setDisplayProducts((prev) => [...prev].sort((a, b) => b.price - a.price));\r\n    }\r\n  }, [sort]);\r\n\r\n  // filteredProducts ? show filtered products : show all products\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : displayProducts && displayProducts.length > 0 ? (\r\n        <Grid\r\n          className='products-container'\r\n          container\r\n          spacing={{ xs: 2, md: 3 }}\r\n          sx={{ minHeight: '70vh' }}\r\n        >\r\n          {error && <Alert severity='error'>{error}</Alert>}\r\n          {displayProducts.map((product, index) => {\r\n            return (\r\n              <Grid\r\n                className='product-item'\r\n                item\r\n                sx={{ width: '100%' }}\r\n                xs={12}\r\n                sm={6}\r\n                md={4}\r\n                lg={3}\r\n                key={index}\r\n              >\r\n                <Link to={`/products/${product._id}`}>\r\n                  <Card sx={{ width: '100%' }}>\r\n                    <CardMedia\r\n                      component='img'\r\n                      height='300'\r\n                      image={product.image}\r\n                      alt={product.title}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant='p'\r\n                        sx={{\r\n                          color: 'text.primary',\r\n                          fontSize: 22,\r\n                          fontWeight: 'medium',\r\n                        }}\r\n                        className='product-title'\r\n                      >\r\n                        {product.title}\r\n                      </Typography>\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant='p'\r\n                        sx={{\r\n                          display: 'block',\r\n                          color: 'text.primary',\r\n                          fontSize: 18,\r\n                          fontWeight: 'medium',\r\n                        }}\r\n                      >\r\n                        ${product.price}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Link>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      ) : (\r\n        <Alert severity='warning' sx={{ my: 3 }}>\r\n          No Products Found...\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\firebase.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\userActions.js",["232","233","234","235"],"import { publicRequest, userRequest } from '../requestMethods';\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_LOGOUT,\r\n  USER_STATS_FAIL,\r\n  USER_STATS_REQUEST,\r\n  USER_STATS_SUCCESS,\r\n} from './actionTypes/userTypes';\r\n\r\nexport const register = (username, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const { data } = await publicRequest.post('/auth/register', {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    window.location.reload();\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const { data } = await publicRequest.post('/auth/login', {\r\n      username,\r\n      password,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    window.location.reload();\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  window.location.reload();\r\n  dispatch({ type: USER_LOGOUT });\r\n  // dispatch({ type: USER_DETAILS_RESET })\r\n  // dispatch({ type: ORDER_LIST_MY_RESET })\r\n};\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\Chart.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\AdminSidenav.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\productAction.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\LatestOrdersComponent.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\NewUsersComponent.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\RevenueComponent.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\requestMethods.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\userTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\productTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\AlertClosable.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ProgressBar.js",["236"],"import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\n\r\nconst ProgressBar = ({ file, setFile, url, setUrl }) => {\r\n  const { progress, url: downloadedUrl } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (downloadedUrl) {\r\n      setFile(null);\r\n      setUrl(downloadedUrl);\r\n    }\r\n  }, [downloadedUrl, setFile]);\r\n\r\n  return <div className='progress-bar' style={{ width: progress + '%' }}></div>;\r\n};\r\n\r\nexport default ProgressBar;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\hooks\\useStorage.js",["237"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n  getDownloadURL,\r\n} from 'firebase/storage';\r\nimport app from '../firebase';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fileName = new Date().getTime() + file.name;\r\n    const storage = getStorage(app);\r\n    const storageRef = ref(storage, fileName);\r\n\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await getDownloadURL(uploadTask.snapshot.ref);\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\UsersScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\TransactionsScreen.js",["238"],"import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Typography, Alert, Button, Box } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Spinner from '../../components/Spinner';\r\nimport { userRequest } from '../../requestMethods';\r\nimport AlertClosable from '../../components/AlertClosable';\r\n\r\nconst TransactionsScreen = () => {\r\n  const [orders, setOrders] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [updateSuccess, setUpdateSuccess] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    setUpdateSuccess(false);\r\n    const getOrders = async () => {\r\n      try {\r\n        const { data } = await userRequest.get(`/orders`);\r\n        setOrders(data);\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n    getOrders();\r\n  }, [updateSuccess]);\r\n\r\n  const updateOrderStatus = async (orderId) => {\r\n    if (window.confirm('Are you sure you want to update this order?')) {\r\n      try {\r\n        await userRequest.put(`/orders/${orderId}`, {\r\n          status: 'completed',\r\n        });\r\n        setUpdateSuccess(true);\r\n        setSuccessMessage('Order Updated!');\r\n      } catch (error) {\r\n        setMessage(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  function titleCase(string) {\r\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\r\n  }\r\n\r\n  const displayDate = (date) => {\r\n    const newDate = new Date(date);\r\n    return moment(newDate).format('MM/DD/YYYY');\r\n  };\r\n\r\n  const columns = [\r\n    { field: '_id', headerName: 'ID', width: 250 },\r\n    { field: 'user', headerName: 'User', width: 200 },\r\n    {\r\n      field: 'user',\r\n      headerName: 'User',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Typography>\r\n              {titleCase(params.row.user.username)} - {params.row.user._id}\r\n            </Typography>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return <Typography>${params.row.amount}</Typography>;\r\n      },\r\n    },\r\n    { field: 'amount', headerName: 'Amount', width: 150 },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Date Ordered',\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Typography>{displayDate(params.row.createdAt)}</Typography>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Button\r\n              variant='contained'\r\n              size='small'\r\n              onClick={\r\n                params.row.status === 'pending'\r\n                  ? () => updateOrderStatus(params.row._id)\r\n                  : undefined\r\n              }\r\n              style={{\r\n                backgroundColor:\r\n                  params.row.status === 'pending' ? 'red' : 'green',\r\n              }}\r\n            >\r\n              {params.row.status}\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{ minHeight: '85vh', mt: 4 }}>\r\n        {' '}\r\n        <Typography variant='h4'>Transactions</Typography>\r\n        <Button variant='outlined' color='primary' sx={{ mt: 1, mb: 2, mr: 2 }}>\r\n          <Link to={'/admin'}>Admin Dashboard</Link>\r\n        </Button>\r\n        {!orders && <Spinner />}\r\n        {message && <Alert severity='error'>{message}</Alert>}\r\n        {successMessage && (\r\n          <AlertClosable message={successMessage} variant='succesS' />\r\n        )}\r\n        {orders && (\r\n          <div\r\n            style={{ height: '800', width: '100%', marginTop: '1rem' }}\r\n            className='productList'\r\n          >\r\n            <DataGrid\r\n              rows={orders}\r\n              disableSelectionOnClick\r\n              columns={columns}\r\n              getRowId={(row) => row._id}\r\n              pageSize={10}\r\n              checkboxSelection\r\n            />\r\n          </div>\r\n        )}\r\n      </Container>{' '}\r\n    </>\r\n  );\r\n};\r\nexport default TransactionsScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\UserTransactionsScreen.js",["239","240"],"import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router';\r\nimport { Container, Typography, Alert, Button, Box } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Spinner from '../../components/Spinner';\r\nimport { userRequest } from '../../requestMethods';\r\nimport AlertClosable from '../../components/AlertClosable';\r\n\r\nconst UserTransactionsScreen = () => {\r\n  const [orders, setOrders] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [updateSuccess, setUpdateSuccess] = useState(false);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    setUpdateSuccess(false);\r\n    const getUserOrders = async () => {\r\n      try {\r\n        const { data } = await userRequest.get(`/orders/find/${id}`);\r\n        setOrders(data);\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n    getUserOrders();\r\n  }, [updateSuccess]);\r\n\r\n  const updateOrderStatus = async (orderId) => {\r\n    if (window.confirm('Are you sure you want to update this order?')) {\r\n      try {\r\n        await userRequest.put(`/orders/${orderId}`, {\r\n          status: 'completed',\r\n        });\r\n        setUpdateSuccess(true);\r\n        setSuccessMessage('Order Updated!');\r\n      } catch (error) {\r\n        setMessage(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  function titleCase(string) {\r\n    return string[0].toUpperCase() + string.slice(1).toLowerCase();\r\n  }\r\n\r\n  const displayDate = (date) => {\r\n    const newDate = new Date(date);\r\n    return moment(newDate).format('MM/DD/YYYY');\r\n  };\r\n\r\n  const columns = [\r\n    { field: '_id', headerName: 'ID', width: 250 },\r\n    { field: 'user', headerName: 'User', width: 200 },\r\n    {\r\n      field: 'user',\r\n      headerName: 'User',\r\n      width: 300,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Typography>\r\n              {titleCase(params.row.user.username)} - {params.row.user._id}\r\n            </Typography>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: 'amount',\r\n      headerName: 'Amount',\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        return <Typography>${params.row.amount}</Typography>;\r\n      },\r\n    },\r\n    { field: 'amount', headerName: 'Amount', width: 150 },\r\n    {\r\n      field: 'createdAt',\r\n      headerName: 'Date Ordered',\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Typography>{displayDate(params.row.createdAt)}</Typography>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: 'status',\r\n      headerName: 'Status',\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Button\r\n              variant='contained'\r\n              size='small'\r\n              onClick={\r\n                params.row.status === 'pending'\r\n                  ? () => updateOrderStatus(params.row._id)\r\n                  : undefined\r\n              }\r\n              style={{\r\n                backgroundColor:\r\n                  params.row.status === 'pending' ? 'red' : 'green',\r\n              }}\r\n            >\r\n              {params.row.status}\r\n            </Button>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{ minHeight: '85vh', mt: 4 }}>\r\n        {' '}\r\n        <Typography variant='h4'>User Transactions</Typography>\r\n        <Button variant='outlined' color='primary' sx={{ mt: 1, mb: 2, mr: 2 }}>\r\n          <Link to={'/admin'}>Admin Dashboard</Link>\r\n        </Button>\r\n        {!orders && <Spinner />}\r\n        {message && <Alert severity='error'>{message}</Alert>}\r\n        {successMessage && (\r\n          <AlertClosable message={successMessage} variant='succesS' />\r\n        )}\r\n        {orders && orders.length > 0 ? (\r\n          <div\r\n            style={{ height: '800', width: '100%', marginTop: '1rem' }}\r\n            className='productList'\r\n          >\r\n            <DataGrid\r\n              rows={orders}\r\n              disableSelectionOnClick\r\n              columns={columns}\r\n              getRowId={(row) => row._id}\r\n              pageSize={10}\r\n              checkboxSelection\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Alert>No orders found for this user</Alert>\r\n        )}\r\n      </Container>{' '}\r\n    </>\r\n  );\r\n};\r\nexport default UserTransactionsScreen;\r\n",{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":34,"column":11,"nodeType":"247","messageId":"248","endLine":34,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":41,"column":6,"nodeType":"251","endLine":41,"endColumn":8,"suggestions":"252"},{"ruleId":"249","severity":1,"message":"253","line":53,"column":6,"nodeType":"251","endLine":53,"endColumn":26,"suggestions":"254"},{"ruleId":"249","severity":1,"message":"250","line":82,"column":6,"nodeType":"251","endLine":82,"endColumn":25,"suggestions":"255"},{"ruleId":"245","severity":1,"message":"256","line":30,"column":18,"nodeType":"247","messageId":"248","endLine":30,"endColumn":23},{"ruleId":"249","severity":1,"message":"250","line":43,"column":6,"nodeType":"251","endLine":43,"endColumn":19,"suggestions":"257"},{"ruleId":"245","severity":1,"message":"258","line":3,"column":16,"nodeType":"247","messageId":"248","endLine":3,"endColumn":27},{"ruleId":"259","severity":1,"message":"260","line":92,"column":25,"nodeType":"261","endLine":92,"endColumn":64},{"ruleId":"245","severity":1,"message":"262","line":5,"column":8,"nodeType":"247","messageId":"248","endLine":5,"endColumn":28},{"ruleId":"245","severity":1,"message":"263","line":9,"column":21,"nodeType":"247","messageId":"248","endLine":9,"endColumn":31},{"ruleId":"245","severity":1,"message":"264","line":10,"column":18,"nodeType":"247","messageId":"248","endLine":10,"endColumn":25},{"ruleId":"245","severity":1,"message":"265","line":4,"column":38,"nodeType":"247","messageId":"248","endLine":4,"endColumn":44},{"ruleId":"245","severity":1,"message":"256","line":14,"column":20,"nodeType":"247","messageId":"248","endLine":14,"endColumn":25},{"ruleId":"249","severity":1,"message":"266","line":18,"column":6,"nodeType":"251","endLine":18,"endColumn":8,"suggestions":"267"},{"ruleId":"259","severity":1,"message":"260","line":166,"column":23,"nodeType":"261","endLine":166,"endColumn":62},{"ruleId":"245","severity":1,"message":"268","line":4,"column":10,"nodeType":"247","messageId":"248","endLine":4,"endColumn":22},{"ruleId":"245","severity":1,"message":"269","line":7,"column":8,"nodeType":"247","messageId":"248","endLine":7,"endColumn":29},{"ruleId":"245","severity":1,"message":"270","line":23,"column":18,"nodeType":"247","messageId":"248","endLine":23,"endColumn":29},{"ruleId":"249","severity":1,"message":"250","line":34,"column":6,"nodeType":"251","endLine":34,"endColumn":31,"suggestions":"271"},{"ruleId":"249","severity":1,"message":"272","line":78,"column":6,"nodeType":"251","endLine":78,"endColumn":21,"suggestions":"273"},{"ruleId":"245","severity":1,"message":"246","line":42,"column":9,"nodeType":"247","messageId":"248","endLine":42,"endColumn":16},{"ruleId":"245","severity":1,"message":"274","line":47,"column":12,"nodeType":"247","messageId":"248","endLine":47,"endColumn":24},{"ruleId":"249","severity":1,"message":"250","line":104,"column":6,"nodeType":"251","endLine":104,"endColumn":42,"suggestions":"275"},{"ruleId":"249","severity":1,"message":"250","line":114,"column":6,"nodeType":"251","endLine":114,"endColumn":21,"suggestions":"276"},{"ruleId":"277","severity":1,"message":"278","line":362,"column":21,"nodeType":"261","endLine":362,"endColumn":80},{"ruleId":"245","severity":1,"message":"279","line":11,"column":10,"nodeType":"247","messageId":"248","endLine":11,"endColumn":21},{"ruleId":"280","severity":1,"message":"281","line":40,"column":35,"nodeType":"282","messageId":"283","endLine":40,"endColumn":37},{"ruleId":"245","severity":1,"message":"284","line":1,"column":25,"nodeType":"247","messageId":"248","endLine":1,"endColumn":36},{"ruleId":"245","severity":1,"message":"285","line":10,"column":3,"nodeType":"247","messageId":"248","endLine":10,"endColumn":18},{"ruleId":"245","severity":1,"message":"286","line":11,"column":3,"nodeType":"247","messageId":"248","endLine":11,"endColumn":21},{"ruleId":"245","severity":1,"message":"287","line":12,"column":3,"nodeType":"247","messageId":"248","endLine":12,"endColumn":21},{"ruleId":"249","severity":1,"message":"288","line":12,"column":6,"nodeType":"251","endLine":12,"endColumn":30,"suggestions":"289"},{"ruleId":"245","severity":1,"message":"290","line":1,"column":8,"nodeType":"247","messageId":"248","endLine":1,"endColumn":13},{"ruleId":"245","severity":1,"message":"291","line":4,"column":48,"nodeType":"247","messageId":"248","endLine":4,"endColumn":51},{"ruleId":"245","severity":1,"message":"291","line":5,"column":48,"nodeType":"247","messageId":"248","endLine":5,"endColumn":51},{"ruleId":"249","severity":1,"message":"292","line":30,"column":6,"nodeType":"251","endLine":30,"endColumn":21,"suggestions":"293"},"no-native-reassign",["294"],"no-negated-in-lhs",["295"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["296"],"React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'order'. Either include them or remove the dependency array.",["297"],["298"],"'error' is assigned a value but never used.",["299"],"'useNavigate' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'ProductListComponent' is defined but never used.","'setFilters' is assigned a value but never used.","'setSort' is assigned a value but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.",["300"],"'getUserStats' is defined but never used.","'KeyboardArrowLeftIcon' is defined but never used.","'deleteError' is assigned a value but never used.",["301"],"React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.",["302"],"'successError' is assigned a value but never used.",["303"],["304"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useLocation' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'userRequest' is defined but never used.","'USER_STATS_FAIL' is defined but never used.","'USER_STATS_REQUEST' is defined but never used.","'USER_STATS_SUCCESS' is defined but never used.","React Hook useEffect has a missing dependency: 'setUrl'. Either include it or remove the dependency array. If 'setUrl' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["305"],"'React' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["306"],"no-global-assign","no-unsafe-negation",{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},"Update the dependencies array to be: [dispatch]",{"range":"329","text":"330"},"Update the dependencies array to be: [dispatch, navigate, order, orderCreateSuccess]",{"range":"331","text":"332"},"Update the dependencies array to be: [stripeToken, cart, dispatch]",{"range":"333","text":"334"},"Update the dependencies array to be: [dispatch, id, product]",{"range":"335","text":"336"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"337","text":"338"},"Update the dependencies array to be: [successDelete, location, dispatch]",{"range":"339","text":"340"},"Update the dependencies array to be: [createSuccess, dispatch, navigate]",{"range":"341","text":"342"},"Update the dependencies array to be: [productId, product, updatedProduct, dispatch]",{"range":"343","text":"344"},"Update the dependencies array to be: [dispatch, successUpdate]",{"range":"345","text":"346"},"Update the dependencies array to be: [downloadedUrl, setFile, setUrl]",{"range":"347","text":"348"},"Update the dependencies array to be: [id, updateSuccess]",{"range":"349","text":"350"},[1339,1341],"[dispatch]",[1588,1608],"[dispatch, navigate, order, orderCreateSuccess]",[2481,2500],"[stripeToken, cart, dispatch]",[1221,1234],"[dispatch, id, product]",[659,661],"[dispatch, params.id]",[1478,1503],"[successDelete, location, dispatch]",[2291,2306],"[createSuccess, dispatch, navigate]",[3261,3297],"[productId, product, updatedProduct, dispatch]",[3509,3524],"[dispatch, successUpdate]",[326,350],"[downloadedUrl, setFile, setUrl]",[1050,1065],"[id, updateSuccess]"]