[{"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\index.js":"1","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\App.js":"2","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\store.js":"3","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Pay.js":"4","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Navbar.js":"5","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js":"8","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\products\\ProductsListScreen.js":"9","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\assets\\theme.js":"10","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\ShowcaseComponent.js":"11","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\productReducers.js":"12","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Spinner.js":"13","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\products\\ProductListComponent.js":"14","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\products\\ProductsComponent.js":"15","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\productAction.js":"16","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\productTypes.js":"17","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js":"18","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\cartReducers.js":"19"},{"size":151,"mtime":1637094399105,"results":"20","hashOfConfig":"21"},{"size":1412,"mtime":1638287174460,"results":"22","hashOfConfig":"21"},{"size":770,"mtime":1638292716387,"results":"23","hashOfConfig":"21"},{"size":2334,"mtime":1637094399105,"results":"24","hashOfConfig":"21"},{"size":2655,"mtime":1638287174476,"results":"25","hashOfConfig":"21"},{"size":355,"mtime":1638287174492,"results":"26","hashOfConfig":"21"},{"size":504,"mtime":1638287174476,"results":"27","hashOfConfig":"21"},{"size":4749,"mtime":1638292181585,"results":"28","hashOfConfig":"21"},{"size":791,"mtime":1638287174492,"results":"29","hashOfConfig":"21"},{"size":331,"mtime":1638287174460,"results":"30","hashOfConfig":"21"},{"size":755,"mtime":1637103217471,"results":"31","hashOfConfig":"21"},{"size":1158,"mtime":1638287174492,"results":"32","hashOfConfig":"21"},{"size":297,"mtime":1638287174476,"results":"33","hashOfConfig":"21"},{"size":3878,"mtime":1638287174476,"results":"34","hashOfConfig":"21"},{"size":4516,"mtime":1638287174492,"results":"35","hashOfConfig":"21"},{"size":1365,"mtime":1638287174460,"results":"36","hashOfConfig":"21"},{"size":366,"mtime":1638287174460,"results":"37","hashOfConfig":"21"},{"size":44,"mtime":1638290192736,"results":"38","hashOfConfig":"21"},{"size":1071,"mtime":1638293157480,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"b0zd7l",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\index.js",[],["84","85"],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\App.js",["86"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@mui/material'\r\nimport { Provider } from 'react-redux';\r\nimport store from './store'\r\nimport './App.css'\r\n\r\nimport Pay from './components/Pay'\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductDetailScreen from './screens/products/ProductDetailScreen';\r\nimport ProductsListScreen from './screens/products/ProductsListScreen';\r\n\r\nimport customTheme from './assets/theme';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <ThemeProvider theme={customTheme}>\r\n                <Router>\r\n                    <main style={{ height: \"100%\", width: \"100%\", minWidth: \"100%\" }}>\r\n                        <Navbar />\r\n                            <Routes>\r\n                                <Route path='/products/category/:category' element={<ProductsListScreen/>} />\r\n                                <Route path='/products/:id' element={<ProductDetailScreen/>} />\r\n                                <Route path='/' element={<HomeScreen/>} />\r\n                            </Routes>\r\n                        <Footer />\r\n                    </main>\r\n                </Router>\r\n            </ThemeProvider> \r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\store.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Pay.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js",["87","88"],"import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router';\r\n\r\nimport {Box, FormControl, InputLabel, Select, MenuItem, Container, Typography, Button, Grid} from '@mui/material'\r\nimport { getProductDetail } from '../../actions/productAction'\r\nimport Spinner from '../../components/Spinner'\r\nimport { CART_ADD_ITEM } from '../../actions/actionTypes/cartTypes';\r\n\r\nconst ProductDetailScreen = () => {\r\n    const [size, setSize ] = useState('')\r\n    const [color, setColor ] = useState('')\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams();\r\n\r\n    const productDetail = useSelector(state => state.productDetail)\r\n    let { loading, error, product } = productDetail\r\n\r\n    useEffect(() => {\r\n        console.log(id)\r\n        dispatch(getProductDetail(id))\r\n    }, [id])\r\n\r\n    const displaySize = (size) => {\r\n        if(size === 'S'){\r\n            return 'Small'\r\n        } else if (size === 'M'){\r\n            return 'Medium'\r\n        } else if (size === 'L'){\r\n            return 'Large'\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (type) => {\r\n        if(type === 'sub'){\r\n            quantity > 1 && setQuantity(quantity - 1)\r\n        } else if (type === 'add'){\r\n            setQuantity(quantity + 1)\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        dispatch({\r\n            type: CART_ADD_ITEM,\r\n            payload: {\r\n                ...product, \r\n                quantity,\r\n                color,\r\n                size\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"product-detail-container\">\r\n            {loading && <Spinner />}\r\n            {product && product._id && (\r\n            <Container>\r\n                <Typography variant=\"h3\" sx={{fontWeight: \"light\", mt: 4, mb:2, fontSize: 38}}>{product.title}</Typography>\r\n                <Grid container spacing={{ xs: 2, md: 3}}>\r\n                    <Grid item sx={{ width:'100%'}} xs={12} md={6}>\r\n                        <img src={product.image} alt={product.title} /> \r\n                    </Grid>\r\n                    <Grid item sx={{ width:'100%' }} xs={12} md={6}>\r\n                        <Typography gutterbottom variant=\"h4\" sx={{fontWeight: \"light\", my: 3}}>$ {product.price}</Typography>\r\n                        <Typography gutterbottom variant=\"p\" sx={{lineHeight: 1.5}}>{product.description}</Typography>\r\n                        <Box sx={{display: 'flex', mt: 3, alignItems: 'center'}}>\r\n                            <Box sx={{display: 'flex'}}>\r\n                                <Typography variant=\"p\" sx={{fontSize: 20, mr: 1}}>Color</Typography>\r\n                                <div className=\"colors\">\r\n                                    {product.color.map( c => {\r\n                                        return  <button className=\"color\" style={{backgroundColor: `${c}`}} key={c} onClick={()=>setColor(c)}></button>\r\n                                    })}\r\n                                </div>\r\n                            </Box> \r\n                            <Box sx={{ minWidth: 120 }}>\r\n                                <FormControl fullWidth sx={{ml: 4}}>\r\n                                <InputLabel id=\"size\">Size</InputLabel>\r\n                                <Select\r\n                                    labelId=\"size\"\r\n                                    id=\"size-select\"\r\n                                    value={size}\r\n                                    label=\"Size\"\r\n                                    onChange={(e) => {setSize(e.target.value)}}\r\n                                >\r\n                                    {product.size.map( size => {\r\n                                        return  <MenuItem value={size} key={size}>{displaySize(size)}</MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                                </FormControl>\r\n                            </Box>\r\n                        </Box>   \r\n                        <div className=\"quantity-counter\">\r\n                            <button onClick={()=>handleQuantity('sub')}><i class=\"fas fa-minus\"></i></button>\r\n                            <span className=\"number\">{quantity}</span>\r\n                            <button onClick={()=>handleQuantity('add')}><i class=\"fas fa-plus\"></i></button>\r\n                        </div>\r\n                        <Button variant=\"contained\" sx={{mt: 4}} onClick={()=>handleClick()}>Add to cart</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            )}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductDetailScreen\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\screens\\products\\ProductsListScreen.js",["89","90","91"],"import React, {useState, useEffect} from 'react'\r\nimport {Box} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\nimport ProductListComponent from '../../components/products/ProductListComponent';\r\nimport ProductsComponent from '../../components/products/ProductsComponent';\r\n\r\nconst ProductsListScreen = ({ home=false }) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const location = useLocation();\r\n    const category = location.pathname.split('/')[3]\r\n\r\n    useEffect(() => {\r\n    }, [category])\r\n\r\n    return (\r\n        <Box sx={{mt: 3}}>\r\n            <ProductsComponent category={category} filters={filters} sort={sort}/>\r\n       </Box>\r\n    )\r\n}\r\n\r\nexport default ProductsListScreen\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\assets\\theme.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\ShowcaseComponent.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\products\\ProductListComponent.js",["92","93","94","95","96"],"import React, {useState, useEffect}from 'react' \r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Grid, Card, CardMedia, CardContent, CardActions, Typography, Button} from '@mui/material'\r\nimport { getProducts } from '../../actions/productAction'\r\nimport Spinner from '../Spinner'\r\n\r\n\r\nconst ProductListComponent = ({category, filters, sort}) => {\r\n    const [ displayProducts, setDisplayProducts ] = useState([])\r\n    const [currentFilters, setCurrentFilters ] = useState({})\r\n    const [currentCategory, setCurrentCategory] = useState([])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    let { loading, error, products } = productList\r\n\r\n    useEffect(() => { \r\n        if(!products || products.length === 0 || currentCategory !== category){\r\n            setCurrentCategory(category)\r\n            dispatch(getProducts(category))\r\n        }\r\n    }, [category, currentCategory])\r\n \r\n    useEffect(() => {\r\n        if(products && !Object.values(filters).every(x => x === '') && filters !== currentFilters){\r\n            setCurrentFilters(filters)\r\n            setDisplayProducts(products.filter((product) => {\r\n                for (const [key, value] of Object.entries(filters)){\r\n                    if(value !== ''){\r\n                        return product[key].includes(value)\r\n                    }           \r\n                }\r\n            }))\r\n        } else if (products && Object.keys(currentFilters).length === 0){\r\n            setDisplayProducts(products)\r\n        }\r\n    }, [products, filters, currentFilters])\r\n\r\n    useEffect(() =>  {\r\n        console.log(sort)\r\n        if(sort === 'newest'){\r\n            setDisplayProducts((prev) => \r\n                [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n            )\r\n        } else if(sort === 'asc'){\r\n            setDisplayProducts((prev) => \r\n                [...prev].sort((a, b) => a.price - b.price)\r\n            )\r\n        }else{\r\n            setDisplayProducts((prev) =>\r\n                [...prev].sort((a, b) => b.price - a.price)\r\n            )\r\n        }\r\n    }, [sort])\r\n\r\n// filteredProducts ? show filtered products : show all products\r\n    return (\r\n        <>\r\n        {loading && <Spinner /> } \r\n        {displayProducts && displayProducts.length > 0 ? (\r\n            <Grid className=\"products-container\" container spacing={{ xs: 2, md: 3 }} sx={{minHeight: '70vh'}}>\r\n                {displayProducts.map((product, index) => {\r\n                    return  <Grid className=\"product-item\" item sx={{ width:'100%' }} xs={12} sm={6} md={3} key={index}>\r\n                        <Link to={`/products/${product._id}`}>\r\n                        <Card sx={{ width:'100%'}}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"300\"\r\n                                image={product.image}\r\n                                alt={product.title}\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"p\" sx={{ color: 'text.primary', fontSize: 22, fontWeight: 'medium' }} className=\"product-title\">{product.title}</Typography>\r\n                                <Typography gutterBottom variant=\"p\" sx={{ display: 'block', color: 'text.primary', fontSize: 18, fontWeight: 'medium' }}>${product.price}</Typography>\r\n                            </CardContent>                       \r\n                        </Card>\r\n                        </Link>\r\n                    </Grid>\r\n                })}\r\n            </Grid>\r\n        ) : <Typography variant=\"p\" sx={{display: 'block', minHeight: '70vh'}}>No Products Found...</Typography>\r\n            }        \r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListComponent\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\components\\products\\ProductsComponent.js",["97"],"import React, {useState} from 'react'\r\nimport {Box, FormControl, InputLabel, Select, MenuItem, Container, Typography} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\n\r\nimport ProductListComponent from './ProductListComponent';\r\n\r\nconst ProductsComponent = ({ home = false, category}) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const handleFilters = (e) =>{\r\n        const value = e.target.value;\r\n        setFilters({\r\n            ...filters,\r\n            [e.target.name]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            {category && <Typography variant=\"h3\">{category}</Typography>}\r\n            <Box className=\"product-filters\" sx={{ display: 'flex', marginTop: home ? '3rem' : '', justifyContent: 'space-between'}}>\r\n                <div className=\"left-section\">\r\n                    <div style={{display: 'flex', alignItems: 'center', marginRight: '1rem'}}>\r\n                        <Typography variant=\"h5\" sx={{fontSize: '1.5rem'}}>Filter Products:</Typography>\r\n                    </div>\r\n                    <Box sx={{ minWidth: 120, mr:3 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Size</InputLabel>\r\n                            <Select\r\n                                labelId=\"size\"\r\n                                label=\"Size\"\r\n                                name=\"size\"\r\n                                value={filters.size}\r\n                                onChange={(e)=>handleFilters(e)}\r\n                            >\r\n                                <MenuItem value={\"S\"}>Small</MenuItem>\r\n                                <MenuItem value={\"M\"}>Medium</MenuItem>\r\n                                <MenuItem value={\"L\"}>Large</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Color</InputLabel>\r\n                            <Select\r\n                                labelId=\"color\"\r\n                                label=\"color\"\r\n                                name=\"color\"\r\n                                value={filters.color}\r\n                                onChange={(e)=>handleFilters(e)}\r\n                            >\r\n                                <MenuItem value={\"black\"}>Black</MenuItem>\r\n                                <MenuItem value={\"yellow\"}>Yellow</MenuItem>\r\n                                <MenuItem value={\"orange\"}>Orange</MenuItem>\r\n                                <MenuItem value={\"blue\"}>Blue</MenuItem>\r\n                                <MenuItem value={\"khaki\"}>Khaki</MenuItem>\r\n                                <MenuItem value={\"beige\"}>Beige</MenuItem>\r\n                                <MenuItem value={\"pink\"}>Pink</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                </div>\r\n                <div className=\"right-section\">\r\n                    <div style={{display: 'flex', alignItems: 'center', marginRight: '1rem'}}>\r\n                        <Typography variant=\"h5\" sx={{fontSize: '1.5rem'}}>Sort Products:</Typography>\r\n                    </div>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Sort</InputLabel>\r\n                            <Select\r\n                                labelId=\"sort\"\r\n                                id=\"sort-select\"\r\n                                value={sort}\r\n                                label=\"sort\"\r\n                                name=\"sort\"\r\n                                onChange={(e) => {setSort(e.target.value)}}\r\n                            >\r\n                                <MenuItem value={\"newest\"}>Newest</MenuItem>\r\n                                <MenuItem value={\"desc\"}>Price: High To Low</MenuItem>\r\n                                <MenuItem value={\"asc\"}>Price: Low To High</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    </div>\r\n                </Box>\r\n                <ProductListComponent category={category} filters={filters} sort={sort}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductsComponent\r\n","C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\productAction.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\productTypes.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js",[],"C:\\Users\\CH182527\\Desktop\\Latania's Coding\\shopmart2021\\frontend\\src\\reducers\\cartReducers.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":8,"column":8,"nodeType":"104","messageId":"105","endLine":8,"endColumn":11},{"ruleId":"102","severity":1,"message":"106","line":19,"column":20,"nodeType":"104","messageId":"105","endLine":19,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":24,"column":8,"nodeType":"109","endLine":24,"endColumn":12,"suggestions":"110"},{"ruleId":"102","severity":1,"message":"111","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":28},{"ruleId":"102","severity":1,"message":"112","line":9,"column":21,"nodeType":"104","messageId":"105","endLine":9,"endColumn":31},{"ruleId":"102","severity":1,"message":"113","line":10,"column":18,"nodeType":"104","messageId":"105","endLine":10,"endColumn":25},{"ruleId":"102","severity":1,"message":"114","line":4,"column":46,"nodeType":"104","messageId":"105","endLine":4,"endColumn":57},{"ruleId":"102","severity":1,"message":"115","line":4,"column":71,"nodeType":"104","messageId":"105","endLine":4,"endColumn":77},{"ruleId":"102","severity":1,"message":"106","line":17,"column":20,"nodeType":"104","messageId":"105","endLine":17,"endColumn":25},{"ruleId":"107","severity":1,"message":"116","line":24,"column":8,"nodeType":"109","endLine":24,"endColumn":35,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":29,"column":58,"nodeType":"120","messageId":"121","endLine":29,"endColumn":60},{"ruleId":"102","severity":1,"message":"122","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":21},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Pay' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["125"],"'ProductListComponent' is defined but never used.","'setFilters' is assigned a value but never used.","'setSort' is assigned a value but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'products'. Either include them or remove the dependency array.",["126"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useLocation' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch, id]",{"range":"131","text":"132"},"Update the dependencies array to be: [category, currentCategory, dispatch, products]",{"range":"133","text":"134"},[916,920],"[dispatch, id]",[969,996],"[category, currentCategory, dispatch, products]"]
