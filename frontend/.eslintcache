[{"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\index.js":"1","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\App.js":"2","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\HomeScreen.js":"3","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\CartScreen.js":"5","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Navbar.js":"6","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\OrderSuccess.js":"7","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\assets\\theme.js":"8","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js":"9","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Pay.js":"10","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrdersScreen.js":"11","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductsListScreen.js":"12","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js":"13","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\RegisterScreen.js":"14","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\LoginScreen.js":"15","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\DashboardScreen.js":"16","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductsScreen.js":"17","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\CreateProductScreen.js":"18","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\store.js":"19","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductScreen.js":"20","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ShowcaseComponent.js":"21","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Spinner.js":"22","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductsComponent.js":"23","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductListComponent.js":"24","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\firebase.js":"25","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\cartActions.js":"26","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\userActions.js":"27","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js":"28","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\orderActions.js":"29","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\Chart.js":"30","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\AdminSidenav.js":"31","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js":"32","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\productAction.js":"33","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\LatestOrdersComponent.js":"34","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\NewUsersComponent.js":"35","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\RevenueComponent.js":"36","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\orderReducers.js":"37","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\userReducers.js":"38","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\productReducers.js":"39","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\cartReducers.js":"40","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\requestMethods.js":"41","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\userTypes.js":"42","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\productTypes.js":"43","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\AlertClosable.js":"44","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ProgressBar.js":"45","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\hooks\\useStorage.js":"46","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\UsersScreen.js":"47","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\TransactionsScreen.js":"48"},{"size":151,"mtime":1636489073244,"results":"49","hashOfConfig":"50"},{"size":5170,"mtime":1640360898177,"results":"51","hashOfConfig":"50"},{"size":355,"mtime":1637778632910,"results":"52","hashOfConfig":"50"},{"size":504,"mtime":1637775982799,"results":"53","hashOfConfig":"50"},{"size":10718,"mtime":1640360096565,"results":"54","hashOfConfig":"50"},{"size":4284,"mtime":1640547922130,"results":"55","hashOfConfig":"50"},{"size":1548,"mtime":1640360419520,"results":"56","hashOfConfig":"50"},{"size":527,"mtime":1638827499680,"results":"57","hashOfConfig":"50"},{"size":6012,"mtime":1640548266731,"results":"58","hashOfConfig":"50"},{"size":2623,"mtime":1638499570045,"results":"59","hashOfConfig":"50"},{"size":3757,"mtime":1640220067598,"results":"60","hashOfConfig":"50"},{"size":791,"mtime":1638042042416,"results":"61","hashOfConfig":"50"},{"size":6683,"mtime":1640014859453,"results":"62","hashOfConfig":"50"},{"size":4422,"mtime":1638816721611,"results":"63","hashOfConfig":"50"},{"size":2762,"mtime":1640213718422,"results":"64","hashOfConfig":"50"},{"size":4203,"mtime":1640359664089,"results":"65","hashOfConfig":"50"},{"size":3740,"mtime":1640360163047,"results":"66","hashOfConfig":"50"},{"size":6095,"mtime":1640362548340,"results":"67","hashOfConfig":"50"},{"size":1931,"mtime":1639695441149,"results":"68","hashOfConfig":"50"},{"size":13337,"mtime":1640362669030,"results":"69","hashOfConfig":"50"},{"size":755,"mtime":1637109384991,"results":"70","hashOfConfig":"50"},{"size":297,"mtime":1637781129761,"results":"71","hashOfConfig":"50"},{"size":4355,"mtime":1640548065368,"results":"72","hashOfConfig":"50"},{"size":4328,"mtime":1640277256939,"results":"73","hashOfConfig":"50"},{"size":671,"mtime":1640037810919,"results":"74","hashOfConfig":"50"},{"size":747,"mtime":1638641732524,"results":"75","hashOfConfig":"50"},{"size":1992,"mtime":1640278196502,"results":"76","hashOfConfig":"50"},{"size":142,"mtime":1638639387710,"results":"77","hashOfConfig":"50"},{"size":1865,"mtime":1640036637665,"results":"78","hashOfConfig":"50"},{"size":702,"mtime":1638833498749,"results":"79","hashOfConfig":"50"},{"size":2097,"mtime":1640360939691,"results":"80","hashOfConfig":"50"},{"size":604,"mtime":1638656388978,"results":"81","hashOfConfig":"50"},{"size":3069,"mtime":1640035931259,"results":"82","hashOfConfig":"50"},{"size":2035,"mtime":1639178178991,"results":"83","hashOfConfig":"50"},{"size":1722,"mtime":1639334748961,"results":"84","hashOfConfig":"50"},{"size":1970,"mtime":1640359930585,"results":"85","hashOfConfig":"50"},{"size":2013,"mtime":1638656411604,"results":"86","hashOfConfig":"50"},{"size":1528,"mtime":1638832590507,"results":"87","hashOfConfig":"50"},{"size":2595,"mtime":1639695441055,"results":"88","hashOfConfig":"50"},{"size":1150,"mtime":1638641755611,"results":"89","hashOfConfig":"50"},{"size":366,"mtime":1640036077746,"results":"90","hashOfConfig":"50"},{"size":560,"mtime":1638832164896,"results":"91","hashOfConfig":"50"},{"size":1066,"mtime":1639695440878,"results":"92","hashOfConfig":"50"},{"size":952,"mtime":1640017072262,"results":"93","hashOfConfig":"50"},{"size":473,"mtime":1640186615277,"results":"94","hashOfConfig":"50"},{"size":1040,"mtime":1640128733876,"results":"95","hashOfConfig":"50"},{"size":2286,"mtime":1640359270639,"results":"96","hashOfConfig":"50"},{"size":3293,"mtime":1640568716766,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"sa1lf3",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"100"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"100"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"100"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"100"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\index.js",[],["213","214"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\App.js",["215"],"import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Routes,\r\n  Navigate,\r\n} from 'react-router-dom';\r\nimport { ThemeProvider } from '@mui/material';\r\nimport { Provider, useSelector } from 'react-redux';\r\nimport store from './store';\r\nimport './App.css';\r\n\r\nimport Pay from './components/Pay';\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductDetailScreen from './screens/products/ProductDetailScreen';\r\nimport ProductsListScreen from './screens/products/ProductsListScreen';\r\nimport CartScreen from './screens/CartScreen';\r\n\r\nimport customTheme from './assets/theme';\r\nimport OrderSuccess from './screens/OrderSuccess';\r\nimport OrdersScreen from './screens/orders/OrdersScreen';\r\nimport OrderDetailScreen from './screens/orders/OrderDetailScreen';\r\nimport LoginScreen from './screens/users/LoginScreen';\r\nimport RegisterScreen from './screens/users/RegisterScreen';\r\nimport DashboardScreen from './screens/admin/DashboardScreen';\r\nimport ProductsScreen from './screens/admin/ProductsScreen';\r\nimport CreateProductScreen from './screens/admin/CreateProductScreen';\r\nimport ProductScreen from './screens/admin/ProductScreen';\r\nimport UsersScreen from './screens/admin/UsersScreen';\r\nimport TransactionsScreen from './screens/admin/TransactionsScreen';\r\n\r\nconst AppWrapper = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  function ProtectedUserRoute({ children, redirectTo }) {\r\n    let isAuthenticated = false;\r\n\r\n    if (userInfo && userInfo._id) {\r\n      isAuthenticated = true;\r\n    }\r\n    return isAuthenticated ? children : <Navigate to={redirectTo} />;\r\n  }\r\n\r\n  function ProtectedAdminRoute({ children, redirectTo }) {\r\n    let isAuthenticated = false;\r\n\r\n    if (userInfo && userInfo.isAdmin) {\r\n      isAuthenticated = true;\r\n    }\r\n    return isAuthenticated ? children : <Navigate to={redirectTo} />;\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={customTheme}>\r\n      <Router>\r\n        <main style={{ height: '100%', width: '100%', minWidth: '100%' }}>\r\n          <Navbar />\r\n          <Routes>\r\n            <Route path='/login' element={<LoginScreen />} />\r\n            <Route path='/register' element={<RegisterScreen />} />\r\n            <Route\r\n              path='/products/category/:category'\r\n              element={<ProductsListScreen />}\r\n            />\r\n            <Route path='/products/:id' element={<ProductDetailScreen />} />\r\n            <Route path='/cart' element={<CartScreen />} />\r\n            <Route path='/success' element={<OrderSuccess />} />\r\n            <Route\r\n              path='/orders/:id'\r\n              element={\r\n                <ProtectedUserRoute redirectTo='/login?redirect=/orders'>\r\n                  <OrderDetailScreen />\r\n                </ProtectedUserRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/orders'\r\n              element={\r\n                <ProtectedUserRoute redirectTo='/login?redirect=/orders'>\r\n                  <OrdersScreen />\r\n                </ProtectedUserRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/admin/users'\r\n              element={\r\n                <ProtectedAdminRoute redirectTo='/login?redirect=/admin/users'>\r\n                  <UsersScreen />\r\n                </ProtectedAdminRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/admin/products'\r\n              element={\r\n                <ProtectedAdminRoute redirectTo='/login?redirect=/admin/products'>\r\n                  <ProductsScreen />\r\n                </ProtectedAdminRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/admin/products/create'\r\n              element={\r\n                <ProtectedAdminRoute redirectTo='/login?redirect=/admin/products/create'>\r\n                  <CreateProductScreen />\r\n                </ProtectedAdminRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/admin/products/:id'\r\n              element={\r\n                <ProtectedAdminRoute redirectTo='/login?redirect=/admin/products'>\r\n                  <ProductScreen />\r\n                </ProtectedAdminRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/admin/transactions'\r\n              element={\r\n                <ProtectedAdminRoute redirectTo='/login?redirect=/admin/transactions'>\r\n                  <TransactionsScreen />\r\n                </ProtectedAdminRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/admin'\r\n              element={\r\n                <ProtectedAdminRoute redirectTo='/login?redirect=/admin'>\r\n                  <DashboardScreen />\r\n                </ProtectedAdminRoute>\r\n              }\r\n            />\r\n            <Route path='/' element={<HomeScreen />} />\r\n          </Routes>\r\n          <Footer />\r\n        </main>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default AppWrapper;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\CartScreen.js",["216","217","218","219","220","221"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  Alert,\r\n} from '@mui/material';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { getCartInfo, removeFromCart } from '../actions/cartActions';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Spinner from '../components/Spinner';\r\nimport { ORDER_CREATE_RESET } from '../actions/actionTypes/orderTypes';\r\nimport { userRequest } from '../requestMethods';\r\n\r\nconst KEY = process.env.REACT_APP_STRIPE;\r\n\r\nconst CartScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [isPaymentProcessing, setIsPaymentProcessing] = useState(false);\r\n  const [stripeToken, setStripeToken] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { loading, success: orderCreateSuccess, error, order } = orderCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCartInfo());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ORDER_CREATE_RESET });\r\n    if (orderCreateSuccess) {\r\n      navigate('/success', {\r\n        state: {\r\n          paymentInfo: order,\r\n        },\r\n      });\r\n    }\r\n  }, [orderCreateSuccess]);\r\n\r\n  const onToken = (token) => {\r\n    setStripeToken(token);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const makeRequest = async (cartTotal) => {\r\n      try {\r\n        const res = await userRequest.post(`/checkout/payment`, {\r\n          tokenId: stripeToken.id,\r\n          amount: cartTotal,\r\n        });\r\n        setIsPaymentProcessing(true);\r\n        const successPaymentData = res.data;\r\n        dispatch(\r\n          createOrder({\r\n            stripePaymentId: successPaymentData.id,\r\n            products: cart.cartItems,\r\n            amount: successPaymentData.amount,\r\n            address: successPaymentData.billing_details,\r\n            paymentMethod: successPaymentData.payment_method_details,\r\n          })\r\n        );\r\n      } catch (error) {\r\n        setMessage(error);\r\n      }\r\n    };\r\n    stripeToken && makeRequest(cart.total);\r\n  }, [stripeToken, cart]);\r\n\r\n  const handleItemRemoval = (item) => {\r\n    if (window.confirm('Are you sure you want to delete this item?')) {\r\n      dispatch(removeFromCart(item));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ mt: 3, minHeight: '85vh' }}>\r\n      {message && <Alert variant='error'>{message}</Alert>}\r\n      {isPaymentProcessing ? (\r\n        <span>Processing. Please wait...</span>\r\n      ) : (\r\n        cart && (\r\n          <>\r\n            <Typography variant='h4' align='center' sx={{ my: 3 }}>\r\n              Shopping Cart\r\n            </Typography>\r\n            {error && <Alert severity='error'>{error}</Alert>}\r\n            <Box\r\n              sx={{ display: 'flex', justifyContent: 'space-between', mb: 4 }}\r\n            >\r\n              <Link to='/'>\r\n                <Button variant='outlined'>Continue Shopping</Button>\r\n              </Link>\r\n              <Typography\r\n                variant='p'\r\n                sx={{ textDecoration: 'underline', alignSelf: 'center' }}\r\n              >\r\n                Cart Items ({cart.quantity})\r\n              </Typography>\r\n              <StripeCheckout\r\n                name='ShopMart'\r\n                image='https://cdn.pixabay.com/photo/2016/12/07/15/15/lotus-with-hands-1889661_960_720.png'\r\n                billingAddress\r\n                shippingAddress\r\n                description={`Your total is $${cart.total}`}\r\n                amount={cart.total * 100}\r\n                token={onToken}\r\n                stripeKey={KEY}\r\n              >\r\n                <Button variant='outlined' disabled={!userInfo ? true : false}>\r\n                  Checkout\r\n                </Button>\r\n              </StripeCheckout>\r\n            </Box>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={9}>\r\n                {cart.cartItems.map((item, index) => {\r\n                  return (\r\n                    <Card className='cart-item' key={`${item._id}_${index}`}>\r\n                      <Button\r\n                        className='delete-cart-item'\r\n                        onClick={() => handleItemRemoval(item)}\r\n                      >\r\n                        <CloseIcon sx={{ mr: 3 }} />\r\n                      </Button>\r\n                      <Link to={`/products/${item._id}`}>\r\n                        <CardMedia\r\n                          component='img'\r\n                          sx={{ width: 151 }}\r\n                          image={item.image}\r\n                          alt={item.title}\r\n                        />\r\n                      </Link>\r\n                      <div className='info'>\r\n                        <div>\r\n                          <Typography component='p' variant='p'>\r\n                            <span>Name: </span>\r\n                            <Link to={`/products/${item._id}`}>\r\n                              {item.title.toUpperCase()}\r\n                            </Link>\r\n                          </Typography>\r\n                          <Typography component='p' variant='p'>\r\n                            <span>Size: </span>\r\n                            {item.size.toUpperCase()}\r\n                          </Typography>\r\n                          <button\r\n                            className='color'\r\n                            style={{ backgroundColor: item.color }}\r\n                          ></button>\r\n                        </div>\r\n                        <div>\r\n                          <Typography\r\n                            component='p'\r\n                            variant='p'\r\n                            sx={{ fontSize: 18 }}\r\n                          >\r\n                            <span>Qty: </span>\r\n                            {item.quantity}\r\n                          </Typography>\r\n                          <Typography\r\n                            component='p'\r\n                            variant='p'\r\n                            sx={{ fontSize: 18 }}\r\n                          >\r\n                            ${item.price * item.quantity}\r\n                          </Typography>\r\n                        </div>\r\n                      </div>\r\n                    </Card>\r\n                  );\r\n                })}\r\n              </Grid>\r\n              <Grid item xs={12} md={3}>\r\n                <Box\r\n                  sx={{\r\n                    borderRadius: '10%',\r\n                    border: '2px solid #C8C8C8',\r\n                    padding: '2rem',\r\n                  }}\r\n                >\r\n                  <Typography variant='h5' align='center' sx={{ mb: 4 }}>\r\n                    Order Summary\r\n                  </Typography>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '1rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Item(s) Subtotal</Typography>\r\n                    <Typography variant='p'>${cart.total}</Typography>\r\n                  </div>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '1rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Shipping & Handling</Typography>\r\n                    <Typography variant='p'>$50</Typography>\r\n                  </div>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '1rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Tax</Typography>\r\n                    <Typography variant='p'>$50</Typography>\r\n                  </div>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '1rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Grand Total</Typography>\r\n                    <Typography variant='p'>${cart.total}</Typography>\r\n                  </div>\r\n                  <StripeCheckout\r\n                    name='ShopMart'\r\n                    image='https://cdn.pixabay.com/photo/2016/12/07/15/15/lotus-with-hands-1889661_960_720.png'\r\n                    billingAddress\r\n                    shippingAddress\r\n                    description={`Your total is $${cart.total}`}\r\n                    amount={cart.total * 100}\r\n                    token={onToken}\r\n                    stripeKey={KEY}\r\n                  >\r\n                    <Button\r\n                      variant='contained'\r\n                      color='secondary'\r\n                      sx={{ display: 'inline-block', width: '100%' }}\r\n                      disabled={!userInfo ? true : false}\r\n                    >\r\n                      Checkout Now\r\n                    </Button>\r\n                  </StripeCheckout>\r\n                  {!userInfo && (\r\n                    <Typography\r\n                      variant='p'\r\n                      component='p'\r\n                      sx={{ color: 'red', mt: 2 }}\r\n                      align='center'\r\n                    >\r\n                      Please{' '}\r\n                      <Link\r\n                        to={'/login?redirect=/cart'}\r\n                        style={{ textDecoration: 'underline', color: 'black' }}\r\n                      >\r\n                        Log In\r\n                      </Link>{' '}\r\n                      to checkout{' '}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\OrderSuccess.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\assets\\theme.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js",["222","223"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Pay.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrdersScreen.js",["224","225"],"import React, { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Typography, Box, Container, Alert, Button } from '@mui/material';\r\nimport { getUserOrders } from '../../actions/orderActions';\r\nimport Spinner from '../../components/Spinner';\r\n\r\nconst OrdersScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userOrders = useSelector((state) => state.userOrders);\r\n  let { loading, error, orders } = userOrders;\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserOrders());\r\n  }, [dispatch]);\r\n\r\n  const displayDate = (date) => {\r\n    const newDate = new Date(date);\r\n    return moment(newDate).format('MM/DD/YYYY');\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ minHeight: '85vh' }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Typography variant='h4' sx={{ my: 3 }}>\r\n          Your Orders\r\n        </Typography>\r\n        <Link to='/' style={{ alignSelf: 'center' }}>\r\n          <Button variant='contained' color='secondary'>\r\n            Continue Shopping\r\n          </Button>\r\n        </Link>\r\n      </Box>\r\n      {error && <Alert severity='error'>{error}</Alert>}\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : orders && orders.length !== 0 ? (\r\n        orders.map((order) => {\r\n          return (\r\n            <Box\r\n              sx={{\r\n                border: '2px solid #DCDCDC',\r\n                borderRadius: '10px',\r\n                padding: '1.5rem',\r\n                mb: 3,\r\n                boxShadow: '0 3px 10px rgb(0 0 0 / 0.2)',\r\n              }}\r\n              key={order._id}\r\n            >\r\n              <Box\r\n                sx={{ display: 'flex', justifyContent: 'space-between' }}\r\n                className='order-details'\r\n              >\r\n                <div className='info'>\r\n                  <div>\r\n                    <Typography component='p' variant='p'>\r\n                      Order Placed\r\n                    </Typography>\r\n                    <Typography component='p' variant='p'>\r\n                      {displayDate(order.createdAt)}\r\n                    </Typography>\r\n                  </div>\r\n                  <div>\r\n                    <Typography component='p' variant='p'>\r\n                      Total\r\n                    </Typography>\r\n                    <Typography component='p' variant='p'>\r\n                      ${order.amount}\r\n                    </Typography>\r\n                  </div>\r\n                  <div>\r\n                    <Typography component='p' variant='p'>\r\n                      Ship To\r\n                    </Typography>\r\n                    <Typography component='p' variant='p'>\r\n                      {order.address.name && order.address.name.toUpperCase()}\r\n                    </Typography>\r\n                  </div>\r\n                </div>\r\n                <div className='order-number'>\r\n                  <Typography variant='p'>Order #: {order._id}</Typography>\r\n                  <Link to={`/orders/${order._id}`}>View Order Details</Link>\r\n                </div>\r\n              </Box>\r\n              <Box className='order-products' sx={{ mt: 3 }}>\r\n                {order.products &&\r\n                  order.products.map((product) => {\r\n                    return (\r\n                      <Link to={`/products/${product._id}`} key={product._id}>\r\n                        <img src={product.image} alt='image' />\r\n                      </Link>\r\n                    );\r\n                  })}\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })\r\n      ) : (\r\n        <Alert severity='info'>No Orders Found...</Alert>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrdersScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductsListScreen.js",["226","227","228"],"import React, {useState, useEffect} from 'react'\r\nimport {Box} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\nimport ProductListComponent from '../../components/products/ProductListComponent';\r\nimport ProductsComponent from '../../components/products/ProductsComponent';\r\n\r\nconst ProductsListScreen = ({ home=false }) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const location = useLocation();\r\n    const category = location.pathname.split('/')[3]\r\n\r\n    useEffect(() => {\r\n    }, [category])\r\n\r\n    return (\r\n        <Box sx={{mt: 3}}>\r\n            <ProductsComponent category={category} filters={filters} sort={sort}/>\r\n       </Box>\r\n    )\r\n}\r\n\r\nexport default ProductsListScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js",["229","230","231"],"import React, { useEffect } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Box, Typography, Container, Button } from '@mui/material';\r\nimport moment from 'moment';\r\nimport { getOrderDetails } from '../../actions/orderActions';\r\nimport Spinner from '../../components/Spinner';\r\n\r\nconst OrderDetailScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { loading, error, order } = orderDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderDetails(params.id));\r\n  }, []);\r\n\r\n  const displayDate = (date) => {\r\n    const newDate = new Date(date);\r\n    return moment(newDate).format('MM/DD/YYYY');\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ minHeight: '85vh', pt: 3 }}>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        order && (\r\n          <>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Typography variant='h4' sx={{ mt: 2, mb: 1 }}>\r\n                Order Details: (Order# {order._id})\r\n              </Typography>\r\n              <Link to='/' style={{ alignSelf: 'center' }}>\r\n                <Button variant='contained' color='secondary'>\r\n                  Continue Shopping\r\n                </Button>\r\n              </Link>\r\n            </Box>\r\n            <Typography component='p' variant='p'></Typography>\r\n            <Typography component='p' variant='p' sx={{ mb: 2 }}>\r\n              Order placed on: {displayDate(order.createdAt)}\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                border: '2px solid #DCDCDC',\r\n                borderRadius: '10px',\r\n                padding: '1.5rem',\r\n                mb: 3,\r\n              }}\r\n              key={order._id}\r\n            >\r\n              <Box\r\n                sx={{ display: 'flex', justifyContent: 'space-between' }}\r\n                className='order-details'\r\n              >\r\n                <div className='address'>\r\n                  <Typography\r\n                    variant='p'\r\n                    component='p'\r\n                    sx={{ fontWeight: 600, mb: 2 }}\r\n                  >\r\n                    Shipping Address\r\n                  </Typography>\r\n                  <Typography variant='p' component='p'>\r\n                    {order.address.name.toUpperCase()}\r\n                  </Typography>\r\n                  <Typography variant='p' component='p'>\r\n                    {order.address.address.line1}\r\n                  </Typography>\r\n                  <Typography variant='p' component='p'>\r\n                    {order.address.address.line2}\r\n                  </Typography>\r\n                  <Typography variant='p' component='p'>\r\n                    {order.address.address.city}, {order.address.address.state}\r\n                  </Typography>\r\n                  <Typography variant='p' component='p'>\r\n                    {order.address.address.postal_code}\r\n                  </Typography>\r\n                </div>\r\n                <div className='payment-method'>\r\n                  <Typography\r\n                    variant='p'\r\n                    component='p'\r\n                    sx={{ fontWeight: 600, mb: 2 }}\r\n                  >\r\n                    Payment Method\r\n                  </Typography>\r\n                  <Typography variant='p' component='p'>\r\n                    {order.paymentMethod.card.network.toUpperCase()} ****{' '}\r\n                    {order.paymentMethod.card.last4}\r\n                  </Typography>\r\n                </div>\r\n                <Box sx={{ width: 275 }}>\r\n                  <Typography\r\n                    variant='p'\r\n                    component='p'\r\n                    sx={{ fontWeight: 600, mb: 2 }}\r\n                  >\r\n                    Order Summary\r\n                  </Typography>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '0.6rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Item(s) Subtotal</Typography>\r\n                    <Typography variant='p'>${order.amount}</Typography>\r\n                  </div>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '0.6rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Shipping & Handling</Typography>\r\n                    <Typography variant='p'>$50</Typography>\r\n                  </div>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '0.6rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Tax</Typography>\r\n                    <Typography variant='p'>$50</Typography>\r\n                  </div>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '0.6rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Grand Total</Typography>\r\n                    <Typography variant='p'>${order.amount}</Typography>\r\n                  </div>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n            <Box\r\n              className='order-products'\r\n              sx={{\r\n                border: '2px solid #DCDCDC',\r\n                borderRadius: '10px',\r\n                padding: '1.5rem',\r\n                my: 3,\r\n              }}\r\n            >\r\n              {order.products &&\r\n                order.products.map((product) => {\r\n                  return (\r\n                    <Link to={`/products/${product._id}`} key={product._id}>\r\n                      <img src={product.image} alt='image' />\r\n                    </Link>\r\n                  );\r\n                })}\r\n            </Box>\r\n          </>\r\n        )\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OrderDetailScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\RegisterScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\LoginScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\DashboardScreen.js",["232"],"import { useEffect, useMemo, useState } from 'react';\r\nimport { Grid, Typography, Box, Paper, Alert } from '@mui/material';\r\nimport Chart from '../../components/admin/Chart';\r\nimport { getUserStats } from '../../actions/userActions';\r\nimport AdminSidenav from '../../components/admin/AdminSidenav';\r\nimport NewUsersComponent from '../../components/admin/NewUsersComponent';\r\nimport LatestOrdersComponent from '../../components/admin/LatestOrdersComponent';\r\nimport RevenueComponent from '../../components/admin/RevenueComponent';\r\nimport { userRequest } from '../../requestMethods';\r\n\r\nconst DashboardScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  const MONTHS = useMemo(\r\n    () => [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec',\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getStats = async () => {\r\n      try {\r\n        const { data } = await userRequest.get(`/users/stats`);\r\n\r\n        const list = data.sort((a, b) => {\r\n          return a._id - b._id;\r\n        });\r\n        list.map((item) =>\r\n          setUserData((prev) => [\r\n            ...prev,\r\n            { name: MONTHS[item._id - 1], 'Active User': item.total },\r\n          ])\r\n        );\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n    getStats();\r\n  }, [MONTHS]);\r\n\r\n  return (\r\n    <Box sx={{ minHeight: '85vh' }}>\r\n      <Typography\r\n        variant='h4'\r\n        sx={{ my: 3, paddingLeft: '1rem' }}\r\n        align='center'\r\n      >\r\n        ShopMart Admin\r\n      </Typography>\r\n      {message && (\r\n        <Alert severity='error' sx={{ mb: 3 }}>\r\n          {message}\r\n        </Alert>\r\n      )}\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          md={2}\r\n          sx={{ marginLeft: '0.5rem', backgroundColor: '#F2F2F5' }}\r\n        >\r\n          <AdminSidenav />\r\n        </Grid>\r\n        <Grid item xs={6} md={9}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <RevenueComponent />\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n              <Typography variant='h5'>Revenue</Typography>\r\n              <Typography\r\n                component='p'\r\n                variant='p'\r\n                sx={{ fontSize: 30, my: 2 }}\r\n              >\r\n                $3218\r\n              </Typography>\r\n              <Typography component='p' variant='p' className='text-light'>\r\n                Compared to Last Month\r\n              </Typography>\r\n            </Paper>\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n              <Typography variant='h5'>Revenue</Typography>\r\n              <Typography\r\n                component='p'\r\n                variant='p'\r\n                sx={{ fontSize: 30, my: 2 }}\r\n              >\r\n                $3218\r\n              </Typography>\r\n              <Typography component='p' variant='p' className='text-light'>\r\n                Compared to Last Month\r\n              </Typography>\r\n            </Paper>\r\n          </Box>\r\n          <Chart\r\n            data={userData}\r\n            title='User Analytics'\r\n            grid\r\n            dataKey='Active User'\r\n          />\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n              <Typography\r\n                variant='p'\r\n                sx={{ fontWeight: 600, fontSize: 20, mb: 3 }}\r\n              >\r\n                Newly Joined Members\r\n              </Typography>\r\n              <NewUsersComponent />\r\n            </Paper>\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '60%' }}>\r\n              <Typography\r\n                variant='p'\r\n                sx={{ fontWeight: 600, fontSize: 20, mb: 3 }}\r\n              >\r\n                Latest Orders\r\n              </Typography>\r\n              <LatestOrdersComponent />\r\n            </Paper>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductsScreen.js",["233","234"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Container, Typography, Alert, Button } from '@mui/material';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { deleteProduct, getProducts } from '../../actions/productAction';\r\nimport Spinner from '../../components/Spinner';\r\nimport AlertClosable from '../../components/AlertClosable';\r\n\r\nconst ProductsScreen = () => {\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const { error: deleteError, success: successDelete } = productDelete;\r\n\r\n  useEffect(() => {\r\n    const history = createBrowserHistory();\r\n    if (history.location.state && history.location.state.successMessage) {\r\n      setSuccessMessage(location.state.successMessage);\r\n      let state = { ...history.location.state };\r\n      delete state.successMessage;\r\n      history.replace({ ...history.location, state });\r\n    }\r\n    dispatch(getProducts());\r\n  }, [successDelete, location]);\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this product?')) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: '_id', headerName: 'ID', width: 250 },\r\n    {\r\n      field: 'product',\r\n      headerName: 'Product',\r\n      width: 220,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className='productListItem'>\r\n            <img className='productListImg' src={params.row.image} alt='' />\r\n            {params.row.title}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    { field: 'inStock', headerName: 'Stock', width: 200 },\r\n    { field: 'price', headerName: 'Price', width: 160 },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/admin/products/${params.row._id}`}>\r\n              <Button\r\n                variant='contained'\r\n                size='small'\r\n                sx={{ mr: 3 }}\r\n                color='secondary'\r\n              >\r\n                Edit\r\n              </Button>\r\n            </Link>\r\n            <DeleteOutlineIcon\r\n              className='productListDelete'\r\n              onClick={() => handleDelete(params.row._id)}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{ minHeight: '90vh', mt: 4, mb: 5 }}>\r\n        <Typography variant='h4'>Products</Typography>\r\n        <Button variant='contained' color='secondary' sx={{ mt: 1, mb: 2 }}>\r\n          <Link to={'/admin/products/create'}>Create Product</Link>\r\n        </Button>\r\n        {loading && <Spinner />}\r\n        {error && <Alert severity='error'>{error}</Alert>}\r\n        {successMessage && (\r\n          <AlertClosable message={successMessage} variant='success' />\r\n        )}\r\n        {products && (\r\n          <div style={{ height: '800', width: '100%' }} className='productList'>\r\n            <DataGrid\r\n              rows={products}\r\n              disableSelectionOnClick\r\n              columns={columns}\r\n              getRowId={(row) => row._id}\r\n              pageSize={10}\r\n              checkboxSelection\r\n            />\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\CreateProductScreen.js",["235"],"import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  Typography,\r\n  TextField,\r\n  Alert,\r\n  Button,\r\n} from '@mui/material';\r\nimport ProgressBar from '../../components/ProgressBar';\r\nimport { createProduct } from '../../actions/productAction';\r\nimport { PRODUCT_CREATE_RESET } from '../../actions/actionTypes/productTypes';\r\n\r\nconst CreateProductScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n  const [categories, setCategories] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [price, setPrice] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const { error: successError, success: createSuccess } = productCreate;\r\n\r\n  const types = ['image/png', 'image/jpeg'];\r\n\r\n  const handleFileChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError('');\r\n    } else {\r\n      setFile(null);\r\n      setError('Please select an image file (png or jpg)');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title && description && url && categories && size && color && price) {\r\n      dispatch(\r\n        createProduct({\r\n          title,\r\n          description,\r\n          image: url,\r\n          categories: categories.map((item) => item.trim()),\r\n          size: size.map((item) => item.trim()),\r\n          color: color.map((item) => item.trim()),\r\n          price,\r\n        })\r\n      );\r\n    } else {\r\n      setMessage('Please enter all fields');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (createSuccess) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_RESET,\r\n      });\r\n      navigate('/admin/products', {\r\n        state: {\r\n          successMessage: 'Product Created!',\r\n        },\r\n      });\r\n    }\r\n  }, [createSuccess]);\r\n\r\n  return (\r\n    <Box sx={{ my: 5 }}>\r\n      <form\r\n        className='form-container create-product-form'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography textAlign='center' variant='h4'>\r\n          Create New Product\r\n        </Typography>\r\n        {successError && <Alert severity='error'>{successError}</Alert>}\r\n        {message && <Alert severity='error'>{message}</Alert>}\r\n        <div>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='title'\r\n              type='text'\r\n              label='Title'\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              variant='outlined'\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='description'\r\n              label='Description'\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              variant='outlined'\r\n              placeholder='Product description'\r\n              multiline\r\n              rows={5}\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='price'\r\n              type='number'\r\n              label='Price'\r\n              value={price}\r\n              onChange={(e) => setPrice(e.target.value)}\r\n              variant='outlined'\r\n              inputProps={{ inputMode: 'numeric', min: '0' }}\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='color'\r\n              type='text'\r\n              label='Color'\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value.split(','))}\r\n              variant='outlined'\r\n              helperText='e.g blue, red, green'\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='categories'\r\n              type='text'\r\n              label='Categories'\r\n              value={categories}\r\n              onChange={(e) => setCategories(e.target.value.split(','))}\r\n              variant='outlined'\r\n              helperText='e.g shirt, jacket, shoes'\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='size'\r\n              type='text'\r\n              label='Sizes'\r\n              value={size}\r\n              onChange={(e) => setSize(e.target.value.split(','))}\r\n              variant='outlined'\r\n              helperText='e.g S, M, L, XL, XXL'\r\n              required\r\n            />\r\n          </FormControl>\r\n          <FormControl sx={{ mt: 3, width: '100%' }}>\r\n            <TextField\r\n              name='file'\r\n              type='file'\r\n              onChange={handleFileChange}\r\n              variant='outlined'\r\n              required\r\n            />\r\n          </FormControl>\r\n          <div className='file-output'>\r\n            {error && <Alert variant='warning'>{error}</Alert>}\r\n            {file && (\r\n              <ProgressBar\r\n                file={file}\r\n                setFile={setFile}\r\n                url={url}\r\n                setUrl={setUrl}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <Button\r\n          variant='contained'\r\n          sx={{ mt: 5, width: '100%' }}\r\n          type='submit'\r\n          // disabled={progress ? true : false}\r\n        >\r\n          Create\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateProductScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\store.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductScreen.js",["236","237","238","239","240"],"import { useEffect, useMemo, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Alert,\r\n  Avatar,\r\n  FormControl,\r\n  TextField,\r\n  Button,\r\n} from '@mui/material';\r\nimport Chart from '../../components/admin/Chart';\r\nimport AdminSidenav from '../../components/admin/AdminSidenav';\r\nimport { useParams } from 'react-router';\r\nimport { getProductDetail, updateProduct } from '../../actions/productAction';\r\nimport { userRequest } from '../../requestMethods';\r\nimport ProgressBar from '../../components/ProgressBar';\r\nimport AlertClosable from '../../components/AlertClosable';\r\nimport { PRODUCT_UPDATE_RESET } from '../../actions/actionTypes/productTypes';\r\n\r\nconst ProductScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [successUpdateMessage, setSuccessUpdateMessage] = useState('');\r\n  const [pStats, setPStats] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [file, setFile] = useState('');\r\n  const [url, setUrl] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [categories, setCategories] = useState('');\r\n  const [size, setSize] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [price, setPrice] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const { id: productId } = useParams();\r\n\r\n  const productDetail = useSelector((state) => state.productDetail);\r\n  let { loading, error: detailError, product } = productDetail;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  let {\r\n    success: successUpdate,\r\n    error: successError,\r\n    product: updatedProduct,\r\n  } = productUpdate;\r\n\r\n  const types = ['image/png', 'image/jpeg'];\r\n\r\n  const handleFileChange = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError('');\r\n    } else {\r\n      setFile(null);\r\n      setError('Please select an image file (png or jpg)');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (url) {\r\n      dispatch(\r\n        updateProduct(product._id, {\r\n          title,\r\n          description,\r\n          image: url,\r\n          categories: categories.map((item) => item.trim()),\r\n          size: size.map((item) => item.trim()),\r\n          color: color.map((item) => item.trim()),\r\n          price,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        updateProduct(product._id, {\r\n          title,\r\n          description,\r\n          categories: categories.map((item) => item.trim()),\r\n          size: size.map((item) => item.trim()),\r\n          color: color.map((item) => item.trim()),\r\n          price,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!product || product._id !== productId || updatedProduct) {\r\n      dispatch(getProductDetail(productId));\r\n    } else {\r\n      setTitle(product.title);\r\n      setDescription(product.description);\r\n      setColor(product.color.join(', '));\r\n      setSize(product.size.join(', '));\r\n      setCategories(product.categories.join(', '));\r\n      setPrice(product.price);\r\n    }\r\n  }, [productId, product, updatedProduct]);\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_RESET,\r\n      });\r\n      setSuccessUpdateMessage('Product Updated');\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [successUpdate]);\r\n\r\n  const MONTHS = useMemo(\r\n    () => [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec',\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getStats = async () => {\r\n      try {\r\n        const { data } = await userRequest.get(\r\n          '/orders/stats?pid=' + productId\r\n        );\r\n        const list = data.sort((a, b) => {\r\n          return a._id - b._id;\r\n        });\r\n        list.map((item) =>\r\n          setPStats((prev) => [\r\n            ...prev,\r\n            { name: MONTHS[item._id - 1], Sales: item.total },\r\n          ])\r\n        );\r\n      } catch (err) {\r\n        setMessage(err);\r\n      }\r\n    };\r\n    getStats();\r\n  }, [MONTHS, productId]);\r\n\r\n  return (\r\n    <Box sx={{ minHeight: '85vh' }}>\r\n      <Typography\r\n        variant='h4'\r\n        sx={{ my: 3, paddingLeft: '1rem' }}\r\n        align='center'\r\n      >\r\n        {product && product.title}\r\n      </Typography>\r\n      {message && <Alert severity='error'>{message}</Alert>}\r\n      {successUpdateMessage && (\r\n        <AlertClosable message={successUpdateMessage} variant='success' />\r\n      )}\r\n      {detailError && <Alert severity='error'>{detailError}</Alert>}\r\n      <Grid container spacing={2} sx={{ mt: 4 }}>\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          md={2}\r\n          sx={{ marginLeft: '0.5rem', backgroundColor: '#F2F2F5' }}\r\n        >\r\n          <AdminSidenav />\r\n        </Grid>\r\n        {product && (\r\n          <>\r\n            <Grid item xs={6} md={9}>\r\n              <Button variant='contained' color='secondary' sx={{ mb: 3 }}>\r\n                <Link to={`/products/${product._id}`}>View Product Page</Link>\r\n              </Button>\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <Paper elevation={3} sx={{ padding: '2rem', width: '48%' }}>\r\n                  <Chart\r\n                    data={pStats}\r\n                    dataKey='Sales'\r\n                    title='Sales Performance'\r\n                  />\r\n                </Paper>\r\n                <Paper elevation={3} sx={{ padding: '2rem', width: '48%' }}>\r\n                  <Box sx={{ display: 'flex', mb: 3 }}>\r\n                    <Avatar alt={product.title} src={product.image} />\r\n                    <Typography\r\n                      component='p'\r\n                      sx={{ ml: 2, alignSelf: 'center', fontWeight: 600 }}\r\n                    >\r\n                      {product.title}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '70%',\r\n                    }}\r\n                  >\r\n                    <Typography component='p'>Id:</Typography>\r\n                    <Typography component='p'>{product._id}</Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '70%',\r\n                    }}\r\n                  >\r\n                    <Typography component='p'>Sales:</Typography>\r\n                    <Typography component='p'>{product.title}</Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '70%',\r\n                    }}\r\n                  >\r\n                    <Typography component='p'>Active:</Typography>\r\n                    <Typography component='p'>true</Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '70%',\r\n                    }}\r\n                  >\r\n                    <Typography component='p'>In stock:</Typography>\r\n                    <Typography component='p'>\r\n                      {product.inStock ? 'true' : 'false'}\r\n                    </Typography>\r\n                  </Box>\r\n                </Paper>\r\n              </Box>\r\n              <Box sx={{ mt: 3 }}>\r\n                <Paper elevation={3} sx={{ padding: '2rem', width: '100%' }}>\r\n                  <Typography\r\n                    variant='p'\r\n                    sx={{ fontWeight: 600, fontSize: 20, mb: 3 }}\r\n                  >\r\n                    Edit Product\r\n                  </Typography>\r\n                  <Box\r\n                    sx={{ display: 'flex', justifyContent: 'space-between' }}\r\n                  >\r\n                    <form\r\n                      className='product-update-form'\r\n                      onSubmit={handleSubmit}\r\n                    >\r\n                      {message && <Alert severity='error'>{message}</Alert>}\r\n                      <div>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='title'\r\n                            type='text'\r\n                            label='Title'\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            variant='standard'\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='description'\r\n                            label='Description'\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            variant='outlined'\r\n                            placeholder='Product description'\r\n                            multiline\r\n                            rows={5}\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='price'\r\n                            type='number'\r\n                            label='Price'\r\n                            value={price}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                            variant='standard'\r\n                            inputProps={{ inputMode: 'numeric', min: '0' }}\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='color'\r\n                            type='text'\r\n                            label='Color'\r\n                            value={color}\r\n                            onChange={(e) =>\r\n                              setColor(e.target.value.split(','))\r\n                            }\r\n                            variant='standard'\r\n                            helperText='e.g blue, red, green'\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='categories'\r\n                            type='text'\r\n                            label='Categories'\r\n                            value={categories}\r\n                            onChange={(e) =>\r\n                              setCategories(e.target.value.split(','))\r\n                            }\r\n                            variant='standard'\r\n                            helperText='e.g shirt, jacket, shoes'\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='size'\r\n                            type='text'\r\n                            label='Sizes'\r\n                            value={size}\r\n                            onChange={(e) => setSize(e.target.value.split(','))}\r\n                            variant='standard'\r\n                            helperText='e.g S, M, L, XL, XXL'\r\n                          />\r\n                        </FormControl>\r\n                        <FormControl sx={{ mt: 3, width: '100%' }}>\r\n                          <TextField\r\n                            name='file'\r\n                            type='file'\r\n                            onChange={handleFileChange}\r\n                            variant='outlined'\r\n                          />\r\n                        </FormControl>\r\n                        <div className='file-output'>\r\n                          {error && <Alert variant='warning'>{error}</Alert>}\r\n                          {file && (\r\n                            <ProgressBar\r\n                              file={file}\r\n                              setFile={setFile}\r\n                              url={url}\r\n                              setUrl={setUrl}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      <Button\r\n                        variant='contained'\r\n                        sx={{ mt: 5, width: '100%' }}\r\n                        type='submit'\r\n                      >\r\n                        Update\r\n                      </Button>\r\n                    </form>\r\n                    <img className='admin-product-image' src={product.image} />\r\n                  </Box>\r\n                </Paper>\r\n              </Box>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ShowcaseComponent.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductsComponent.js",["241"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductListComponent.js",["242"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Alert,\r\n} from '@mui/material';\r\nimport { getProducts } from '../../actions/productAction';\r\nimport Spinner from '../Spinner';\r\n\r\nconst ProductListComponent = ({ category, filters, sort }) => {\r\n  const [displayProducts, setDisplayProducts] = useState([]);\r\n  const [currentFilters, setCurrentFilters] = useState({});\r\n  const [currentCategory, setCurrentCategory] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  let { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    if (currentCategory !== category) {\r\n      setCurrentCategory(category);\r\n      dispatch(getProducts(category));\r\n    }\r\n  }, [category, currentCategory, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      products &&\r\n      !Object.values(filters).every((x) => x === '') &&\r\n      filters !== currentFilters\r\n    ) {\r\n      setCurrentFilters(filters);\r\n      setDisplayProducts(\r\n        products.filter((product) => {\r\n          for (const [key, value] of Object.entries(filters)) {\r\n            if (value !== '') {\r\n              return product[key].includes(value);\r\n            }\r\n          }\r\n        })\r\n      );\r\n    } else if (products && Object.keys(currentFilters).length === 0) {\r\n      setDisplayProducts(products);\r\n    }\r\n  }, [products, filters, currentFilters]);\r\n\r\n  useEffect(() => {\r\n    if (sort === 'newest') {\r\n      setDisplayProducts((prev) =>\r\n        [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n      );\r\n    } else if (sort === 'asc') {\r\n      setDisplayProducts((prev) => [...prev].sort((a, b) => a.price - b.price));\r\n    } else {\r\n      setDisplayProducts((prev) => [...prev].sort((a, b) => b.price - a.price));\r\n    }\r\n  }, [sort]);\r\n\r\n  // filteredProducts ? show filtered products : show all products\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : displayProducts && displayProducts.length > 0 ? (\r\n        <Grid\r\n          className='products-container'\r\n          container\r\n          spacing={{ xs: 2, md: 3 }}\r\n          sx={{ minHeight: '70vh' }}\r\n        >\r\n          {error && <Alert severity='error'>{error}</Alert>}\r\n          {displayProducts.map((product, index) => {\r\n            return (\r\n              <Grid\r\n                className='product-item'\r\n                item\r\n                sx={{ width: '100%' }}\r\n                xs={12}\r\n                sm={6}\r\n                md={3}\r\n                key={index}\r\n              >\r\n                <Link to={`/products/${product._id}`}>\r\n                  <Card sx={{ width: '100%' }}>\r\n                    <CardMedia\r\n                      component='img'\r\n                      height='300'\r\n                      image={product.image}\r\n                      alt={product.title}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant='p'\r\n                        sx={{\r\n                          color: 'text.primary',\r\n                          fontSize: 22,\r\n                          fontWeight: 'medium',\r\n                        }}\r\n                        className='product-title'\r\n                      >\r\n                        {product.title}\r\n                      </Typography>\r\n                      <Typography\r\n                        gutterBottom\r\n                        variant='p'\r\n                        sx={{\r\n                          display: 'block',\r\n                          color: 'text.primary',\r\n                          fontSize: 18,\r\n                          fontWeight: 'medium',\r\n                        }}\r\n                      >\r\n                        ${product.price}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </Card>\r\n                </Link>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      ) : (\r\n        <Alert severity='warning' sx={{ my: 3 }}>\r\n          No Products Found...\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\firebase.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\userActions.js",["243","244","245","246"],"import { publicRequest, userRequest } from '../requestMethods';\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_LOGOUT,\r\n  USER_STATS_FAIL,\r\n  USER_STATS_REQUEST,\r\n  USER_STATS_SUCCESS,\r\n} from './actionTypes/userTypes';\r\n\r\nexport const register = (username, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const { data } = await publicRequest.post('/auth/register', {\r\n      username,\r\n      email,\r\n      password,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    window.location.reload();\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (username, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const { data } = await publicRequest.post('/auth/login', {\r\n      username,\r\n      password,\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n    window.location.reload();\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  window.location.reload();\r\n  dispatch({ type: USER_LOGOUT });\r\n  // dispatch({ type: USER_DETAILS_RESET })\r\n  // dispatch({ type: ORDER_LIST_MY_RESET })\r\n};\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\Chart.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\AdminSidenav.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\productAction.js",["247"],"import axios from 'axios';\r\nimport {\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DETAIL_FAIL,\r\n  PRODUCT_DETAIL_REQUEST,\r\n  PRODUCT_DETAIL_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n} from './actionTypes/productTypes';\r\nimport { publicRequest, userRequest } from '../requestMethods';\r\n\r\nexport const getProducts =\r\n  (category = '') =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await publicRequest.get(\r\n        `/products?category=${category}`\r\n      );\r\n\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getProductDetail = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAIL_REQUEST });\r\n\r\n    const { data } = await publicRequest.get(`/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAIL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n    await userRequest.delete(`/products/${id}`);\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = (product) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\r\n    const { data } = await userRequest.post(`/products`, product);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (id, product) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n\r\n    const { data } = await userRequest.put(`/products/${id}`, product);\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\LatestOrdersComponent.js",["248"],"import React from 'react';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nfunction createData(orderNumber, name, date, amount, status) {\r\n  return { orderNumber, name, date, amount, status };\r\n}\r\n\r\nconst rows = [\r\n  createData('#1234', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#1235', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#1236', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#1237', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n];\r\n\r\nconst LatestOrdersComponent = () => {\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align='center'>Order Number</TableCell>\r\n            <TableCell align='center'>Customer</TableCell>\r\n            <TableCell align='center'>Date</TableCell>\r\n            <TableCell align='center'>Amount</TableCell>\r\n            <TableCell align='center'>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              key={row.orderNumber}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component='th' scope='row' align='center'>\r\n                {row.orderNumber}\r\n              </TableCell>\r\n              <TableCell align='center'>{row.name}</TableCell>\r\n              <TableCell align='center'>{row.date}</TableCell>\r\n              <TableCell align='center'>{row.amount}</TableCell>\r\n              <TableCell align='center'>{row.status}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default LatestOrdersComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\NewUsersComponent.js",["249"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Box, Typography, Alert } from '@mui/material';\r\n\r\nconst NewUsersComponent = ({ users }) => {\r\n  const [newUsers, setNewUsers] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    !userInfo && navigate('/login?redirect=/admin');\r\n    userInfo && !userInfo.isAdmin && navigate('/');\r\n\r\n    const getNewUserInfo = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users?new=true`, config);\r\n\r\n        setNewUsers(data);\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n    getNewUserInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {message && <Alert severity='error'>{message}</Alert>}\r\n      {newUsers &&\r\n        newUsers.map((user) => {\r\n          return (\r\n            <Box\r\n              sx={{ display: 'flex', justifyContent: 'space-between', my: 3 }}\r\n              key={user._id}\r\n            >\r\n              <Typography component='p' variant='p'>\r\n                {user.username}\r\n              </Typography>\r\n              <Typography component='p' variant='p'>\r\n                {user.email}\r\n              </Typography>\r\n            </Box>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewUsersComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\RevenueComponent.js",["250"],"import React, { useEffect, useState } from 'react';\r\nimport { Paper, Typography, Box } from '@mui/material';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport { userRequest } from '../../requestMethods';\r\n\r\nconst RevenueComponent = () => {\r\n  const [income, setIncome] = useState([]);\r\n  const [perc, setPerc] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getIncome = async () => {\r\n      try {\r\n        const { data } = await userRequest.get('/orders/stats');\r\n\r\n        const list = data.sort((a, b) => {\r\n          return a._id - b._id;\r\n        });\r\n        setIncome(list);\r\n        setPerc((list[1].total * 100) / list[0].total - 100);\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n    getIncome();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {income && perc && (\r\n        <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n          <Typography variant='h5'>Revenue</Typography>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Typography component='p' variant='p' sx={{ fontSize: 30, my: 2 }}>\r\n              ${income[1].total}\r\n            </Typography>\r\n            <Typography\r\n              component='p'\r\n              variant='p'\r\n              sx={{ fontSize: 15, my: 2, alignSelf: 'center' }}\r\n            >\r\n              {Math.floor(perc)}%\r\n              {perc < 0 ? (\r\n                <ArrowDownwardIcon sx={{ alignSelf: 'center', color: 'red' }} />\r\n              ) : (\r\n                <ArrowUpwardIcon sx={{ alignSelf: 'center', color: 'green' }} />\r\n              )}\r\n            </Typography>\r\n          </Box>\r\n          <Typography component='p' variant='p' className='text-light'>\r\n            Compared to Last Month\r\n          </Typography>\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RevenueComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\requestMethods.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\userTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\productTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\AlertClosable.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ProgressBar.js",["251"],"import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\n\r\nconst ProgressBar = ({ file, setFile, url, setUrl }) => {\r\n  const { progress, url: downloadedUrl } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (downloadedUrl) {\r\n      setFile(null);\r\n      setUrl(downloadedUrl);\r\n    }\r\n  }, [downloadedUrl, setFile]);\r\n\r\n  return <div className='progress-bar' style={{ width: progress + '%' }}></div>;\r\n};\r\n\r\nexport default ProgressBar;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\hooks\\useStorage.js",["252"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n  getDownloadURL,\r\n} from 'firebase/storage';\r\nimport app from '../firebase';\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fileName = new Date().getTime() + file.name;\r\n    const storage = getStorage(app);\r\n    const storageRef = ref(storage, fileName);\r\n\r\n    const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n    uploadTask.on(\r\n      'state_changed',\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await getDownloadURL(uploadTask.snapshot.ref);\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\UsersScreen.js",["253","254"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Typography, Alert, Button } from '@mui/material';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport Spinner from '../../components/Spinner';\r\nimport { userRequest } from '../../requestMethods';\r\n\r\nconst UsersScreen = () => {\r\n  const [users, setUsers] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const getUsers = async () => {\r\n      try {\r\n        const { data } = await userRequest.get(`/users`);\r\n        setUsers(data);\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n    getUsers();\r\n  }, []);\r\n\r\n  const columns = [\r\n    { field: '_id', headerName: 'ID', width: 250 },\r\n    { field: 'username', headerName: 'Username', width: 200 },\r\n    { field: 'email', headerName: 'Email', width: 200 },\r\n    { field: 'createdAt', headerName: 'Joined', width: 160 },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            {' '}\r\n            <Link to={`/admin/userorders/${params.row._id}`}>\r\n              {' '}\r\n              <Button\r\n                variant='contained'\r\n                size='small'\r\n                sx={{ backgroundColor: 'green !important', mr: 3 }}\r\n              >\r\n                {' '}\r\n                Check Orders\r\n              </Button>{' '}\r\n            </Link>{' '}\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{ minHeight: '85vh', mt: 4 }}>\r\n        {' '}\r\n        <Typography variant='h4'>Users</Typography>\r\n        {!users && <Spinner />}\r\n        {message && <Alert severity='error'>{message}</Alert>}\r\n        {users && (\r\n          <div style={{ height: '800', width: '100%' }} className='productList'>\r\n            <DataGrid\r\n              rows={users}\r\n              disableSelectionOnClick\r\n              columns={columns}\r\n              getRowId={(row) => row._id}\r\n              pageSize={10}\r\n              checkboxSelection\r\n            />\r\n          </div>\r\n        )}\r\n      </Container>{' '}\r\n    </>\r\n  );\r\n};\r\nexport default UsersScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\TransactionsScreen.js",["255"],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","severity":1,"message":"261","line":13,"column":8,"nodeType":"262","messageId":"263","endLine":13,"endColumn":11},{"ruleId":"260","severity":1,"message":"264","line":2,"column":8,"nodeType":"262","messageId":"263","endLine":2,"endColumn":13},{"ruleId":"260","severity":1,"message":"265","line":19,"column":8,"nodeType":"262","messageId":"263","endLine":19,"endColumn":15},{"ruleId":"260","severity":1,"message":"266","line":36,"column":11,"nodeType":"262","messageId":"263","endLine":36,"endColumn":18},{"ruleId":"267","severity":1,"message":"268","line":43,"column":6,"nodeType":"269","endLine":43,"endColumn":8,"suggestions":"270"},{"ruleId":"267","severity":1,"message":"271","line":54,"column":6,"nodeType":"269","endLine":54,"endColumn":26,"suggestions":"272"},{"ruleId":"267","severity":1,"message":"268","line":83,"column":6,"nodeType":"269","endLine":83,"endColumn":25,"suggestions":"273"},{"ruleId":"260","severity":1,"message":"274","line":30,"column":18,"nodeType":"262","messageId":"263","endLine":30,"endColumn":23},{"ruleId":"267","severity":1,"message":"268","line":43,"column":6,"nodeType":"269","endLine":43,"endColumn":19,"suggestions":"275"},{"ruleId":"260","severity":1,"message":"276","line":3,"column":16,"nodeType":"262","messageId":"263","endLine":3,"endColumn":27},{"ruleId":"277","severity":1,"message":"278","line":92,"column":25,"nodeType":"279","endLine":92,"endColumn":64},{"ruleId":"260","severity":1,"message":"280","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":28},{"ruleId":"260","severity":1,"message":"281","line":9,"column":21,"nodeType":"262","messageId":"263","endLine":9,"endColumn":31},{"ruleId":"260","severity":1,"message":"282","line":10,"column":18,"nodeType":"262","messageId":"263","endLine":10,"endColumn":25},{"ruleId":"260","severity":1,"message":"274","line":14,"column":20,"nodeType":"262","messageId":"263","endLine":14,"endColumn":25},{"ruleId":"267","severity":1,"message":"283","line":18,"column":6,"nodeType":"269","endLine":18,"endColumn":8,"suggestions":"284"},{"ruleId":"277","severity":1,"message":"278","line":168,"column":23,"nodeType":"279","endLine":168,"endColumn":62},{"ruleId":"260","severity":1,"message":"285","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":22},{"ruleId":"260","severity":1,"message":"286","line":22,"column":18,"nodeType":"262","messageId":"263","endLine":22,"endColumn":29},{"ruleId":"267","severity":1,"message":"268","line":33,"column":6,"nodeType":"269","endLine":33,"endColumn":31,"suggestions":"287"},{"ruleId":"267","severity":1,"message":"288","line":78,"column":6,"nodeType":"269","endLine":78,"endColumn":21,"suggestions":"289"},{"ruleId":"260","severity":1,"message":"266","line":42,"column":9,"nodeType":"262","messageId":"263","endLine":42,"endColumn":16},{"ruleId":"260","severity":1,"message":"290","line":47,"column":12,"nodeType":"262","messageId":"263","endLine":47,"endColumn":24},{"ruleId":"267","severity":1,"message":"268","line":104,"column":6,"nodeType":"269","endLine":104,"endColumn":42,"suggestions":"291"},{"ruleId":"267","severity":1,"message":"268","line":114,"column":6,"nodeType":"269","endLine":114,"endColumn":21,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":362,"column":21,"nodeType":"279","endLine":362,"endColumn":80},{"ruleId":"260","severity":1,"message":"295","line":11,"column":10,"nodeType":"262","messageId":"263","endLine":11,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":40,"column":35,"nodeType":"298","messageId":"299","endLine":40,"endColumn":37},{"ruleId":"260","severity":1,"message":"300","line":1,"column":25,"nodeType":"262","messageId":"263","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"301","line":10,"column":3,"nodeType":"262","messageId":"263","endLine":10,"endColumn":18},{"ruleId":"260","severity":1,"message":"302","line":11,"column":3,"nodeType":"262","messageId":"263","endLine":11,"endColumn":21},{"ruleId":"260","severity":1,"message":"303","line":12,"column":3,"nodeType":"262","messageId":"263","endLine":12,"endColumn":21},{"ruleId":"260","severity":1,"message":"264","line":1,"column":8,"nodeType":"262","messageId":"263","endLine":1,"endColumn":13},{"ruleId":"260","severity":1,"message":"304","line":9,"column":8,"nodeType":"262","messageId":"263","endLine":9,"endColumn":13},{"ruleId":"267","severity":1,"message":"305","line":37,"column":6,"nodeType":"269","endLine":37,"endColumn":8,"suggestions":"306"},{"ruleId":"260","severity":1,"message":"307","line":10,"column":10,"nodeType":"262","messageId":"263","endLine":10,"endColumn":17},{"ruleId":"267","severity":1,"message":"308","line":12,"column":6,"nodeType":"269","endLine":12,"endColumn":30,"suggestions":"309"},{"ruleId":"260","severity":1,"message":"310","line":1,"column":8,"nodeType":"262","messageId":"263","endLine":1,"endColumn":13},{"ruleId":"260","severity":1,"message":"311","line":3,"column":10,"nodeType":"262","messageId":"263","endLine":3,"endColumn":21},{"ruleId":"260","severity":1,"message":"312","line":3,"column":23,"nodeType":"262","messageId":"263","endLine":3,"endColumn":34},{"ruleId":"260","severity":1,"message":"313","line":2,"column":48,"nodeType":"262","messageId":"263","endLine":2,"endColumn":51},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"no-unused-vars","'Pay' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Spinner' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["316"],"React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'order'. Either include them or remove the dependency array.",["317"],["318"],"'error' is assigned a value but never used.",["319"],"'useNavigate' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'ProductListComponent' is defined but never used.","'setFilters' is assigned a value but never used.","'setSort' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.",["320"],"'getUserStats' is defined but never used.","'deleteError' is assigned a value but never used.",["321"],"React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.",["322"],"'successError' is assigned a value but never used.",["323"],["324"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useLocation' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'userRequest' is defined but never used.","'USER_STATS_FAIL' is defined but never used.","'USER_STATS_REQUEST' is defined but never used.","'USER_STATS_SUCCESS' is defined but never used.","'Paper' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'userInfo'. Either include them or remove the dependency array.",["325"],"'message' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setUrl'. Either include it or remove the dependency array. If 'setUrl' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["326"],"'React' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Box' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},"Update the dependencies array to be: [dispatch]",{"range":"349","text":"350"},"Update the dependencies array to be: [dispatch, navigate, order, orderCreateSuccess]",{"range":"351","text":"352"},"Update the dependencies array to be: [stripeToken, cart, dispatch]",{"range":"353","text":"354"},"Update the dependencies array to be: [dispatch, id, product]",{"range":"355","text":"356"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"357","text":"358"},"Update the dependencies array to be: [successDelete, location, dispatch]",{"range":"359","text":"360"},"Update the dependencies array to be: [createSuccess, dispatch, navigate]",{"range":"361","text":"362"},"Update the dependencies array to be: [productId, product, updatedProduct, dispatch]",{"range":"363","text":"364"},"Update the dependencies array to be: [dispatch, successUpdate]",{"range":"365","text":"366"},"Update the dependencies array to be: [navigate, userInfo]",{"range":"367","text":"368"},"Update the dependencies array to be: [downloadedUrl, setFile, setUrl]",{"range":"369","text":"370"},[1402,1404],"[dispatch]",[1621,1641],"[dispatch, navigate, order, orderCreateSuccess]",[2487,2506],"[stripeToken, cart, dispatch]",[1221,1234],"[dispatch, id, product]",[659,661],"[dispatch, params.id]",[1402,1427],"[successDelete, location, dispatch]",[2291,2306],"[createSuccess, dispatch, navigate]",[3261,3297],"[productId, product, updatedProduct, dispatch]",[3509,3524],"[dispatch, successUpdate]",[1083,1085],"[navigate, userInfo]",[326,350],"[downloadedUrl, setFile, setUrl]"]