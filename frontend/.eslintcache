[{"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\index.js":"1","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\App.js":"2","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Pay.js":"3","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Navbar.js":"4","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductsListScreen.js":"6","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\assets\\theme.js":"7","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\HomeScreen.js":"8","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\store.js":"9","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js":"10","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductsComponent.js":"11","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductListComponent.js":"12","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ShowcaseComponent.js":"13","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Spinner.js":"14","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\productReducers.js":"15","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\cartReducers.js":"16","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js":"17","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\productAction.js":"18","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\productTypes.js":"19","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\cartActions.js":"20","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\CartScreen.js":"21","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\OrderSuccess.js":"22","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrdersScreen.js":"23","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js":"24","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\orderReducers.js":"25","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\orderActions.js":"26","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js":"27","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\LoginScreen.js":"28","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\RegisterScreen.js":"29","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\userReducers.js":"30","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\userTypes.js":"31","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\userActions.js":"32","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\DashboardScreen.js":"33","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\AdminSidenav.js":"34","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\Chart.js":"35","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\OrderTable.js":"36"},{"size":151,"mtime":1636489073244,"results":"37","hashOfConfig":"38"},{"size":2422,"mtime":1638817884360,"results":"39","hashOfConfig":"38"},{"size":2623,"mtime":1638499570045,"results":"40","hashOfConfig":"38"},{"size":4166,"mtime":1638756311897,"results":"41","hashOfConfig":"38"},{"size":504,"mtime":1637775982799,"results":"42","hashOfConfig":"38"},{"size":791,"mtime":1638042042416,"results":"43","hashOfConfig":"38"},{"size":527,"mtime":1638827499680,"results":"44","hashOfConfig":"38"},{"size":355,"mtime":1637778632910,"results":"45","hashOfConfig":"38"},{"size":1736,"mtime":1638832469940,"results":"46","hashOfConfig":"38"},{"size":5422,"mtime":1638641038026,"results":"47","hashOfConfig":"38"},{"size":4529,"mtime":1638731962004,"results":"48","hashOfConfig":"38"},{"size":3875,"mtime":1638811068007,"results":"49","hashOfConfig":"38"},{"size":755,"mtime":1637109384991,"results":"50","hashOfConfig":"38"},{"size":297,"mtime":1637781129761,"results":"51","hashOfConfig":"38"},{"size":1156,"mtime":1638397969494,"results":"52","hashOfConfig":"38"},{"size":1150,"mtime":1638641755611,"results":"53","hashOfConfig":"38"},{"size":142,"mtime":1638639387710,"results":"54","hashOfConfig":"38"},{"size":1365,"mtime":1638053925481,"results":"55","hashOfConfig":"38"},{"size":366,"mtime":1638046178544,"results":"56","hashOfConfig":"38"},{"size":747,"mtime":1638641732524,"results":"57","hashOfConfig":"38"},{"size":9037,"mtime":1638815589885,"results":"58","hashOfConfig":"38"},{"size":1302,"mtime":1638564410050,"results":"59","hashOfConfig":"38"},{"size":3887,"mtime":1638815448477,"results":"60","hashOfConfig":"38"},{"size":5562,"mtime":1638719332201,"results":"61","hashOfConfig":"38"},{"size":2013,"mtime":1638656411604,"results":"62","hashOfConfig":"38"},{"size":3480,"mtime":1638811495726,"results":"63","hashOfConfig":"38"},{"size":604,"mtime":1638656388978,"results":"64","hashOfConfig":"38"},{"size":3209,"mtime":1638810961811,"results":"65","hashOfConfig":"38"},{"size":4422,"mtime":1638816721611,"results":"66","hashOfConfig":"38"},{"size":1528,"mtime":1638832590507,"results":"67","hashOfConfig":"38"},{"size":560,"mtime":1638832164896,"results":"68","hashOfConfig":"38"},{"size":2857,"mtime":1638832367959,"results":"69","hashOfConfig":"38"},{"size":3795,"mtime":1638833576320,"results":"70","hashOfConfig":"38"},{"size":3995,"mtime":1638833253034,"results":"71","hashOfConfig":"38"},{"size":702,"mtime":1638833498749,"results":"72","hashOfConfig":"38"},{"size":2009,"mtime":1638834179288,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"sa1lf3",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"76"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\index.js",[],["156","157"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\App.js",["158"],"import React from 'react'\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@mui/material'\r\nimport { Provider } from 'react-redux';\r\nimport store from './store'\r\nimport './App.css'\r\n\r\nimport Pay from './components/Pay'\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductDetailScreen from './screens/products/ProductDetailScreen';\r\nimport ProductsListScreen from './screens/products/ProductsListScreen';\r\nimport CartScreen from './screens/CartScreen';\r\n\r\nimport customTheme from './assets/theme';\r\nimport OrderSuccess from './screens/OrderSuccess';\r\nimport OrdersScreen from './screens/orders/OrdersScreen';\r\nimport OrderDetailScreen from './screens/orders/OrderDetailScreen';\r\nimport LoginScreen from './screens/users/LoginScreen';\r\nimport RegisterScreen from './screens/users/RegisterScreen';\r\nimport DashboardScreen from './screens/admin/DashboardScreen';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <ThemeProvider theme={customTheme}>\r\n                <Router>\r\n                    <main style={{ height: \"100%\", width: \"100%\", minWidth: \"100%\" }}>\r\n                        <Navbar />\r\n                            <Routes>\r\n                                <Route path='/login' element={<LoginScreen/>} />\r\n                                <Route path='/register' element={<RegisterScreen/>} />\r\n                                <Route path='/products/category/:category' element={<ProductsListScreen/>} />\r\n                                <Route path='/products/:id' element={<ProductDetailScreen />} />\r\n                                <Route path='/cart' element={<CartScreen />} />\r\n                                <Route path='/success' element={<OrderSuccess/>} />\r\n                                <Route path='/orders/:id' element={<OrderDetailScreen/>} />\r\n                                <Route path='/orders' element={<OrdersScreen/>} />\r\n                                <Route path='/admin' element={<DashboardScreen/>} />\r\n                                <Route path='/' element={<HomeScreen/>} />\r\n                            </Routes>\r\n                        <Footer />\r\n                    </main>\r\n                </Router>\r\n            </ThemeProvider> \r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Pay.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductsListScreen.js",["159","160","161"],"import React, {useState, useEffect} from 'react'\r\nimport {Box} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\nimport ProductListComponent from '../../components/products/ProductListComponent';\r\nimport ProductsComponent from '../../components/products/ProductsComponent';\r\n\r\nconst ProductsListScreen = ({ home=false }) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const location = useLocation();\r\n    const category = location.pathname.split('/')[3]\r\n\r\n    useEffect(() => {\r\n    }, [category])\r\n\r\n    return (\r\n        <Box sx={{mt: 3}}>\r\n            <ProductsComponent category={category} filters={filters} sort={sort}/>\r\n       </Box>\r\n    )\r\n}\r\n\r\nexport default ProductsListScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\assets\\theme.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\store.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js",["162","163","164"],"import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router';\r\n\r\nimport {Box, FormControl, InputLabel, Select, MenuItem, Container, Typography, Button, Grid} from '@mui/material'\r\nimport { getProductDetail } from '../../actions/productAction'\r\nimport Spinner from '../../components/Spinner'\r\nimport { CART_ADD_ITEM } from '../../actions/actionTypes/cartTypes';\r\nimport { addToCart } from '../../actions/cartActions';\r\n\r\nconst ProductDetailScreen = () => {\r\n    const [size, setSize ] = useState('')\r\n    const [color, setColor ] = useState('')\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams();\r\n\r\n    const productDetail = useSelector(state => state.productDetail)\r\n    let { loading, error, product } = productDetail\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetail(id))\r\n    }, [id])\r\n\r\n    const displaySize = (size) => {\r\n        if(size === 'S'){\r\n            return 'Small'\r\n        } else if (size === 'M'){\r\n            return 'Medium'\r\n        } else if (size === 'L'){\r\n            return 'Large'\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (type) => {\r\n        if(type === 'sub'){\r\n            quantity > 1 && setQuantity(quantity - 1)\r\n        } else if (type === 'add'){\r\n            setQuantity(quantity + 1)\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        dispatch(addToCart({\r\n            ...product, \r\n                quantity,\r\n                color,\r\n                size,\r\n                productId: product._id + Date.now()\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"product-detail-container\">\r\n            {loading ? \r\n                 <Spinner /> : (\r\n                    product && product._id && (\r\n                        <Container>\r\n                            <Typography variant=\"h3\" sx={{fontWeight: \"light\", mt: 4, mb:2, fontSize: 38}}>{product.title}</Typography>\r\n                            <Grid container spacing={{ xs: 2, md: 3}}>\r\n                                <Grid item sx={{ width:'100%'}} xs={12} md={6}>\r\n                                    <img src={product.image} alt={product.title} /> \r\n                                </Grid>\r\n                                <Grid item sx={{ width:'100%' }} xs={12} md={6}>\r\n                                    <Typography gutterbottom variant=\"h4\" sx={{fontWeight: \"light\", my: 3}}>$ {product.price}</Typography>\r\n                                    <Typography gutterbottom variant=\"p\" sx={{lineHeight: 1.5}}>{product.description}</Typography>\r\n                                    <Box sx={{display: 'flex', mt: 3, alignItems: 'center'}}>\r\n                                        <Box sx={{display: 'flex'}}>\r\n                                            <Typography variant=\"p\" sx={{fontSize: 20, mr: 1}}>Color</Typography>\r\n                                            <div className=\"colors\">\r\n                                                {product.color.map( c => {\r\n                                                    return  <button className=\"color\" style={{backgroundColor: `${c}`}} key={c} onClick={()=>setColor(c)}></button>\r\n                                                })}\r\n                                            </div>\r\n                                        </Box> \r\n                                        <Box sx={{ minWidth: 120 }}>\r\n                                            <FormControl fullWidth sx={{ml: 4}}>\r\n                                            <InputLabel id=\"size\">Size</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"size\"\r\n                                                id=\"size-select\"\r\n                                                value={size}\r\n                                                label=\"Size\"\r\n                                                onChange={(e) => {setSize(e.target.value)}}\r\n                                            >\r\n                                                {product.size.map( size => {\r\n                                                    return  <MenuItem value={size} key={size}>{displaySize(size)}</MenuItem>\r\n                                                })}\r\n                                            </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                    </Box>   \r\n                                    <div className=\"quantity-counter\">\r\n                                        <button onClick={()=>handleQuantity('sub')}><i class=\"fas fa-minus\"></i></button>\r\n                                        <span className=\"number\">{quantity}</span>\r\n                                        <button onClick={()=>handleQuantity('add')}><i class=\"fas fa-plus\"></i></button>\r\n                                    </div>\r\n                                    <Button variant=\"contained\" color=\"secondary\" sx={{mt: 4, display: 'inline-block', width: '100%'}} onClick={()=>handleClick()}>Add to cart</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                    )\r\n                 )}\r\n          \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductDetailScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductsComponent.js",["165"],"import React, {useState} from 'react'\r\nimport {Box, FormControl, InputLabel, Select, MenuItem, Container, Typography} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\n\r\nimport ProductListComponent from './ProductListComponent';\r\n\r\nconst ProductsComponent = ({ home = false, category}) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const handleFilters = (e) =>{\r\n        const value = e.target.value;\r\n        setFilters({\r\n            ...filters,\r\n            [e.target.name]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container sx={{mb: 5}}>\r\n            {category && <Typography variant=\"h3\">{category}</Typography>}\r\n            <Box className=\"product-filters\" sx={{ display: 'flex', marginTop: home ? '3rem' : '', justifyContent: 'space-between'}}>\r\n                <div className=\"left-section\">\r\n                    <div style={{display: 'flex', alignItems: 'center', marginRight: '1rem'}}>\r\n                        <Typography variant=\"h5\" sx={{fontSize: '1.5rem'}}>Filter Products:</Typography>\r\n                    </div>\r\n                    <Box sx={{ minWidth: 120, mr:3 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Size</InputLabel>\r\n                            <Select\r\n                                labelId=\"size\"\r\n                                label=\"Size\"\r\n                                name=\"size\"\r\n                                value={filters.size}\r\n                                onChange={(e)=>handleFilters(e)}\r\n                            >\r\n                                <MenuItem value={\"S\"}>Small</MenuItem>\r\n                                <MenuItem value={\"M\"}>Medium</MenuItem>\r\n                                <MenuItem value={\"L\"}>Large</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Color</InputLabel>\r\n                            <Select\r\n                                labelId=\"color\"\r\n                                label=\"color\"\r\n                                name=\"color\"\r\n                                value={filters.color}\r\n                                onChange={(e)=>handleFilters(e)}\r\n                            >\r\n                                <MenuItem value={\"black\"}>Black</MenuItem>\r\n                                <MenuItem value={\"yellow\"}>Yellow</MenuItem>\r\n                                <MenuItem value={\"orange\"}>Orange</MenuItem>\r\n                                <MenuItem value={\"blue\"}>Blue</MenuItem>\r\n                                <MenuItem value={\"khaki\"}>Khaki</MenuItem>\r\n                                <MenuItem value={\"beige\"}>Beige</MenuItem>\r\n                                <MenuItem value={\"pink\"}>Pink</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                </div>\r\n                <div className=\"right-section\">\r\n                    <div style={{display: 'flex', alignItems: 'center', marginRight: '1rem'}}>\r\n                        <Typography variant=\"h5\" sx={{fontSize: '1.5rem'}}>Sort Products:</Typography>\r\n                    </div>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Sort</InputLabel>\r\n                            <Select\r\n                                labelId=\"sort\"\r\n                                id=\"sort-select\"\r\n                                value={sort}\r\n                                label=\"sort\"\r\n                                name=\"sort\"\r\n                                onChange={(e) => {setSort(e.target.value)}}\r\n                            >\r\n                                <MenuItem value={\"newest\"}>Newest</MenuItem>\r\n                                <MenuItem value={\"desc\"}>Price: High To Low</MenuItem>\r\n                                <MenuItem value={\"asc\"}>Price: Low To High</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    </div>\r\n                </Box>\r\n                <ProductListComponent category={category} filters={filters} sort={sort}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductsComponent\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductListComponent.js",["166"],"import React, {useState, useEffect}from 'react' \r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Grid, Card, CardMedia, CardContent, Typography, Alert} from '@mui/material'\r\nimport { getProducts } from '../../actions/productAction'\r\nimport Spinner from '../Spinner'\r\n\r\n\r\nconst ProductListComponent = ({category, filters, sort}) => {\r\n    const [ displayProducts, setDisplayProducts ] = useState([])\r\n    const [currentFilters, setCurrentFilters ] = useState({})\r\n    const [currentCategory, setCurrentCategory] = useState([])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    let { loading, error, products } = productList\r\n\r\n    useEffect(() => { \r\n        if(currentCategory !== category){\r\n            setCurrentCategory(category)\r\n            dispatch(getProducts(category))\r\n        }\r\n    }, [category, currentCategory, dispatch])\r\n \r\n    useEffect(() => {\r\n        if(products && !Object.values(filters).every(x => x === '') && filters !== currentFilters){\r\n            setCurrentFilters(filters)\r\n            setDisplayProducts(products.filter((product) => {\r\n                for (const [key, value] of Object.entries(filters)){\r\n                    if(value !== ''){\r\n                        return product[key].includes(value)\r\n                    }           \r\n                }\r\n            }))\r\n        } else if (products && Object.keys(currentFilters).length === 0){\r\n            setDisplayProducts(products)\r\n        }\r\n    }, [products, filters, currentFilters])\r\n\r\n    useEffect(() =>  {\r\n        if(sort === 'newest'){\r\n            setDisplayProducts((prev) => \r\n                [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n            )\r\n        } else if(sort === 'asc'){\r\n            setDisplayProducts((prev) => \r\n                [...prev].sort((a, b) => a.price - b.price)\r\n            )\r\n        }else{\r\n            setDisplayProducts((prev) =>\r\n                [...prev].sort((a, b) => b.price - a.price)\r\n            )\r\n        }\r\n    }, [sort])\r\n\r\n// filteredProducts ? show filtered products : show all products\r\n    return (\r\n        <>\r\n        {loading && <Spinner /> } \r\n        {displayProducts && displayProducts.length > 0 ? (\r\n            <Grid className=\"products-container\" container spacing={{ xs: 2, md: 3 }} sx={{minHeight: '70vh'}}>\r\n                { error && <Alert severity=\"error\">{error}</Alert>}\r\n                {displayProducts.map((product, index) => {\r\n                    return  <Grid className=\"product-item\" item sx={{ width:'100%' }} xs={12} sm={6} md={3} key={index}>\r\n                        <Link to={`/products/${product._id}`}>\r\n                        <Card sx={{ width:'100%'}}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"300\"\r\n                                image={product.image}\r\n                                alt={product.title}\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"p\" sx={{ color: 'text.primary', fontSize: 22, fontWeight: 'medium' }} className=\"product-title\">{product.title}</Typography>\r\n                                <Typography gutterBottom variant=\"p\" sx={{ display: 'block', color: 'text.primary', fontSize: 18, fontWeight: 'medium' }}>${product.price}</Typography>\r\n                            </CardContent>                       \r\n                        </Card>\r\n                        </Link>\r\n                    </Grid>\r\n                })}\r\n            </Grid>\r\n        ) : <Alert severity=\"warning\" sx={{display: 'block', minHeight: '70vh'}}>No Products Found...</Alert>\r\n            }        \r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListComponent\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ShowcaseComponent.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\productAction.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\productTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\CartScreen.js",["167","168","169","170","171","172"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Typography, Container, Box, Button, Grid, Card, CardMedia} from '@mui/material'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport { getCartInfo, removeFromCart } from '../actions/cartActions'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Spinner from '../components/Spinner'\r\nimport { ORDER_CREATE_RESET } from '../actions/actionTypes/orderTypes'\r\n\r\nconst KEY = process.env.REACT_APP_STRIPE\r\n\r\n\r\nconst CartScreen = () => {\r\n    const [isPaymentProcessing, setIsPaymentProcessing ] = useState(false)\r\n    const [stripeToken, setStripeToken] = useState(null)\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {loading, success: orderCreateSuccess, error, order} = orderCreate\r\n\r\n    useEffect(() => {\r\n        dispatch(getCartInfo())\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: ORDER_CREATE_RESET })\r\n        if(orderCreateSuccess){\r\n            navigate('/success', {\r\n                state: {\r\n                    paymentInfo: order\r\n                }\r\n            })\r\n        }\r\n    }, [orderCreateSuccess])\r\n    \r\n      const onToken = (token) => {\r\n        setStripeToken(token)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const makeRequest = async (cartTotal) => {\r\n            try {\r\n                const res = await axios.post(`/api/checkout/payment`, \r\n                    {tokenId: stripeToken.id, amount: cartTotal}, \r\n                    {headers: {\r\n                            Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxOTE1NTQzZjg4OWE4Nzc2MWVhODdlYiIsImlzQWRtaW4iOnRydWUsImlhdCI6MTYzODQ5NDI5NSwiZXhwIjoxNjM4NzUzNDk1fQ.KbO-WPyUGOTa_ePyiDUSQ9MDTom6RLKSgaYx-eMEALk'\r\n                        }\r\n                    }\r\n                );\r\n                setIsPaymentProcessing(true)\r\n                const successPaymentData = res.data\r\n                console.log(successPaymentData)\r\n                dispatch(createOrder({\r\n                    stripePaymentId: successPaymentData.id,\r\n                    products: cart.cartItems,\r\n                    amount: successPaymentData.amount,\r\n                    address: successPaymentData.billing_details,\r\n                    paymentMethod: successPaymentData.payment_method_details\r\n                }))\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        stripeToken && makeRequest(cart.total)\r\n    }, [stripeToken, cart])\r\n\r\n\r\n    const handleItemRemoval = (item) => {\r\n        if(window.confirm('Are you sure you want to delete this item?')){\r\n            dispatch(removeFromCart(item))\r\n        }\r\n    }\r\n      \r\n    return (\r\n        <Container sx={{mt: 3, minHeight: '85vh'}}>\r\n            {isPaymentProcessing ? <span>Processing. Please wait...</span> : (\r\n                cart && (\r\n                    <>\r\n                    <Typography variant=\"h4\" align=\"center\" sx={{my: 3}}>Shopping Cart</Typography>\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-between', mb: 4}}>\r\n                        <Link to=\"/\"><Button variant=\"outlined\">Continue Shopping</Button></Link>\r\n                        <Typography variant=\"p\" sx={{textDecoration: 'underline', alignSelf: 'center'}}>Cart Items ({cart.quantity})</Typography>\r\n                        <StripeCheckout\r\n                        name=\"ShopMart\"\r\n                        image=\"https://cdn.pixabay.com/photo/2016/12/07/15/15/lotus-with-hands-1889661_960_720.png\"\r\n                        billingAddress\r\n                        shippingAddress\r\n                        description = {`Your total is $${cart.total}`}\r\n                        amount={cart.total*100}\r\n                        token={onToken}\r\n                        stripeKey={KEY}\r\n                        >\r\n                            <Button variant=\"outlined\">Checkout</Button>\r\n                        </StripeCheckout>                   \r\n                    </Box>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={9}>\r\n                        {cart.cartItems.map((item, index) => {\r\n                            return  <Card className=\"cart-item\" key={`${item._id}_${index}`}>\r\n                                <Button className=\"delete-cart-item\" onClick={() => handleItemRemoval(item)}><CloseIcon sx={{mr: 3}} /></Button>\r\n                                <Link to={`/products/${item._id}`}>\r\n                                    <CardMedia\r\n                                    component=\"img\"\r\n                                    sx={{ width: 151 }}\r\n                                    image={item.image}\r\n                                    alt={item.title}\r\n                                    />\r\n                                </Link>\r\n                                <div className=\"info\">\r\n                                    <div>\r\n                                        <Typography component=\"p\" variant=\"p\"><span>Name: </span><Link to={`/products/${item._id}`}>{item.title.toUpperCase()}</Link></Typography>\r\n                                        <Typography component=\"p\" variant=\"p\"><span>Size: </span>{item.size.toUpperCase()}</Typography>\r\n                                        <button className=\"color\" style={{backgroundColor: item.color}}></button>\r\n                                    </div>\r\n                                    <div>\r\n                                    <Typography component=\"p\" variant=\"p\" sx={{fontSize: 18}}><span>Qty: </span>{item.quantity}</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\" sx={{fontSize: 18}}>${item.price * item.quantity}</Typography>\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        })}\r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n                            <Box sx={{borderRadius: '10%', border: '2px solid #C8C8C8', padding: '2rem'}}>\r\n                                <Typography variant=\"h5\" align=\"center\" sx={{mb: 4}}>Order Summary</Typography>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '1rem'}}>\r\n                                    <Typography variant=\"p\">Item(s) Subtotal</Typography>\r\n                                    <Typography variant=\"p\">${cart.total}</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '1rem'}}>\r\n                                    <Typography variant=\"p\">Shipping & Handling</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '1rem'}}>\r\n                                    <Typography variant=\"p\">Tax</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '1rem'}}>\r\n                                    <Typography variant=\"p\">Grand Total</Typography>\r\n                                    <Typography variant=\"p\">${cart.total}</Typography>\r\n                                </div>\r\n                                <StripeCheckout\r\n                                name=\"ShopMart\"\r\n                                image=\"https://cdn.pixabay.com/photo/2016/12/07/15/15/lotus-with-hands-1889661_960_720.png\"\r\n                                billingAddress\r\n                                shippingAddress\r\n                                description = {`Your total is $${cart.total}`}\r\n                                amount={cart.total*100}\r\n                                token={onToken}\r\n                                stripeKey={KEY}\r\n                            >\r\n                                <Button variant=\"contained\" color=\"secondary\" sx={{display: 'inline-block', width: '100%'}}>Checkout Now</Button>\r\n                            </StripeCheckout>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </>\r\n                )\r\n            )}           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\OrderSuccess.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrdersScreen.js",["173","174"],"import React, {useEffect} from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useNavigate} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Typography, Box, Container, Alert, Button} from '@mui/material'\r\nimport { getUserOrders } from '../../actions/orderActions'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst OrdersScreen = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userOrders = useSelector(state => state.userOrders)\r\n    let { loading, error, orders } = userOrders\r\n\r\n    useEffect(() => { \r\n        if(!userInfo){\r\n            navigate('/login?redirect=/orders')\r\n        } else{\r\n            dispatch(getUserOrders())\r\n        }\r\n    }, [dispatch])\r\n\r\n    const displayDate = (date) =>{\r\n        const newDate = new Date(date)\r\n        return moment(newDate).format('MM/DD/YYYY')\r\n    }\r\n\r\n    return (\r\n        <Container sx={{minHeight:'85vh'}}>\r\n            <Box sx={{display:'flex', justifyContent: 'space-between'}}>\r\n                <Typography variant=\"h4\" sx={{my: 3}}>Your Orders</Typography>\r\n                <Link to=\"/\" style={{alignSelf:'center'}}><Button variant=\"contained\" color=\"secondary\">Continue Shopping</Button></Link>\r\n            </Box>\r\n            {loading && <Spinner />}\r\n            {error && <Alert severity=\"error\">{error}</Alert> }\r\n            { (orders && orders.length !== 0) ? (\r\n                orders.map(order => {\r\n                   return <Box \r\n                        sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', mb: 3, boxShadow: '0 3px 10px rgb(0 0 0 / 0.2)'}}\r\n                        key={order._id}\r\n                    >\r\n                        <Box sx={{display: 'flex', justifyContent: 'space-between'}} className=\"order-details\">\r\n                            <div className=\"info\">\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Order Placed</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">{displayDate(order.createdAt)}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Total</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Ship To</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">{order.address.name && order.address.name.toUpperCase()}</Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"order-number\">\r\n                                <Typography variant=\"p\">Order #: {order._id}</Typography>\r\n                                <Link to={`/orders/${order._id}`}>View Order Details</Link>\r\n                            </div>\r\n                        </Box>\r\n                    <Box className=\"order-products\" sx={{mt: 3}}>\r\n                    {order.products && order.products.map(product => {\r\n                        return  <Link to={`/products/${product._id}`} key={product._id}>\r\n                        <img \r\n                            src={product.image} \r\n                            alt=\"image\" \r\n                        />   \r\n                    </Link>   \r\n                    })}                   \r\n                    </Box>\r\n                </Box>\r\n                })\r\n            ) : <Alert severity=\"info\">No Orders Found...</Alert>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrdersScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js",["175","176","177"],"import React, {useEffect} from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport { Box, Typography, Container, Button} from '@mui/material'\r\nimport moment from 'moment'\r\nimport { getOrderDetails } from '../../actions/orderActions'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst OrderDetailScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { loading, error, order } = orderDetails \r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(params.id))\r\n    }, [])\r\n\r\n    const displayDate = (date) =>{\r\n        const newDate = new Date(date)\r\n        return moment(newDate).format('MM/DD/YYYY')\r\n    }\r\n\r\n    return (\r\n        <>\r\n       {loading ? <Spinner /> : (\r\n            order && (\r\n                <Container sx={{minHeight: '85vh', pt: 3}}>\r\n                    <Box sx={{display:'flex', justifyContent: 'space-between'}}>\r\n                        <Typography variant=\"h4\" sx={{mt: 2, mb: 1}}>Order Details:  (Order# {order._id})</Typography>\r\n                        <Link to=\"/\" style={{alignSelf:'center'}}><Button variant=\"contained\" color=\"secondary\">Continue Shopping</Button></Link>\r\n                    </Box>\r\n                    <Typography component=\"p\" variant=\"p\"></Typography>\r\n                        <Typography component=\"p\" variant=\"p\" sx={{mb:2}}>Order placed on: {displayDate(order.createdAt)}</Typography>\r\n                    <Box \r\n                    sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', mb: 3}}\r\n                    key={order._id}\r\n                    >\r\n                        <Box sx={{display: 'flex', justifyContent: 'space-between'}} className=\"order-details\">\r\n                            <div className=\"address\">\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Shipping Address</Typography>\r\n                                <Typography variant=\"p\" component=\"p\">{order.address.name.toUpperCase()}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.line1}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.line2}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.city}, {order.address.address.state}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.postal_code}</Typography>  \r\n                            </div>\r\n                            <div className=\"payment-method\">\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Payment Method</Typography>\r\n                                <Typography variant=\"p\" component=\"p\">{order.paymentMethod.card.network.toUpperCase()} **** {order.paymentMethod.card.last4}</Typography>   \r\n                            </div>\r\n                            <Box sx={{width: 275}}>\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Order Summary</Typography>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Item(s) Subtotal</Typography>\r\n                                    <Typography variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Shipping & Handling</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Tax</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Grand Total</Typography>\r\n                                    <Typography variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"order-products\" sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', my: 3}}>\r\n                    {order.products && order.products.map(product => {\r\n                        return  <Link to={`/products/${product._id}`} key={product._id}>\r\n                        <img \r\n                            src={product.image} \r\n                            alt=\"image\" \r\n                        />   \r\n                    </Link>   \r\n                    })}                   \r\n                    </Box>\r\n                </Container>\r\n            )\r\n       )}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default OrderDetailScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\LoginScreen.js",["178"],"import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { Typography, FormControl, Button, Box, TextField, Alert} from '@mui/material'\r\nimport { login } from '../../actions/userActions'\r\n\r\nconst LoginScreen = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo, error, success } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() =>{\r\n        // if(success){\r\n        //     dispatch({\r\n        //         type: SET_GLOBAL_ALERT,\r\n        //         payload: {\r\n        //             alert: 'Welcome back!',\r\n        //             alertType: 'success'\r\n        //         }\r\n        //     })\r\n        //     history.push(redirect)\r\n        // }\r\n        // if(userInfo){\r\n        //     return history.push(redirect)\r\n        // }\r\n        if(success){\r\n            navigate(redirect)\r\n        }\r\n        if(userInfo){\r\n            return navigate(redirect)\r\n        }\r\n    }, [success, navigate, dispatch, userInfo])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(username, password))\r\n    }\r\n\r\n    return (\r\n        <Box className=\"auth-form\">\r\n            <form className=\"form-container\" onSubmit={handleSubmit}>\r\n                <Typography textAlign=\"center\" variant=\"h4\">Sign In</Typography>\r\n                {error && <Alert severity=\"error\">{error}</Alert>}\r\n                <div>   \r\n                    <FormControl sx={{mt:3, width: '100%'}}>\r\n                        <TextField \r\n                            name=\"username\" \r\n                            type=\"text\"\r\n                            label=\"Username\" \r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)} \r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl sx={{mt:3, width: '100%'}}>\r\n                        <TextField \r\n                            name=\"password\" \r\n                            type=\"password\"\r\n                            label=\"Password\" \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)} \r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                </div>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    sx={{mt:5, width:\"100%\"}}\r\n                    type=\"submit\"\r\n                > \r\n                    Sign In\r\n                </Button>\r\n                <Typography component=\"p\" variant=\"p\" color=\"light\" sx={{mt:3}}>Don't have an account? <Link to=\"/register\">Sign Up Here</Link></Typography>\r\n            </form>        \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\RegisterScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\userTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\DashboardScreen.js",["179","180","181","182","183","184"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\AdminSidenav.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\Chart.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\OrderTable.js",["185"],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":11},{"ruleId":"190","severity":1,"message":"194","line":5,"column":8,"nodeType":"192","messageId":"193","endLine":5,"endColumn":28},{"ruleId":"190","severity":1,"message":"195","line":9,"column":21,"nodeType":"192","messageId":"193","endLine":9,"endColumn":31},{"ruleId":"190","severity":1,"message":"196","line":10,"column":18,"nodeType":"192","messageId":"193","endLine":10,"endColumn":25},{"ruleId":"190","severity":1,"message":"197","line":8,"column":10,"nodeType":"192","messageId":"193","endLine":8,"endColumn":23},{"ruleId":"190","severity":1,"message":"198","line":20,"column":20,"nodeType":"192","messageId":"193","endLine":20,"endColumn":25},{"ruleId":"199","severity":1,"message":"200","line":24,"column":8,"nodeType":"201","endLine":24,"endColumn":12,"suggestions":"202"},{"ruleId":"190","severity":1,"message":"203","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":21},{"ruleId":"204","severity":1,"message":"205","line":29,"column":58,"nodeType":"206","messageId":"207","endLine":29,"endColumn":60},{"ruleId":"190","severity":1,"message":"208","line":10,"column":8,"nodeType":"192","messageId":"193","endLine":10,"endColumn":15},{"ruleId":"190","severity":1,"message":"209","line":26,"column":12,"nodeType":"192","messageId":"193","endLine":26,"endColumn":19},{"ruleId":"190","severity":1,"message":"198","line":26,"column":50,"nodeType":"192","messageId":"193","endLine":26,"endColumn":55},{"ruleId":"199","severity":1,"message":"200","line":30,"column":8,"nodeType":"201","endLine":30,"endColumn":10,"suggestions":"210"},{"ruleId":"199","severity":1,"message":"211","line":42,"column":8,"nodeType":"201","endLine":42,"endColumn":28,"suggestions":"212"},{"ruleId":"199","severity":1,"message":"200","line":74,"column":8,"nodeType":"201","endLine":74,"endColumn":27,"suggestions":"213"},{"ruleId":"199","severity":1,"message":"214","line":26,"column":8,"nodeType":"201","endLine":26,"endColumn":18,"suggestions":"215"},{"ruleId":"216","severity":1,"message":"217","line":70,"column":25,"nodeType":"218","endLine":73,"endColumn":27},{"ruleId":"190","severity":1,"message":"198","line":14,"column":22,"nodeType":"192","messageId":"193","endLine":14,"endColumn":27},{"ruleId":"199","severity":1,"message":"219","line":18,"column":8,"nodeType":"201","endLine":18,"endColumn":10,"suggestions":"220"},{"ruleId":"216","severity":1,"message":"217","line":77,"column":25,"nodeType":"218","endLine":80,"endColumn":27},{"ruleId":"199","severity":1,"message":"221","line":40,"column":8,"nodeType":"201","endLine":40,"endColumn":47,"suggestions":"222"},{"ruleId":"190","severity":1,"message":"223","line":3,"column":40,"nodeType":"192","messageId":"193","endLine":3,"endColumn":46},{"ruleId":"190","severity":1,"message":"209","line":14,"column":11,"nodeType":"192","messageId":"193","endLine":14,"endColumn":18},{"ruleId":"190","severity":1,"message":"198","line":14,"column":20,"nodeType":"192","messageId":"193","endLine":14,"endColumn":25},{"ruleId":"190","severity":1,"message":"224","line":14,"column":27,"nodeType":"192","messageId":"193","endLine":14,"endColumn":32},{"ruleId":"199","severity":1,"message":"200","line":36,"column":6,"nodeType":"201","endLine":36,"endColumn":8,"suggestions":"225"},{"ruleId":"199","severity":1,"message":"226","line":46,"column":6,"nodeType":"201","endLine":46,"endColumn":16,"suggestions":"227"},{"ruleId":"190","severity":1,"message":"228","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":13},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'Pay' is defined but never used.","Identifier","unusedVar","'ProductListComponent' is defined but never used.","'setFilters' is assigned a value but never used.","'setSort' is assigned a value but never used.","'CART_ADD_ITEM' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["231"],"'useLocation' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Spinner' is defined but never used.","'loading' is assigned a value but never used.",["232"],"React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'order'. Either include them or remove the dependency array.",["233"],["234"],"React Hook useEffect has missing dependencies: 'navigate' and 'userInfo'. Either include them or remove the dependency array.",["235"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.",["236"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["237"],"'Avatar' is defined but never used.","'stats' is assigned a value but never used.",["238"],"React Hook useEffect has a missing dependency: 'MONTHS'. Either include it or remove the dependency array.",["239"],"'Paper' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"242","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [dispatch, id]",{"range":"257","text":"258"},"Update the dependencies array to be: [dispatch]",{"range":"259","text":"260"},"Update the dependencies array to be: [dispatch, navigate, order, orderCreateSuccess]",{"range":"261","text":"262"},"Update the dependencies array to be: [stripeToken, cart, dispatch]",{"range":"263","text":"264"},"Update the dependencies array to be: [dispatch, navigate, userInfo]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"267","text":"268"},"Update the dependencies array to be: [success, navigate, dispatch, userInfo, redirect]",{"range":"269","text":"270"},{"range":"271","text":"260"},"Update the dependencies array to be: [MONTHS, userData]",{"range":"272","text":"273"},[947,951],"[dispatch, id]",[1170,1172],"[dispatch]",[1438,1458],"[dispatch, navigate, order, orderCreateSuccess]",[2808,2827],"[stripeToken, cart, dispatch]",[852,862],"[dispatch, navigate, userInfo]",[658,660],"[dispatch, params.id]",[1319,1358],"[success, navigate, dispatch, userInfo, redirect]",[935,937],[1161,1171],"[MONTHS, userData]"]