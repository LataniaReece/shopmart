[{"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\index.js":"1","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\App.js":"2","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\store.js":"3","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Pay.js":"4","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Navbar.js":"7","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\CartScreen.js":"8","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js":"9","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\OrderSuccess.js":"10","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductsListScreen.js":"11","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\assets\\theme.js":"12","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js":"13","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\LoginScreen.js":"14","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\DashboardScreen.js":"15","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrdersScreen.js":"16","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\RegisterScreen.js":"17","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductsScreen.js":"18","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\orderReducers.js":"19","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\productReducers.js":"20","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\cartReducers.js":"21","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\userReducers.js":"22","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ShowcaseComponent.js":"23","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Spinner.js":"24","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\cartActions.js":"25","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductListComponent.js":"26","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductsComponent.js":"27","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\productAction.js":"28","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\orderActions.js":"29","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\userActions.js":"30","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js":"31","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js":"32","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\RevenueComponent.js":"33","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\AdminSidenav.js":"34","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\Chart.js":"35","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\LatestOrdersComponent.js":"36","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\NewUsersComponent.js":"37","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\productTypes.js":"38","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\userTypes.js":"39","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\CreateProductScreen.js":"40","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductScreen.js":"41"},{"size":151,"mtime":1636489073244,"results":"42","hashOfConfig":"43"},{"size":2679,"mtime":1639069494945,"results":"44","hashOfConfig":"43"},{"size":1866,"mtime":1639012042454,"results":"45","hashOfConfig":"43"},{"size":2623,"mtime":1638499570045,"results":"46","hashOfConfig":"43"},{"size":504,"mtime":1637775982799,"results":"47","hashOfConfig":"43"},{"size":355,"mtime":1637778632910,"results":"48","hashOfConfig":"43"},{"size":3947,"mtime":1639010287333,"results":"49","hashOfConfig":"43"},{"size":10727,"mtime":1639336455924,"results":"50","hashOfConfig":"43"},{"size":5483,"mtime":1639337532457,"results":"51","hashOfConfig":"43"},{"size":1302,"mtime":1638564410050,"results":"52","hashOfConfig":"43"},{"size":791,"mtime":1638042042416,"results":"53","hashOfConfig":"43"},{"size":527,"mtime":1638827499680,"results":"54","hashOfConfig":"43"},{"size":5562,"mtime":1638719332201,"results":"55","hashOfConfig":"43"},{"size":3209,"mtime":1638810961811,"results":"56","hashOfConfig":"43"},{"size":4687,"mtime":1639334904737,"results":"57","hashOfConfig":"43"},{"size":3887,"mtime":1638815448477,"results":"58","hashOfConfig":"43"},{"size":4422,"mtime":1638816721611,"results":"59","hashOfConfig":"43"},{"size":3053,"mtime":1639069465754,"results":"60","hashOfConfig":"43"},{"size":2013,"mtime":1638656411604,"results":"61","hashOfConfig":"43"},{"size":2044,"mtime":1639012020526,"results":"62","hashOfConfig":"43"},{"size":1150,"mtime":1638641755611,"results":"63","hashOfConfig":"43"},{"size":1528,"mtime":1638832590507,"results":"64","hashOfConfig":"43"},{"size":755,"mtime":1637109384991,"results":"65","hashOfConfig":"43"},{"size":297,"mtime":1637781129761,"results":"66","hashOfConfig":"43"},{"size":747,"mtime":1638641732524,"results":"67","hashOfConfig":"43"},{"size":3875,"mtime":1638811068007,"results":"68","hashOfConfig":"43"},{"size":4529,"mtime":1638731962004,"results":"69","hashOfConfig":"43"},{"size":2795,"mtime":1639011943806,"results":"70","hashOfConfig":"43"},{"size":2998,"mtime":1638912196078,"results":"71","hashOfConfig":"43"},{"size":2857,"mtime":1638832367959,"results":"72","hashOfConfig":"43"},{"size":142,"mtime":1638639387710,"results":"73","hashOfConfig":"43"},{"size":604,"mtime":1638656388978,"results":"74","hashOfConfig":"43"},{"size":2575,"mtime":1639334985867,"results":"75","hashOfConfig":"43"},{"size":4140,"mtime":1638916932106,"results":"76","hashOfConfig":"43"},{"size":702,"mtime":1638833498749,"results":"77","hashOfConfig":"43"},{"size":2035,"mtime":1639178178991,"results":"78","hashOfConfig":"43"},{"size":1722,"mtime":1639334748961,"results":"79","hashOfConfig":"43"},{"size":811,"mtime":1639011991838,"results":"80","hashOfConfig":"43"},{"size":560,"mtime":1638832164896,"results":"81","hashOfConfig":"43"},{"size":3506,"mtime":1639356751846,"results":"82","hashOfConfig":"43"},{"size":5826,"mtime":1639335856121,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"sa1lf3",{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"86"},"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\index.js",[],["182","183"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\App.js",["184"],"import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@mui/material';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './App.css';\r\n\r\nimport Pay from './components/Pay';\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductDetailScreen from './screens/products/ProductDetailScreen';\r\nimport ProductsListScreen from './screens/products/ProductsListScreen';\r\nimport CartScreen from './screens/CartScreen';\r\n\r\nimport customTheme from './assets/theme';\r\nimport OrderSuccess from './screens/OrderSuccess';\r\nimport OrdersScreen from './screens/orders/OrdersScreen';\r\nimport OrderDetailScreen from './screens/orders/OrderDetailScreen';\r\nimport LoginScreen from './screens/users/LoginScreen';\r\nimport RegisterScreen from './screens/users/RegisterScreen';\r\nimport DashboardScreen from './screens/admin/DashboardScreen';\r\nimport ProductsScreen from './screens/admin/ProductsScreen';\r\nimport CreateProductScreen from './screens/admin/CreateProductScreen';\r\nimport ProductScreen from './screens/admin/ProductScreen';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={customTheme}>\r\n        <Router>\r\n          <main style={{ height: '100%', width: '100%', minWidth: '100%' }}>\r\n            <Navbar />\r\n            <Routes>\r\n              <Route path='/login' element={<LoginScreen />} />\r\n              <Route path='/register' element={<RegisterScreen />} />\r\n              <Route\r\n                path='/products/category/:category'\r\n                element={<ProductsListScreen />}\r\n              />\r\n              <Route path='/products/:id' element={<ProductDetailScreen />} />\r\n              <Route path='/cart' element={<CartScreen />} />\r\n              <Route path='/success' element={<OrderSuccess />} />\r\n              <Route path='/orders/:id' element={<OrderDetailScreen />} />\r\n              <Route path='/orders' element={<OrdersScreen />} />\r\n              <Route path='/admin/products' element={<ProductsScreen />} />\r\n              <Route\r\n                path='/admin/products/create'\r\n                element={<CreateProductScreen />}\r\n              />\r\n              <Route path='/admin/products/:id' element={<ProductScreen />} />\r\n              <Route path='/admin' element={<DashboardScreen />} />\r\n              <Route path='/' element={<HomeScreen />} />\r\n            </Routes>\r\n            <Footer />\r\n          </main>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\store.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Pay.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\CartScreen.js",["185","186","187","188","189"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Typography,\r\n  Container,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  Alert,\r\n} from '@mui/material';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { getCartInfo, removeFromCart } from '../actions/cartActions';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Spinner from '../components/Spinner';\r\nimport { ORDER_CREATE_RESET } from '../actions/actionTypes/orderTypes';\r\n\r\nconst KEY = process.env.REACT_APP_STRIPE;\r\n\r\nconst CartScreen = () => {\r\n  const [isPaymentProcessing, setIsPaymentProcessing] = useState(false);\r\n  const [stripeToken, setStripeToken] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { loading, success: orderCreateSuccess, error, order } = orderCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(getCartInfo());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ORDER_CREATE_RESET });\r\n    if (orderCreateSuccess) {\r\n      navigate('/success', {\r\n        state: {\r\n          paymentInfo: order,\r\n        },\r\n      });\r\n    }\r\n  }, [orderCreateSuccess]);\r\n\r\n  const onToken = (token) => {\r\n    setStripeToken(token);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const makeRequest = async (cartTotal) => {\r\n      try {\r\n        const res = await axios.post(\r\n          `/api/checkout/payment`,\r\n          { tokenId: stripeToken.id, amount: cartTotal },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n        );\r\n        setIsPaymentProcessing(true);\r\n        const successPaymentData = res.data;\r\n        console.log(successPaymentData);\r\n        dispatch(\r\n          createOrder({\r\n            stripePaymentId: successPaymentData.id,\r\n            products: cart.cartItems,\r\n            amount: successPaymentData.amount,\r\n            address: successPaymentData.billing_details,\r\n            paymentMethod: successPaymentData.payment_method_details,\r\n          })\r\n        );\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    stripeToken && makeRequest(cart.total);\r\n  }, [stripeToken, cart]);\r\n\r\n  const handleItemRemoval = (item) => {\r\n    if (window.confirm('Are you sure you want to delete this item?')) {\r\n      dispatch(removeFromCart(item));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ mt: 3, minHeight: '85vh' }}>\r\n      {isPaymentProcessing ? (\r\n        <span>Processing. Please wait...</span>\r\n      ) : (\r\n        cart && (\r\n          <>\r\n            <Typography variant='h4' align='center' sx={{ my: 3 }}>\r\n              Shopping Cart\r\n            </Typography>\r\n            {error && <Alert severity='error'>{error}</Alert>}\r\n            <Box\r\n              sx={{ display: 'flex', justifyContent: 'space-between', mb: 4 }}\r\n            >\r\n              <Link to='/'>\r\n                <Button variant='outlined'>Continue Shopping</Button>\r\n              </Link>\r\n              <Typography\r\n                variant='p'\r\n                sx={{ textDecoration: 'underline', alignSelf: 'center' }}\r\n              >\r\n                Cart Items ({cart.quantity})\r\n              </Typography>\r\n              <StripeCheckout\r\n                name='ShopMart'\r\n                image='https://cdn.pixabay.com/photo/2016/12/07/15/15/lotus-with-hands-1889661_960_720.png'\r\n                billingAddress\r\n                shippingAddress\r\n                description={`Your total is $${cart.total}`}\r\n                amount={cart.total * 100}\r\n                token={onToken}\r\n                stripeKey={KEY}\r\n              >\r\n                <Button variant='outlined' disabled={!userInfo ? true : false}>\r\n                  Checkout\r\n                </Button>\r\n              </StripeCheckout>\r\n            </Box>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12} md={9}>\r\n                {cart.cartItems.map((item, index) => {\r\n                  return (\r\n                    <Card className='cart-item' key={`${item._id}_${index}`}>\r\n                      <Button\r\n                        className='delete-cart-item'\r\n                        onClick={() => handleItemRemoval(item)}\r\n                      >\r\n                        <CloseIcon sx={{ mr: 3 }} />\r\n                      </Button>\r\n                      <Link to={`/products/${item._id}`}>\r\n                        <CardMedia\r\n                          component='img'\r\n                          sx={{ width: 151 }}\r\n                          image={item.image}\r\n                          alt={item.title}\r\n                        />\r\n                      </Link>\r\n                      <div className='info'>\r\n                        <div>\r\n                          <Typography component='p' variant='p'>\r\n                            <span>Name: </span>\r\n                            <Link to={`/products/${item._id}`}>\r\n                              {item.title.toUpperCase()}\r\n                            </Link>\r\n                          </Typography>\r\n                          <Typography component='p' variant='p'>\r\n                            <span>Size: </span>\r\n                            {item.size.toUpperCase()}\r\n                          </Typography>\r\n                          <button\r\n                            className='color'\r\n                            style={{ backgroundColor: item.color }}\r\n                          ></button>\r\n                        </div>\r\n                        <div>\r\n                          <Typography\r\n                            component='p'\r\n                            variant='p'\r\n                            sx={{ fontSize: 18 }}\r\n                          >\r\n                            <span>Qty: </span>\r\n                            {item.quantity}\r\n                          </Typography>\r\n                          <Typography\r\n                            component='p'\r\n                            variant='p'\r\n                            sx={{ fontSize: 18 }}\r\n                          >\r\n                            ${item.price * item.quantity}\r\n                          </Typography>\r\n                        </div>\r\n                      </div>\r\n                    </Card>\r\n                  );\r\n                })}\r\n              </Grid>\r\n              <Grid item xs={12} md={3}>\r\n                <Box\r\n                  sx={{\r\n                    borderRadius: '10%',\r\n                    border: '2px solid #C8C8C8',\r\n                    padding: '2rem',\r\n                  }}\r\n                >\r\n                  <Typography variant='h5' align='center' sx={{ mb: 4 }}>\r\n                    Order Summary\r\n                  </Typography>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '1rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Item(s) Subtotal</Typography>\r\n                    <Typography variant='p'>${cart.total}</Typography>\r\n                  </div>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '1rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Shipping & Handling</Typography>\r\n                    <Typography variant='p'>$50</Typography>\r\n                  </div>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '1rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Tax</Typography>\r\n                    <Typography variant='p'>$50</Typography>\r\n                  </div>\r\n                  <div\r\n                    className='order-summary-detail'\r\n                    style={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      width: '100%',\r\n                      marginBottom: '1rem',\r\n                    }}\r\n                  >\r\n                    <Typography variant='p'>Grand Total</Typography>\r\n                    <Typography variant='p'>${cart.total}</Typography>\r\n                  </div>\r\n                  <StripeCheckout\r\n                    name='ShopMart'\r\n                    image='https://cdn.pixabay.com/photo/2016/12/07/15/15/lotus-with-hands-1889661_960_720.png'\r\n                    billingAddress\r\n                    shippingAddress\r\n                    description={`Your total is $${cart.total}`}\r\n                    amount={cart.total * 100}\r\n                    token={onToken}\r\n                    stripeKey={KEY}\r\n                  >\r\n                    <Button\r\n                      variant='contained'\r\n                      color='secondary'\r\n                      sx={{ display: 'inline-block', width: '100%' }}\r\n                      disabled={!userInfo ? true : false}\r\n                    >\r\n                      Checkout Now\r\n                    </Button>\r\n                  </StripeCheckout>\r\n                  {!userInfo && (\r\n                    <Typography\r\n                      variant='p'\r\n                      component='p'\r\n                      sx={{ color: 'red', mt: 2 }}\r\n                      align='center'\r\n                    >\r\n                      Please{' '}\r\n                      <Link\r\n                        to={'/login?redirect=/cart'}\r\n                        style={{ textDecoration: 'underline', color: 'black' }}\r\n                      >\r\n                        Log In\r\n                      </Link>{' '}\r\n                      to checkout{' '}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js",["190","191","192"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\n\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Grid,\r\n} from '@mui/material';\r\nimport { getProductDetail } from '../../actions/productAction';\r\nimport Spinner from '../../components/Spinner';\r\nimport { CART_ADD_ITEM } from '../../actions/actionTypes/cartTypes';\r\nimport { addToCart } from '../../actions/cartActions';\r\n\r\nconst ProductDetailScreen = () => {\r\n  const [size, setSize] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n\r\n  const productDetail = useSelector((state) => state.productDetail);\r\n  let { loading, error, product } = productDetail;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductDetail(id));\r\n  }, [id]);\r\n\r\n  const displaySize = (size) => {\r\n    if (size === 'S') {\r\n      return 'Small';\r\n    } else if (size === 'M') {\r\n      return 'Medium';\r\n    } else if (size === 'L') {\r\n      return 'Large';\r\n    }\r\n  };\r\n\r\n  const handleQuantity = (type) => {\r\n    if (type === 'sub') {\r\n      quantity > 1 && setQuantity(quantity - 1);\r\n    } else if (type === 'add') {\r\n      setQuantity(quantity + 1);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    dispatch(\r\n      addToCart({\r\n        ...product,\r\n        quantity,\r\n        color,\r\n        totalPrice: quantity * product.price,\r\n        size,\r\n        productId: product._id + Date.now(),\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='product-detail-container'>\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          product &&\r\n          product._id && (\r\n            <Container>\r\n              <Typography\r\n                variant='h3'\r\n                sx={{ fontWeight: 'light', mt: 4, mb: 2, fontSize: 38 }}\r\n              >\r\n                {product.title}\r\n              </Typography>\r\n              <Grid container spacing={{ xs: 2, md: 3 }}>\r\n                <Grid item sx={{ width: '100%' }} xs={12} md={6}>\r\n                  <img src={product.image} alt={product.title} />\r\n                </Grid>\r\n                <Grid item sx={{ width: '100%' }} xs={12} md={6}>\r\n                  <Typography\r\n                    gutterbottom\r\n                    variant='h4'\r\n                    sx={{ fontWeight: 'light', my: 3 }}\r\n                  >\r\n                    $ {product.price}\r\n                  </Typography>\r\n                  <Typography gutterbottom variant='p' sx={{ lineHeight: 1.5 }}>\r\n                    {product.description}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', mt: 3, alignItems: 'center' }}>\r\n                    <Box sx={{ display: 'flex' }}>\r\n                      <Typography variant='p' sx={{ fontSize: 20, mr: 1 }}>\r\n                        Color\r\n                      </Typography>\r\n                      <div className='colors'>\r\n                        {product.color.map((c) => {\r\n                          return (\r\n                            <button\r\n                              className='color'\r\n                              style={{ backgroundColor: `${c}` }}\r\n                              key={c}\r\n                              onClick={() => setColor(c)}\r\n                            ></button>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </Box>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                      <FormControl fullWidth sx={{ ml: 4 }}>\r\n                        <InputLabel id='size'>Size</InputLabel>\r\n                        <Select\r\n                          labelId='size'\r\n                          id='size-select'\r\n                          value={size}\r\n                          label='Size'\r\n                          onChange={(e) => {\r\n                            setSize(e.target.value);\r\n                          }}\r\n                        >\r\n                          {product.size.map((size) => {\r\n                            return (\r\n                              <MenuItem value={size} key={size}>\r\n                                {displaySize(size)}\r\n                              </MenuItem>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Box>\r\n                  </Box>\r\n                  <div className='quantity-counter'>\r\n                    <button onClick={() => handleQuantity('sub')}>\r\n                      <i class='fas fa-minus'></i>\r\n                    </button>\r\n                    <span className='number'>{quantity}</span>\r\n                    <button onClick={() => handleQuantity('add')}>\r\n                      <i class='fas fa-plus'></i>\r\n                    </button>\r\n                  </div>\r\n                  <Button\r\n                    variant='contained'\r\n                    color='secondary'\r\n                    sx={{ mt: 4, display: 'inline-block', width: '100%' }}\r\n                    onClick={() => handleClick()}\r\n                  >\r\n                    Add to cart\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          )\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductDetailScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\OrderSuccess.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductsListScreen.js",["193","194","195"],"import React, {useState, useEffect} from 'react'\r\nimport {Box} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\nimport ProductListComponent from '../../components/products/ProductListComponent';\r\nimport ProductsComponent from '../../components/products/ProductsComponent';\r\n\r\nconst ProductsListScreen = ({ home=false }) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const location = useLocation();\r\n    const category = location.pathname.split('/')[3]\r\n\r\n    useEffect(() => {\r\n    }, [category])\r\n\r\n    return (\r\n        <Box sx={{mt: 3}}>\r\n            <ProductsComponent category={category} filters={filters} sort={sort}/>\r\n       </Box>\r\n    )\r\n}\r\n\r\nexport default ProductsListScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\assets\\theme.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js",["196","197","198"],"import React, {useEffect} from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport { Box, Typography, Container, Button} from '@mui/material'\r\nimport moment from 'moment'\r\nimport { getOrderDetails } from '../../actions/orderActions'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst OrderDetailScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { loading, error, order } = orderDetails \r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(params.id))\r\n    }, [])\r\n\r\n    const displayDate = (date) =>{\r\n        const newDate = new Date(date)\r\n        return moment(newDate).format('MM/DD/YYYY')\r\n    }\r\n\r\n    return (\r\n        <>\r\n       {loading ? <Spinner /> : (\r\n            order && (\r\n                <Container sx={{minHeight: '85vh', pt: 3}}>\r\n                    <Box sx={{display:'flex', justifyContent: 'space-between'}}>\r\n                        <Typography variant=\"h4\" sx={{mt: 2, mb: 1}}>Order Details:  (Order# {order._id})</Typography>\r\n                        <Link to=\"/\" style={{alignSelf:'center'}}><Button variant=\"contained\" color=\"secondary\">Continue Shopping</Button></Link>\r\n                    </Box>\r\n                    <Typography component=\"p\" variant=\"p\"></Typography>\r\n                        <Typography component=\"p\" variant=\"p\" sx={{mb:2}}>Order placed on: {displayDate(order.createdAt)}</Typography>\r\n                    <Box \r\n                    sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', mb: 3}}\r\n                    key={order._id}\r\n                    >\r\n                        <Box sx={{display: 'flex', justifyContent: 'space-between'}} className=\"order-details\">\r\n                            <div className=\"address\">\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Shipping Address</Typography>\r\n                                <Typography variant=\"p\" component=\"p\">{order.address.name.toUpperCase()}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.line1}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.line2}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.city}, {order.address.address.state}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.postal_code}</Typography>  \r\n                            </div>\r\n                            <div className=\"payment-method\">\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Payment Method</Typography>\r\n                                <Typography variant=\"p\" component=\"p\">{order.paymentMethod.card.network.toUpperCase()} **** {order.paymentMethod.card.last4}</Typography>   \r\n                            </div>\r\n                            <Box sx={{width: 275}}>\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Order Summary</Typography>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Item(s) Subtotal</Typography>\r\n                                    <Typography variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Shipping & Handling</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Tax</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Grand Total</Typography>\r\n                                    <Typography variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"order-products\" sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', my: 3}}>\r\n                    {order.products && order.products.map(product => {\r\n                        return  <Link to={`/products/${product._id}`} key={product._id}>\r\n                        <img \r\n                            src={product.image} \r\n                            alt=\"image\" \r\n                        />   \r\n                    </Link>   \r\n                    })}                   \r\n                    </Box>\r\n                </Container>\r\n            )\r\n       )}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default OrderDetailScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\LoginScreen.js",["199"],"import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { Typography, FormControl, Button, Box, TextField, Alert} from '@mui/material'\r\nimport { login } from '../../actions/userActions'\r\n\r\nconst LoginScreen = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo, error, success } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() =>{\r\n        // if(success){\r\n        //     dispatch({\r\n        //         type: SET_GLOBAL_ALERT,\r\n        //         payload: {\r\n        //             alert: 'Welcome back!',\r\n        //             alertType: 'success'\r\n        //         }\r\n        //     })\r\n        //     history.push(redirect)\r\n        // }\r\n        // if(userInfo){\r\n        //     return history.push(redirect)\r\n        // }\r\n        if(success){\r\n            navigate(redirect)\r\n        }\r\n        if(userInfo){\r\n            return navigate(redirect)\r\n        }\r\n    }, [success, navigate, dispatch, userInfo])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(username, password))\r\n    }\r\n\r\n    return (\r\n        <Box className=\"auth-form\">\r\n            <form className=\"form-container\" onSubmit={handleSubmit}>\r\n                <Typography textAlign=\"center\" variant=\"h4\">Sign In</Typography>\r\n                {error && <Alert severity=\"error\">{error}</Alert>}\r\n                <div>   \r\n                    <FormControl sx={{mt:3, width: '100%'}}>\r\n                        <TextField \r\n                            name=\"username\" \r\n                            type=\"text\"\r\n                            label=\"Username\" \r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)} \r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl sx={{mt:3, width: '100%'}}>\r\n                        <TextField \r\n                            name=\"password\" \r\n                            type=\"password\"\r\n                            label=\"Password\" \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)} \r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                </div>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    sx={{mt:5, width:\"100%\"}}\r\n                    type=\"submit\"\r\n                > \r\n                    Sign In\r\n                </Button>\r\n                <Typography component=\"p\" variant=\"p\" color=\"light\" sx={{mt:3}}>Don't have an account? <Link to=\"/register\">Sign Up Here</Link></Typography>\r\n            </form>        \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\DashboardScreen.js",["200","201","202"],"import { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid, Typography, Box, Paper, Alert } from '@mui/material';\r\nimport Chart from '../../components/admin/Chart';\r\nimport { getUserStats } from '../../actions/userActions';\r\nimport AdminSidenav from '../../components/admin/AdminSidenav';\r\nimport NewUsersComponent from '../../components/admin/NewUsersComponent';\r\nimport LatestOrdersComponent from '../../components/admin/LatestOrdersComponent';\r\nimport RevenueComponent from '../../components/admin/RevenueComponent';\r\n\r\nconst DashboardScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const MONTHS = useMemo(\r\n    () => [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec',\r\n    ],\r\n    []\r\n  );\r\n\r\n  console.log(userData);\r\n\r\n  useEffect(() => {\r\n    !userInfo && navigate('/login?redirect=/admin');\r\n    userInfo && !userInfo.isAdmin && navigate('/');\r\n\r\n    const getStats = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/stats`, config);\r\n\r\n        const list = data.sort((a, b) => {\r\n          return a._id - b._id;\r\n        });\r\n        list.map((item) =>\r\n          setUserData((prev) => [\r\n            ...prev,\r\n            { name: MONTHS[item._id - 1], 'Active User': item.total },\r\n          ])\r\n        );\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n    getStats();\r\n  }, [MONTHS]);\r\n\r\n  return (\r\n    <Box sx={{ minHeight: '85vh' }}>\r\n      <Typography\r\n        variant='h4'\r\n        sx={{ my: 3, paddingLeft: '1rem' }}\r\n        align='center'\r\n      >\r\n        ShopMart Admin\r\n      </Typography>\r\n      {message && <Alert severity='error'>{message}</Alert>}\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          md={2}\r\n          sx={{ marginLeft: '0.5rem', backgroundColor: '#F2F2F5' }}\r\n        >\r\n          <AdminSidenav />\r\n        </Grid>\r\n        <Grid item xs={6} md={9}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <RevenueComponent />\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n              <Typography variant='h5'>Revenue</Typography>\r\n              <Typography\r\n                component='p'\r\n                variant='p'\r\n                sx={{ fontSize: 30, my: 2 }}\r\n              >\r\n                $3218\r\n              </Typography>\r\n              <Typography component='p' variant='p' className='text-light'>\r\n                Compared to Last Month\r\n              </Typography>\r\n            </Paper>\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n              <Typography variant='h5'>Revenue</Typography>\r\n              <Typography\r\n                component='p'\r\n                variant='p'\r\n                sx={{ fontSize: 30, my: 2 }}\r\n              >\r\n                $3218\r\n              </Typography>\r\n              <Typography component='p' variant='p' className='text-light'>\r\n                Compared to Last Month\r\n              </Typography>\r\n            </Paper>\r\n          </Box>\r\n          <Chart\r\n            data={userData}\r\n            title='User Analytics'\r\n            grid\r\n            dataKey='Active User'\r\n          />\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n              <Typography\r\n                variant='p'\r\n                sx={{ fontWeight: 600, fontSize: 20, mb: 3 }}\r\n              >\r\n                Newly Joined Members\r\n              </Typography>\r\n              <NewUsersComponent />\r\n            </Paper>\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '60%' }}>\r\n              <Typography\r\n                variant='p'\r\n                sx={{ fontWeight: 600, fontSize: 20, mb: 3 }}\r\n              >\r\n                Latest Orders\r\n              </Typography>\r\n              <LatestOrdersComponent />\r\n            </Paper>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrdersScreen.js",["203","204"],"import React, {useEffect} from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useNavigate} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Typography, Box, Container, Alert, Button} from '@mui/material'\r\nimport { getUserOrders } from '../../actions/orderActions'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst OrdersScreen = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userOrders = useSelector(state => state.userOrders)\r\n    let { loading, error, orders } = userOrders\r\n\r\n    useEffect(() => { \r\n        if(!userInfo){\r\n            navigate('/login?redirect=/orders')\r\n        } else{\r\n            dispatch(getUserOrders())\r\n        }\r\n    }, [dispatch])\r\n\r\n    const displayDate = (date) =>{\r\n        const newDate = new Date(date)\r\n        return moment(newDate).format('MM/DD/YYYY')\r\n    }\r\n\r\n    return (\r\n        <Container sx={{minHeight:'85vh'}}>\r\n            <Box sx={{display:'flex', justifyContent: 'space-between'}}>\r\n                <Typography variant=\"h4\" sx={{my: 3}}>Your Orders</Typography>\r\n                <Link to=\"/\" style={{alignSelf:'center'}}><Button variant=\"contained\" color=\"secondary\">Continue Shopping</Button></Link>\r\n            </Box>\r\n            {loading && <Spinner />}\r\n            {error && <Alert severity=\"error\">{error}</Alert> }\r\n            { (orders && orders.length !== 0) ? (\r\n                orders.map(order => {\r\n                   return <Box \r\n                        sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', mb: 3, boxShadow: '0 3px 10px rgb(0 0 0 / 0.2)'}}\r\n                        key={order._id}\r\n                    >\r\n                        <Box sx={{display: 'flex', justifyContent: 'space-between'}} className=\"order-details\">\r\n                            <div className=\"info\">\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Order Placed</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">{displayDate(order.createdAt)}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Total</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Ship To</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">{order.address.name && order.address.name.toUpperCase()}</Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"order-number\">\r\n                                <Typography variant=\"p\">Order #: {order._id}</Typography>\r\n                                <Link to={`/orders/${order._id}`}>View Order Details</Link>\r\n                            </div>\r\n                        </Box>\r\n                    <Box className=\"order-products\" sx={{mt: 3}}>\r\n                    {order.products && order.products.map(product => {\r\n                        return  <Link to={`/products/${product._id}`} key={product._id}>\r\n                        <img \r\n                            src={product.image} \r\n                            alt=\"image\" \r\n                        />   \r\n                    </Link>   \r\n                    })}                   \r\n                    </Box>\r\n                </Box>\r\n                })\r\n            ) : <Alert severity=\"info\">No Orders Found...</Alert>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrdersScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\RegisterScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductsScreen.js",["205","206"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Typography, Alert, Button } from '@mui/material';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { deleteProduct, getProducts } from '../../actions/productAction';\r\nimport Spinner from '../../components/Spinner';\r\n\r\nconst ProductsScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const { error: deleteError, success: successDelete } = productDelete;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, [successDelete]);\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this product?')) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: '_id', headerName: 'ID', width: 250 },\r\n    {\r\n      field: 'product',\r\n      headerName: 'Product',\r\n      width: 220,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className='productListItem'>\r\n            <img className='productListImg' src={params.row.image} alt='' />\r\n            {params.row.title}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    { field: 'inStock', headerName: 'Stock', width: 200 },\r\n    { field: 'price', headerName: 'Price', width: 160 },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={`/admin/products/${params.row._id}`}>\r\n              <Button\r\n                variant='contained'\r\n                size='small'\r\n                sx={{ backgroundColor: 'green !important', mr: 3 }}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </Link>\r\n            <DeleteOutlineIcon\r\n              className='productListDelete'\r\n              onClick={() => handleDelete(params.row._id)}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{ minHeight: '85vh', mt: 4 }}>\r\n        <Typography variant='h4'>Products</Typography>\r\n        <Button variant='contained' color='secondary' sx={{ mt: 1, mb: 2 }}>\r\n          <Link to={'/admin/products/create'}>Create Product</Link>\r\n        </Button>\r\n        {loading && <Spinner />}\r\n        {error && <Alert severity='error'>{error}</Alert>}\r\n        {products && (\r\n          <div style={{ height: '800', width: '100%' }} className='productList'>\r\n            <DataGrid\r\n              rows={products}\r\n              disableSelectionOnClick\r\n              columns={columns}\r\n              getRowId={(row) => row._id}\r\n              pageSize={10}\r\n              checkboxSelection\r\n            />\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ShowcaseComponent.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductListComponent.js",["207"],"import React, {useState, useEffect}from 'react' \r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Grid, Card, CardMedia, CardContent, Typography, Alert} from '@mui/material'\r\nimport { getProducts } from '../../actions/productAction'\r\nimport Spinner from '../Spinner'\r\n\r\n\r\nconst ProductListComponent = ({category, filters, sort}) => {\r\n    const [ displayProducts, setDisplayProducts ] = useState([])\r\n    const [currentFilters, setCurrentFilters ] = useState({})\r\n    const [currentCategory, setCurrentCategory] = useState([])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    let { loading, error, products } = productList\r\n\r\n    useEffect(() => { \r\n        if(currentCategory !== category){\r\n            setCurrentCategory(category)\r\n            dispatch(getProducts(category))\r\n        }\r\n    }, [category, currentCategory, dispatch])\r\n \r\n    useEffect(() => {\r\n        if(products && !Object.values(filters).every(x => x === '') && filters !== currentFilters){\r\n            setCurrentFilters(filters)\r\n            setDisplayProducts(products.filter((product) => {\r\n                for (const [key, value] of Object.entries(filters)){\r\n                    if(value !== ''){\r\n                        return product[key].includes(value)\r\n                    }           \r\n                }\r\n            }))\r\n        } else if (products && Object.keys(currentFilters).length === 0){\r\n            setDisplayProducts(products)\r\n        }\r\n    }, [products, filters, currentFilters])\r\n\r\n    useEffect(() =>  {\r\n        if(sort === 'newest'){\r\n            setDisplayProducts((prev) => \r\n                [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n            )\r\n        } else if(sort === 'asc'){\r\n            setDisplayProducts((prev) => \r\n                [...prev].sort((a, b) => a.price - b.price)\r\n            )\r\n        }else{\r\n            setDisplayProducts((prev) =>\r\n                [...prev].sort((a, b) => b.price - a.price)\r\n            )\r\n        }\r\n    }, [sort])\r\n\r\n// filteredProducts ? show filtered products : show all products\r\n    return (\r\n        <>\r\n        {loading && <Spinner /> } \r\n        {displayProducts && displayProducts.length > 0 ? (\r\n            <Grid className=\"products-container\" container spacing={{ xs: 2, md: 3 }} sx={{minHeight: '70vh'}}>\r\n                { error && <Alert severity=\"error\">{error}</Alert>}\r\n                {displayProducts.map((product, index) => {\r\n                    return  <Grid className=\"product-item\" item sx={{ width:'100%' }} xs={12} sm={6} md={3} key={index}>\r\n                        <Link to={`/products/${product._id}`}>\r\n                        <Card sx={{ width:'100%'}}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"300\"\r\n                                image={product.image}\r\n                                alt={product.title}\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"p\" sx={{ color: 'text.primary', fontSize: 22, fontWeight: 'medium' }} className=\"product-title\">{product.title}</Typography>\r\n                                <Typography gutterBottom variant=\"p\" sx={{ display: 'block', color: 'text.primary', fontSize: 18, fontWeight: 'medium' }}>${product.price}</Typography>\r\n                            </CardContent>                       \r\n                        </Card>\r\n                        </Link>\r\n                    </Grid>\r\n                })}\r\n            </Grid>\r\n        ) : <Alert severity=\"warning\" sx={{display: 'block', minHeight: '70vh'}}>No Products Found...</Alert>\r\n            }        \r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListComponent\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductsComponent.js",["208"],"import React, {useState} from 'react'\r\nimport {Box, FormControl, InputLabel, Select, MenuItem, Container, Typography} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\n\r\nimport ProductListComponent from './ProductListComponent';\r\n\r\nconst ProductsComponent = ({ home = false, category}) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const handleFilters = (e) =>{\r\n        const value = e.target.value;\r\n        setFilters({\r\n            ...filters,\r\n            [e.target.name]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container sx={{mb: 5}}>\r\n            {category && <Typography variant=\"h3\">{category}</Typography>}\r\n            <Box className=\"product-filters\" sx={{ display: 'flex', marginTop: home ? '3rem' : '', justifyContent: 'space-between'}}>\r\n                <div className=\"left-section\">\r\n                    <div style={{display: 'flex', alignItems: 'center', marginRight: '1rem'}}>\r\n                        <Typography variant=\"h5\" sx={{fontSize: '1.5rem'}}>Filter Products:</Typography>\r\n                    </div>\r\n                    <Box sx={{ minWidth: 120, mr:3 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Size</InputLabel>\r\n                            <Select\r\n                                labelId=\"size\"\r\n                                label=\"Size\"\r\n                                name=\"size\"\r\n                                value={filters.size}\r\n                                onChange={(e)=>handleFilters(e)}\r\n                            >\r\n                                <MenuItem value={\"S\"}>Small</MenuItem>\r\n                                <MenuItem value={\"M\"}>Medium</MenuItem>\r\n                                <MenuItem value={\"L\"}>Large</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Color</InputLabel>\r\n                            <Select\r\n                                labelId=\"color\"\r\n                                label=\"color\"\r\n                                name=\"color\"\r\n                                value={filters.color}\r\n                                onChange={(e)=>handleFilters(e)}\r\n                            >\r\n                                <MenuItem value={\"black\"}>Black</MenuItem>\r\n                                <MenuItem value={\"yellow\"}>Yellow</MenuItem>\r\n                                <MenuItem value={\"orange\"}>Orange</MenuItem>\r\n                                <MenuItem value={\"blue\"}>Blue</MenuItem>\r\n                                <MenuItem value={\"khaki\"}>Khaki</MenuItem>\r\n                                <MenuItem value={\"beige\"}>Beige</MenuItem>\r\n                                <MenuItem value={\"pink\"}>Pink</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                </div>\r\n                <div className=\"right-section\">\r\n                    <div style={{display: 'flex', alignItems: 'center', marginRight: '1rem'}}>\r\n                        <Typography variant=\"h5\" sx={{fontSize: '1.5rem'}}>Sort Products:</Typography>\r\n                    </div>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Sort</InputLabel>\r\n                            <Select\r\n                                labelId=\"sort\"\r\n                                id=\"sort-select\"\r\n                                value={sort}\r\n                                label=\"sort\"\r\n                                name=\"sort\"\r\n                                onChange={(e) => {setSort(e.target.value)}}\r\n                            >\r\n                                <MenuItem value={\"newest\"}>Newest</MenuItem>\r\n                                <MenuItem value={\"desc\"}>Price: High To Low</MenuItem>\r\n                                <MenuItem value={\"asc\"}>Price: Low To High</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    </div>\r\n                </Box>\r\n                <ProductListComponent category={category} filters={filters} sort={sort}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductsComponent\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\productAction.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\RevenueComponent.js",["209","210","211"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Paper, Typography, Box } from '@mui/material';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\n\r\nconst indexOfMax = (arr) => {\r\n  if (arr.length === 0) {\r\n    return -1;\r\n  }\r\n\r\n  var max = arr[0];\r\n  var maxIndex = 0;\r\n\r\n  for (var i = 1; i < arr.length; i++) {\r\n    if (arr[i] > max) {\r\n      maxIndex = i;\r\n      max = arr[i];\r\n    }\r\n  }\r\n\r\n  return maxIndex;\r\n};\r\n\r\nconst RevenueComponent = () => {\r\n  const [income, setIncome] = useState([]);\r\n  const [perc, setPerc] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    const getIncome = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get('/api/orders/stats', config);\r\n\r\n        const list = data.sort((a, b) => {\r\n          return a._id - b._id;\r\n        });\r\n        setIncome(list);\r\n        setPerc((list[1].total * 100) / list[0].total - 100);\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n    getIncome();\r\n  }, []);\r\n\r\n  console.log(income);\r\n\r\n  return (\r\n    <>\r\n      {income && perc && (\r\n        <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n          <Typography variant='h5'>Revenue</Typography>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Typography component='p' variant='p' sx={{ fontSize: 30, my: 2 }}>\r\n              ${income[1].total}\r\n            </Typography>\r\n            <Typography\r\n              component='p'\r\n              variant='p'\r\n              sx={{ fontSize: 15, my: 2, alignSelf: 'center' }}\r\n            >\r\n              {Math.floor(perc)}%\r\n              {perc < 0 ? (\r\n                <ArrowDownwardIcon sx={{ alignSelf: 'center', color: 'red' }} />\r\n              ) : (\r\n                <ArrowUpwardIcon sx={{ alignSelf: 'center', color: 'green' }} />\r\n              )}\r\n            </Typography>\r\n          </Box>\r\n          <Typography component='p' variant='p' className='text-light'>\r\n            Compared to Last Month\r\n          </Typography>\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RevenueComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\AdminSidenav.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\Chart.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\LatestOrdersComponent.js",["212"],"import React from 'react';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nfunction createData(orderNumber, name, date, amount, status) {\r\n  return { orderNumber, name, date, amount, status };\r\n}\r\n\r\nconst rows = [\r\n  createData('#1234', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#1235', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#1236', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#1237', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n];\r\n\r\nconst LatestOrdersComponent = () => {\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align='center'>Order Number</TableCell>\r\n            <TableCell align='center'>Customer</TableCell>\r\n            <TableCell align='center'>Date</TableCell>\r\n            <TableCell align='center'>Amount</TableCell>\r\n            <TableCell align='center'>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              key={row.orderNumber}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component='th' scope='row' align='center'>\r\n                {row.orderNumber}\r\n              </TableCell>\r\n              <TableCell align='center'>{row.name}</TableCell>\r\n              <TableCell align='center'>{row.date}</TableCell>\r\n              <TableCell align='center'>{row.amount}</TableCell>\r\n              <TableCell align='center'>{row.status}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default LatestOrdersComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\NewUsersComponent.js",["213"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Box, Typography, Alert } from '@mui/material';\r\n\r\nconst NewUsersComponent = ({ users }) => {\r\n  const [newUsers, setNewUsers] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    !userInfo && navigate('/login?redirect=/admin');\r\n    userInfo && !userInfo.isAdmin && navigate('/');\r\n\r\n    const getNewUserInfo = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users?new=true`, config);\r\n\r\n        setNewUsers(data);\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n    getNewUserInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {message && <Alert severity='error'>{message}</Alert>}\r\n      {newUsers &&\r\n        newUsers.map((user) => {\r\n          return (\r\n            <Box\r\n              sx={{ display: 'flex', justifyContent: 'space-between', my: 3 }}\r\n              key={user._id}\r\n            >\r\n              <Typography component='p' variant='p'>\r\n                {user.username}\r\n              </Typography>\r\n              <Typography component='p' variant='p'>\r\n                {user.email}\r\n              </Typography>\r\n            </Box>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewUsersComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\productTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\userTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\CreateProductScreen.js",["214","215","216","217","218","219"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductScreen.js",["220","221","222","223","224","225","226","227","228","229","230","231","232"],"import { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid, Typography, Box, Paper, Alert, Avatar } from '@mui/material';\r\nimport Chart from '../../components/admin/Chart';\r\nimport { getUserStats } from '../../actions/userActions';\r\nimport AdminSidenav from '../../components/admin/AdminSidenav';\r\nimport { useParams } from 'react-router';\r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n} from 'recharts';\r\nimport { getProductDetail } from '../../actions/productAction';\r\nconst data = [\r\n  { month: 'Jan', sale: 500 },\r\n  { month: 'Feb', sale: 500 },\r\n];\r\n\r\nconst ProductScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [pStats, setPStats] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n  const { id: productId } = useParams();\r\n\r\n  const productDetail = useSelector((state) => state.productDetail);\r\n  let { loading, error, product } = productDetail;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductDetail(productId));\r\n  }, [productId]);\r\n\r\n  const MONTHS = useMemo(\r\n    () => [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec',\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    !userInfo && navigate('/login?redirect=/admin');\r\n    userInfo && !userInfo.isAdmin && navigate('/');\r\n\r\n    const getStats = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const res = await axios.get(\r\n          '/api/orders/stats?pid=' + productId,\r\n          config\r\n        );\r\n        const list = res.data.sort((a, b) => {\r\n          return a._id - b._id;\r\n        });\r\n        list.map((item) =>\r\n          setPStats((prev) => [\r\n            ...prev,\r\n            { name: MONTHS[item._id - 1], Sales: item.total },\r\n          ])\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getStats();\r\n  }, [MONTHS, productId]);\r\n\r\n  return (\r\n    <Box sx={{ minHeight: '85vh' }}>\r\n      <Typography\r\n        variant='h4'\r\n        sx={{ my: 3, paddingLeft: '1rem' }}\r\n        align='center'\r\n      >\r\n        {product && product.title}\r\n      </Typography>\r\n      {message && <Alert severity='error'>{message}</Alert>}\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          md={2}\r\n          sx={{ marginLeft: '0.5rem', backgroundColor: '#F2F2F5' }}\r\n        >\r\n          <AdminSidenav />\r\n        </Grid>\r\n        {product && (\r\n          <Grid item xs={6} md={9}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Paper elevation={3} sx={{ padding: '2rem', width: '48%' }}>\r\n                <Chart\r\n                  data={pStats}\r\n                  dataKey='Sales'\r\n                  title='Sales Performance'\r\n                />\r\n              </Paper>\r\n              <Paper elevation={3} sx={{ padding: '2rem', width: '48%' }}>\r\n                <Box sx={{ display: 'flex', mb: 3 }}>\r\n                  <Avatar alt={product.title} src={product.image} />\r\n                  <Typography\r\n                    component='p'\r\n                    sx={{ ml: 2, alignSelf: 'center', fontWeight: 600 }}\r\n                  >\r\n                    {product.title}\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    width: '70%',\r\n                  }}\r\n                >\r\n                  <Typography component='p'>Id:</Typography>\r\n                  <Typography component='p'>{product._id}</Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    width: '70%',\r\n                  }}\r\n                >\r\n                  <Typography component='p'>Sales:</Typography>\r\n                  <Typography component='p'>{product.title}</Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    width: '70%',\r\n                  }}\r\n                >\r\n                  <Typography component='p'>Active:</Typography>\r\n                  <Typography component='p'>true</Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    width: '70%',\r\n                  }}\r\n                >\r\n                  <Typography component='p'>In stock:</Typography>\r\n                  <Typography component='p'>\r\n                    {product.inStock ? 'true' : 'false'}\r\n                  </Typography>\r\n                </Box>\r\n              </Paper>\r\n            </Box>\r\n            <Box sx={{ mt: 3 }}>\r\n              <Paper elevation={3} sx={{ padding: '2rem', width: '100%' }}>\r\n                <Typography\r\n                  variant='p'\r\n                  sx={{ fontWeight: 600, fontSize: 20, mb: 3 }}\r\n                >\r\n                  Newly Joined Members\r\n                </Typography>\r\n              </Paper>\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n",{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","severity":1,"message":"238","line":8,"column":8,"nodeType":"239","messageId":"240","endLine":8,"endColumn":11},{"ruleId":"237","severity":1,"message":"241","line":19,"column":8,"nodeType":"239","messageId":"240","endLine":19,"endColumn":15},{"ruleId":"237","severity":1,"message":"242","line":34,"column":11,"nodeType":"239","messageId":"240","endLine":34,"endColumn":18},{"ruleId":"243","severity":1,"message":"244","line":41,"column":6,"nodeType":"245","endLine":41,"endColumn":8,"suggestions":"246"},{"ruleId":"243","severity":1,"message":"247","line":52,"column":6,"nodeType":"245","endLine":52,"endColumn":26,"suggestions":"248"},{"ruleId":"243","severity":1,"message":"249","line":87,"column":6,"nodeType":"245","endLine":87,"endColumn":25,"suggestions":"250"},{"ruleId":"237","severity":1,"message":"251","line":18,"column":10,"nodeType":"239","messageId":"240","endLine":18,"endColumn":23},{"ruleId":"237","severity":1,"message":"252","line":30,"column":18,"nodeType":"239","messageId":"240","endLine":30,"endColumn":23},{"ruleId":"243","severity":1,"message":"244","line":34,"column":6,"nodeType":"245","endLine":34,"endColumn":10,"suggestions":"253"},{"ruleId":"237","severity":1,"message":"254","line":5,"column":8,"nodeType":"239","messageId":"240","endLine":5,"endColumn":28},{"ruleId":"237","severity":1,"message":"255","line":9,"column":21,"nodeType":"239","messageId":"240","endLine":9,"endColumn":31},{"ruleId":"237","severity":1,"message":"256","line":10,"column":18,"nodeType":"239","messageId":"240","endLine":10,"endColumn":25},{"ruleId":"237","severity":1,"message":"252","line":14,"column":22,"nodeType":"239","messageId":"240","endLine":14,"endColumn":27},{"ruleId":"243","severity":1,"message":"257","line":18,"column":8,"nodeType":"245","endLine":18,"endColumn":10,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":77,"column":25,"nodeType":"261","endLine":80,"endColumn":27},{"ruleId":"243","severity":1,"message":"262","line":40,"column":8,"nodeType":"245","endLine":40,"endColumn":47,"suggestions":"263"},{"ruleId":"237","severity":1,"message":"264","line":4,"column":10,"nodeType":"239","messageId":"240","endLine":4,"endColumn":21},{"ruleId":"237","severity":1,"message":"265","line":7,"column":10,"nodeType":"239","messageId":"240","endLine":7,"endColumn":22},{"ruleId":"243","severity":1,"message":"266","line":71,"column":6,"nodeType":"245","endLine":71,"endColumn":14,"suggestions":"267"},{"ruleId":"243","severity":1,"message":"266","line":26,"column":8,"nodeType":"245","endLine":26,"endColumn":18,"suggestions":"268"},{"ruleId":"259","severity":1,"message":"260","line":70,"column":25,"nodeType":"261","endLine":73,"endColumn":27},{"ruleId":"237","severity":1,"message":"269","line":17,"column":18,"nodeType":"239","messageId":"240","endLine":17,"endColumn":29},{"ruleId":"243","severity":1,"message":"244","line":21,"column":6,"nodeType":"245","endLine":21,"endColumn":21,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":29,"column":58,"nodeType":"273","messageId":"274","endLine":29,"endColumn":60},{"ruleId":"237","severity":1,"message":"275","line":3,"column":10,"nodeType":"239","messageId":"240","endLine":3,"endColumn":21},{"ruleId":"237","severity":1,"message":"276","line":8,"column":7,"nodeType":"239","messageId":"240","endLine":8,"endColumn":17},{"ruleId":"237","severity":1,"message":"277","line":29,"column":10,"nodeType":"239","messageId":"240","endLine":29,"endColumn":17},{"ruleId":"243","severity":1,"message":"278","line":56,"column":6,"nodeType":"245","endLine":56,"endColumn":8,"suggestions":"279"},{"ruleId":"237","severity":1,"message":"280","line":9,"column":8,"nodeType":"239","messageId":"240","endLine":9,"endColumn":13},{"ruleId":"243","severity":1,"message":"266","line":37,"column":6,"nodeType":"245","endLine":37,"endColumn":8,"suggestions":"281"},{"ruleId":"237","severity":1,"message":"282","line":1,"column":27,"nodeType":"239","messageId":"240","endLine":1,"endColumn":36},{"ruleId":"237","severity":1,"message":"283","line":12,"column":19,"nodeType":"239","messageId":"240","endLine":12,"endColumn":29},{"ruleId":"237","severity":1,"message":"284","line":14,"column":10,"nodeType":"239","messageId":"240","endLine":14,"endColumn":21},{"ruleId":"237","severity":1,"message":"285","line":14,"column":23,"nodeType":"239","messageId":"240","endLine":14,"endColumn":37},{"ruleId":"237","severity":1,"message":"286","line":15,"column":10,"nodeType":"239","messageId":"240","endLine":15,"endColumn":15},{"ruleId":"237","severity":1,"message":"287","line":15,"column":17,"nodeType":"239","messageId":"240","endLine":15,"endColumn":25},{"ruleId":"237","severity":1,"message":"265","line":7,"column":10,"nodeType":"239","messageId":"240","endLine":7,"endColumn":22},{"ruleId":"237","severity":1,"message":"288","line":12,"column":3,"nodeType":"239","messageId":"240","endLine":12,"endColumn":12},{"ruleId":"237","severity":1,"message":"289","line":13,"column":3,"nodeType":"239","messageId":"240","endLine":13,"endColumn":7},{"ruleId":"237","severity":1,"message":"290","line":14,"column":3,"nodeType":"239","messageId":"240","endLine":14,"endColumn":16},{"ruleId":"237","severity":1,"message":"291","line":15,"column":3,"nodeType":"239","messageId":"240","endLine":15,"endColumn":8},{"ruleId":"237","severity":1,"message":"292","line":16,"column":3,"nodeType":"239","messageId":"240","endLine":16,"endColumn":8},{"ruleId":"237","severity":1,"message":"293","line":17,"column":3,"nodeType":"239","messageId":"240","endLine":17,"endColumn":10},{"ruleId":"237","severity":1,"message":"294","line":20,"column":7,"nodeType":"239","messageId":"240","endLine":20,"endColumn":11},{"ruleId":"237","severity":1,"message":"283","line":26,"column":19,"nodeType":"239","messageId":"240","endLine":26,"endColumn":29},{"ruleId":"237","severity":1,"message":"242","line":38,"column":9,"nodeType":"239","messageId":"240","endLine":38,"endColumn":16},{"ruleId":"237","severity":1,"message":"252","line":38,"column":18,"nodeType":"239","messageId":"240","endLine":38,"endColumn":23},{"ruleId":"243","severity":1,"message":"244","line":42,"column":6,"nodeType":"245","endLine":42,"endColumn":17,"suggestions":"295"},{"ruleId":"243","severity":1,"message":"266","line":93,"column":6,"nodeType":"245","endLine":93,"endColumn":25,"suggestions":"296"},"no-native-reassign",["297"],"no-negated-in-lhs",["298"],"no-unused-vars","'Pay' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["299"],"React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'order'. Either include them or remove the dependency array.",["300"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo.token'. Either include them or remove the dependency array.",["301"],"'CART_ADD_ITEM' is defined but never used.","'error' is assigned a value but never used.",["302"],"'ProductListComponent' is defined but never used.","'setFilters' is assigned a value but never used.","'setSort' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.",["303"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["304"],"'useDispatch' is defined but never used.","'getUserStats' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'userInfo'. Either include them or remove the dependency array.",["305"],["306"],"'deleteError' is assigned a value but never used.",["307"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useLocation' is defined but never used.","'indexOfMax' is assigned a value but never used.","'message' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo.token'. Either include it or remove the dependency array.",["308"],"'Paper' is defined but never used.",["309"],"'useEffect' is defined but never used.","'setMessage' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'CartesianGrid' is defined but never used.","'XAxis' is defined but never used.","'YAxis' is defined but never used.","'Tooltip' is defined but never used.","'data' is assigned a value but never used.",["310"],["311"],"no-global-assign","no-unsafe-negation",{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},"Update the dependencies array to be: [dispatch]",{"range":"338","text":"339"},"Update the dependencies array to be: [dispatch, navigate, order, orderCreateSuccess]",{"range":"340","text":"341"},"Update the dependencies array to be: [stripeToken, cart, userInfo.token, dispatch]",{"range":"342","text":"343"},"Update the dependencies array to be: [dispatch, id]",{"range":"344","text":"345"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"346","text":"347"},"Update the dependencies array to be: [success, navigate, dispatch, userInfo, redirect]",{"range":"348","text":"349"},"Update the dependencies array to be: [MONTHS, navigate, userInfo]",{"range":"350","text":"351"},"Update the dependencies array to be: [dispatch, navigate, userInfo]",{"range":"352","text":"353"},"Update the dependencies array to be: [dispatch, successDelete]",{"range":"354","text":"355"},"Update the dependencies array to be: [userInfo.token]",{"range":"356","text":"357"},"Update the dependencies array to be: [navigate, userInfo]",{"range":"358","text":"359"},"Update the dependencies array to be: [dispatch, productId]",{"range":"360","text":"361"},"Update the dependencies array to be: [MONTHS, navigate, productId, userInfo]",{"range":"362","text":"363"},[1305,1307],"[dispatch]",[1524,1544],"[dispatch, navigate, order, orderCreateSuccess]",[2557,2576],"[stripeToken, cart, userInfo.token, dispatch]",[970,974],"[dispatch, id]",[658,660],"[dispatch, params.id]",[1319,1358],"[success, navigate, dispatch, userInfo, redirect]",[1996,2004],"[MONTHS, navigate, userInfo]",[852,862],"[dispatch, navigate, userInfo]",[844,859],"[dispatch, successDelete]",[1459,1461],"[userInfo.token]",[1083,1085],"[navigate, userInfo]",[1275,1286],"[dispatch, productId]",[2357,2376],"[MONTHS, navigate, productId, userInfo]"]