[{"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\index.js":"1","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\App.js":"2","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\store.js":"3","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Pay.js":"4","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Footer.js":"5","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Navbar.js":"7","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\CartScreen.js":"8","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js":"9","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\OrderSuccess.js":"10","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductsListScreen.js":"11","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\assets\\theme.js":"12","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js":"13","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\LoginScreen.js":"14","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\DashboardScreen.js":"15","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrdersScreen.js":"16","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\RegisterScreen.js":"17","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductsScreen.js":"18","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\orderReducers.js":"19","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\productReducers.js":"20","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\cartReducers.js":"21","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\userReducers.js":"22","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ShowcaseComponent.js":"23","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Spinner.js":"24","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\cartActions.js":"25","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductListComponent.js":"26","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductsComponent.js":"27","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\productAction.js":"28","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\orderActions.js":"29","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\userActions.js":"30","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js":"31","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js":"32","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\RevenueComponent.js":"33","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\AdminSidenav.js":"34","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\Chart.js":"35","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\LatestOrdersComponent.js":"36","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\NewUsersComponent.js":"37","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\productTypes.js":"38","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\userTypes.js":"39","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\CreateProductScreen.js":"40"},{"size":151,"mtime":1636489073244,"results":"41","hashOfConfig":"42"},{"size":2539,"mtime":1639011745525,"results":"43","hashOfConfig":"42"},{"size":1866,"mtime":1639012042454,"results":"44","hashOfConfig":"42"},{"size":2623,"mtime":1638499570045,"results":"45","hashOfConfig":"42"},{"size":504,"mtime":1637775982799,"results":"46","hashOfConfig":"42"},{"size":355,"mtime":1637778632910,"results":"47","hashOfConfig":"42"},{"size":3947,"mtime":1639010287333,"results":"48","hashOfConfig":"42"},{"size":9365,"mtime":1638912196393,"results":"49","hashOfConfig":"42"},{"size":5422,"mtime":1638641038026,"results":"50","hashOfConfig":"42"},{"size":1302,"mtime":1638564410050,"results":"51","hashOfConfig":"42"},{"size":791,"mtime":1638042042416,"results":"52","hashOfConfig":"42"},{"size":527,"mtime":1638827499680,"results":"53","hashOfConfig":"42"},{"size":5562,"mtime":1638719332201,"results":"54","hashOfConfig":"42"},{"size":3209,"mtime":1638810961811,"results":"55","hashOfConfig":"42"},{"size":4594,"mtime":1638916786502,"results":"56","hashOfConfig":"42"},{"size":3887,"mtime":1638815448477,"results":"57","hashOfConfig":"42"},{"size":4422,"mtime":1638816721611,"results":"58","hashOfConfig":"42"},{"size":3046,"mtime":1639011231488,"results":"59","hashOfConfig":"42"},{"size":2013,"mtime":1638656411604,"results":"60","hashOfConfig":"42"},{"size":2044,"mtime":1639012020526,"results":"61","hashOfConfig":"42"},{"size":1150,"mtime":1638641755611,"results":"62","hashOfConfig":"42"},{"size":1528,"mtime":1638832590507,"results":"63","hashOfConfig":"42"},{"size":755,"mtime":1637109384991,"results":"64","hashOfConfig":"42"},{"size":297,"mtime":1637781129761,"results":"65","hashOfConfig":"42"},{"size":747,"mtime":1638641732524,"results":"66","hashOfConfig":"42"},{"size":3875,"mtime":1638811068007,"results":"67","hashOfConfig":"42"},{"size":4529,"mtime":1638731962004,"results":"68","hashOfConfig":"42"},{"size":2795,"mtime":1639011943806,"results":"69","hashOfConfig":"42"},{"size":2998,"mtime":1638912196078,"results":"70","hashOfConfig":"42"},{"size":2857,"mtime":1638832367959,"results":"71","hashOfConfig":"42"},{"size":142,"mtime":1638639387710,"results":"72","hashOfConfig":"42"},{"size":604,"mtime":1638656388978,"results":"73","hashOfConfig":"42"},{"size":2210,"mtime":1638913811004,"results":"74","hashOfConfig":"42"},{"size":4140,"mtime":1638916932106,"results":"75","hashOfConfig":"42"},{"size":702,"mtime":1638833498749,"results":"76","hashOfConfig":"42"},{"size":2031,"mtime":1638837303195,"results":"77","hashOfConfig":"42"},{"size":1747,"mtime":1638838300394,"results":"78","hashOfConfig":"42"},{"size":811,"mtime":1639011991838,"results":"79","hashOfConfig":"42"},{"size":560,"mtime":1638832164896,"results":"80","hashOfConfig":"42"},{"size":1748,"mtime":1639011766360,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"sa1lf3",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\index.js",[],["176","177"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\App.js",["178"],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\store.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Pay.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Navbar.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\CartScreen.js",["179","180","181","182","183"],"import React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Typography, Container, Box, Button, Grid, Card, CardMedia, Alert} from '@mui/material'\r\nimport StripeCheckout from 'react-stripe-checkout'\r\nimport { getCartInfo, removeFromCart } from '../actions/cartActions'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Spinner from '../components/Spinner'\r\nimport { ORDER_CREATE_RESET } from '../actions/actionTypes/orderTypes'\r\n\r\nconst KEY = process.env.REACT_APP_STRIPE\r\n\r\n\r\nconst CartScreen = () => {\r\n    const [isPaymentProcessing, setIsPaymentProcessing ] = useState(false)\r\n    const [stripeToken, setStripeToken] = useState(null)\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {loading, success: orderCreateSuccess, error, order} = orderCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        dispatch(getCartInfo())\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: ORDER_CREATE_RESET })\r\n        if(orderCreateSuccess){\r\n            navigate('/success', {\r\n                state: {\r\n                    paymentInfo: order\r\n                }\r\n            })\r\n        }\r\n    }, [orderCreateSuccess])\r\n    \r\n      const onToken = (token) => {\r\n        setStripeToken(token)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const makeRequest = async (cartTotal) => {\r\n            try {\r\n                const res = await axios.post(`/api/checkout/payment`, \r\n                    {tokenId: stripeToken.id, amount: cartTotal}, \r\n                    {headers: {\r\n                            Authorization: `Bearer ${userInfo.token}`\r\n                        }\r\n                    }\r\n                );\r\n                setIsPaymentProcessing(true)\r\n                const successPaymentData = res.data\r\n                console.log(successPaymentData)\r\n                dispatch(createOrder({\r\n                    stripePaymentId: successPaymentData.id,\r\n                    products: cart.cartItems,\r\n                    amount: successPaymentData.amount,\r\n                    address: successPaymentData.billing_details,\r\n                    paymentMethod: successPaymentData.payment_method_details\r\n                }))\r\n                \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        stripeToken && makeRequest(cart.total)\r\n    }, [stripeToken, cart])\r\n\r\n    const handleItemRemoval = (item) => {\r\n        if(window.confirm('Are you sure you want to delete this item?')){\r\n            dispatch(removeFromCart(item))\r\n        }\r\n    }\r\n      \r\n    return (\r\n        <Container sx={{mt: 3, minHeight: '85vh'}}>\r\n            {isPaymentProcessing ? <span>Processing. Please wait...</span> : (\r\n                cart && (\r\n                    <>\r\n                    <Typography variant=\"h4\" align=\"center\" sx={{my: 3}}>Shopping Cart</Typography>\r\n                    {error && <Alert severity=\"error\">{error}</Alert>}\r\n                    <Box sx={{display: 'flex', justifyContent: 'space-between', mb: 4}}>\r\n                        <Link to=\"/\"><Button variant=\"outlined\">Continue Shopping</Button></Link>\r\n                        <Typography variant=\"p\" sx={{textDecoration: 'underline', alignSelf: 'center'}}>Cart Items ({cart.quantity})</Typography>\r\n                        <StripeCheckout\r\n                        name=\"ShopMart\"\r\n                        image=\"https://cdn.pixabay.com/photo/2016/12/07/15/15/lotus-with-hands-1889661_960_720.png\"\r\n                        billingAddress\r\n                        shippingAddress\r\n                        description = {`Your total is $${cart.total}`}\r\n                        amount={cart.total*100}\r\n                        token={onToken}\r\n                        stripeKey={KEY}\r\n                        >\r\n                            <Button variant=\"outlined\" disabled={!userInfo ? true: false}>Checkout</Button>\r\n                        </StripeCheckout>                   \r\n                    </Box>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} md={9}>\r\n                        {cart.cartItems.map((item, index) => {\r\n                            return  <Card className=\"cart-item\" key={`${item._id}_${index}`}>\r\n                                <Button className=\"delete-cart-item\" onClick={() => handleItemRemoval(item)}><CloseIcon sx={{mr: 3}} /></Button>\r\n                                <Link to={`/products/${item._id}`}>\r\n                                    <CardMedia\r\n                                    component=\"img\"\r\n                                    sx={{ width: 151 }}\r\n                                    image={item.image}\r\n                                    alt={item.title}\r\n                                    />\r\n                                </Link>\r\n                                <div className=\"info\">\r\n                                    <div>\r\n                                        <Typography component=\"p\" variant=\"p\"><span>Name: </span><Link to={`/products/${item._id}`}>{item.title.toUpperCase()}</Link></Typography>\r\n                                        <Typography component=\"p\" variant=\"p\"><span>Size: </span>{item.size.toUpperCase()}</Typography>\r\n                                        <button className=\"color\" style={{backgroundColor: item.color}}></button>\r\n                                    </div>\r\n                                    <div>\r\n                                    <Typography component=\"p\" variant=\"p\" sx={{fontSize: 18}}><span>Qty: </span>{item.quantity}</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\" sx={{fontSize: 18}}>${item.price * item.quantity}</Typography>\r\n                                    </div>\r\n                                </div>\r\n                            </Card>\r\n                        })}\r\n                        </Grid>\r\n                        <Grid item xs={12} md={3}>\r\n                            <Box sx={{borderRadius: '10%', border: '2px solid #C8C8C8', padding: '2rem'}}>\r\n                                <Typography variant=\"h5\" align=\"center\" sx={{mb: 4}}>Order Summary</Typography>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '1rem'}}>\r\n                                    <Typography variant=\"p\">Item(s) Subtotal</Typography>\r\n                                    <Typography variant=\"p\">${cart.total}</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '1rem'}}>\r\n                                    <Typography variant=\"p\">Shipping & Handling</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '1rem'}}>\r\n                                    <Typography variant=\"p\">Tax</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '1rem'}}>\r\n                                    <Typography variant=\"p\">Grand Total</Typography>\r\n                                    <Typography variant=\"p\">${cart.total}</Typography>\r\n                                </div>\r\n                                <StripeCheckout\r\n                                name=\"ShopMart\"\r\n                                image=\"https://cdn.pixabay.com/photo/2016/12/07/15/15/lotus-with-hands-1889661_960_720.png\"\r\n                                billingAddress\r\n                                shippingAddress\r\n                                description = {`Your total is $${cart.total}`}\r\n                                amount={cart.total*100}\r\n                                token={onToken}\r\n                                stripeKey={KEY}\r\n                            >\r\n                                <Button variant=\"contained\" color=\"secondary\" sx={{display: 'inline-block', width: '100%'}} disabled={!userInfo ? true: false}>Checkout Now</Button>\r\n                            </StripeCheckout>\r\n                            {!userInfo && <Typography variant=\"p\" component=\"p\" sx={{color:'red', mt:2}} align=\"center\">Please <Link to={'/login?redirect=/cart'} style={{textDecoration:'underline', color:'black'}}>Log In</Link> to checkout </Typography>}\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </>\r\n                )\r\n            )}           \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductDetailScreen.js",["184","185","186"],"import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router';\r\n\r\nimport {Box, FormControl, InputLabel, Select, MenuItem, Container, Typography, Button, Grid} from '@mui/material'\r\nimport { getProductDetail } from '../../actions/productAction'\r\nimport Spinner from '../../components/Spinner'\r\nimport { CART_ADD_ITEM } from '../../actions/actionTypes/cartTypes';\r\nimport { addToCart } from '../../actions/cartActions';\r\n\r\nconst ProductDetailScreen = () => {\r\n    const [size, setSize ] = useState('')\r\n    const [color, setColor ] = useState('')\r\n    const [quantity, setQuantity] = useState(1)\r\n\r\n    const dispatch = useDispatch()\r\n    const { id } = useParams();\r\n\r\n    const productDetail = useSelector(state => state.productDetail)\r\n    let { loading, error, product } = productDetail\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetail(id))\r\n    }, [id])\r\n\r\n    const displaySize = (size) => {\r\n        if(size === 'S'){\r\n            return 'Small'\r\n        } else if (size === 'M'){\r\n            return 'Medium'\r\n        } else if (size === 'L'){\r\n            return 'Large'\r\n        }\r\n    }\r\n\r\n    const handleQuantity = (type) => {\r\n        if(type === 'sub'){\r\n            quantity > 1 && setQuantity(quantity - 1)\r\n        } else if (type === 'add'){\r\n            setQuantity(quantity + 1)\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        dispatch(addToCart({\r\n            ...product, \r\n                quantity,\r\n                color,\r\n                size,\r\n                productId: product._id + Date.now()\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"product-detail-container\">\r\n            {loading ? \r\n                 <Spinner /> : (\r\n                    product && product._id && (\r\n                        <Container>\r\n                            <Typography variant=\"h3\" sx={{fontWeight: \"light\", mt: 4, mb:2, fontSize: 38}}>{product.title}</Typography>\r\n                            <Grid container spacing={{ xs: 2, md: 3}}>\r\n                                <Grid item sx={{ width:'100%'}} xs={12} md={6}>\r\n                                    <img src={product.image} alt={product.title} /> \r\n                                </Grid>\r\n                                <Grid item sx={{ width:'100%' }} xs={12} md={6}>\r\n                                    <Typography gutterbottom variant=\"h4\" sx={{fontWeight: \"light\", my: 3}}>$ {product.price}</Typography>\r\n                                    <Typography gutterbottom variant=\"p\" sx={{lineHeight: 1.5}}>{product.description}</Typography>\r\n                                    <Box sx={{display: 'flex', mt: 3, alignItems: 'center'}}>\r\n                                        <Box sx={{display: 'flex'}}>\r\n                                            <Typography variant=\"p\" sx={{fontSize: 20, mr: 1}}>Color</Typography>\r\n                                            <div className=\"colors\">\r\n                                                {product.color.map( c => {\r\n                                                    return  <button className=\"color\" style={{backgroundColor: `${c}`}} key={c} onClick={()=>setColor(c)}></button>\r\n                                                })}\r\n                                            </div>\r\n                                        </Box> \r\n                                        <Box sx={{ minWidth: 120 }}>\r\n                                            <FormControl fullWidth sx={{ml: 4}}>\r\n                                            <InputLabel id=\"size\">Size</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"size\"\r\n                                                id=\"size-select\"\r\n                                                value={size}\r\n                                                label=\"Size\"\r\n                                                onChange={(e) => {setSize(e.target.value)}}\r\n                                            >\r\n                                                {product.size.map( size => {\r\n                                                    return  <MenuItem value={size} key={size}>{displaySize(size)}</MenuItem>\r\n                                                })}\r\n                                            </Select>\r\n                                            </FormControl>\r\n                                        </Box>\r\n                                    </Box>   \r\n                                    <div className=\"quantity-counter\">\r\n                                        <button onClick={()=>handleQuantity('sub')}><i class=\"fas fa-minus\"></i></button>\r\n                                        <span className=\"number\">{quantity}</span>\r\n                                        <button onClick={()=>handleQuantity('add')}><i class=\"fas fa-plus\"></i></button>\r\n                                    </div>\r\n                                    <Button variant=\"contained\" color=\"secondary\" sx={{mt: 4, display: 'inline-block', width: '100%'}} onClick={()=>handleClick()}>Add to cart</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                    )\r\n                 )}\r\n          \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductDetailScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\OrderSuccess.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\products\\ProductsListScreen.js",["187","188","189"],"import React, {useState, useEffect} from 'react'\r\nimport {Box} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\nimport ProductListComponent from '../../components/products/ProductListComponent';\r\nimport ProductsComponent from '../../components/products/ProductsComponent';\r\n\r\nconst ProductsListScreen = ({ home=false }) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const location = useLocation();\r\n    const category = location.pathname.split('/')[3]\r\n\r\n    useEffect(() => {\r\n    }, [category])\r\n\r\n    return (\r\n        <Box sx={{mt: 3}}>\r\n            <ProductsComponent category={category} filters={filters} sort={sort}/>\r\n       </Box>\r\n    )\r\n}\r\n\r\nexport default ProductsListScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\assets\\theme.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrderDetailScreen.js",["190","191","192"],"import React, {useEffect} from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport { Box, Typography, Container, Button} from '@mui/material'\r\nimport moment from 'moment'\r\nimport { getOrderDetails } from '../../actions/orderActions'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst OrderDetailScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const params = useParams()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { loading, error, order } = orderDetails \r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(params.id))\r\n    }, [])\r\n\r\n    const displayDate = (date) =>{\r\n        const newDate = new Date(date)\r\n        return moment(newDate).format('MM/DD/YYYY')\r\n    }\r\n\r\n    return (\r\n        <>\r\n       {loading ? <Spinner /> : (\r\n            order && (\r\n                <Container sx={{minHeight: '85vh', pt: 3}}>\r\n                    <Box sx={{display:'flex', justifyContent: 'space-between'}}>\r\n                        <Typography variant=\"h4\" sx={{mt: 2, mb: 1}}>Order Details:  (Order# {order._id})</Typography>\r\n                        <Link to=\"/\" style={{alignSelf:'center'}}><Button variant=\"contained\" color=\"secondary\">Continue Shopping</Button></Link>\r\n                    </Box>\r\n                    <Typography component=\"p\" variant=\"p\"></Typography>\r\n                        <Typography component=\"p\" variant=\"p\" sx={{mb:2}}>Order placed on: {displayDate(order.createdAt)}</Typography>\r\n                    <Box \r\n                    sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', mb: 3}}\r\n                    key={order._id}\r\n                    >\r\n                        <Box sx={{display: 'flex', justifyContent: 'space-between'}} className=\"order-details\">\r\n                            <div className=\"address\">\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Shipping Address</Typography>\r\n                                <Typography variant=\"p\" component=\"p\">{order.address.name.toUpperCase()}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.line1}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.line2}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.city}, {order.address.address.state}</Typography>   \r\n                                <Typography variant=\"p\" component=\"p\">{order.address.address.postal_code}</Typography>  \r\n                            </div>\r\n                            <div className=\"payment-method\">\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Payment Method</Typography>\r\n                                <Typography variant=\"p\" component=\"p\">{order.paymentMethod.card.network.toUpperCase()} **** {order.paymentMethod.card.last4}</Typography>   \r\n                            </div>\r\n                            <Box sx={{width: 275}}>\r\n                                <Typography variant=\"p\" component=\"p\" sx={{fontWeight: 600, mb: 2}}>Order Summary</Typography>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Item(s) Subtotal</Typography>\r\n                                    <Typography variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Shipping & Handling</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Tax</Typography>\r\n                                    <Typography variant=\"p\">$50</Typography>\r\n                                </div>\r\n                                <div className=\"order-summary-detail\" style={{ display: 'flex', justifyContent: 'space-between', width: '100%', marginBottom: '0.6rem'}}>\r\n                                    <Typography variant=\"p\">Grand Total</Typography>\r\n                                    <Typography variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"order-products\" sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', my: 3}}>\r\n                    {order.products && order.products.map(product => {\r\n                        return  <Link to={`/products/${product._id}`} key={product._id}>\r\n                        <img \r\n                            src={product.image} \r\n                            alt=\"image\" \r\n                        />   \r\n                    </Link>   \r\n                    })}                   \r\n                    </Box>\r\n                </Container>\r\n            )\r\n       )}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default OrderDetailScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\LoginScreen.js",["193"],"import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom'\r\nimport { Typography, FormControl, Button, Box, TextField, Alert} from '@mui/material'\r\nimport { login } from '../../actions/userActions'\r\n\r\nconst LoginScreen = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo, error, success } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() =>{\r\n        // if(success){\r\n        //     dispatch({\r\n        //         type: SET_GLOBAL_ALERT,\r\n        //         payload: {\r\n        //             alert: 'Welcome back!',\r\n        //             alertType: 'success'\r\n        //         }\r\n        //     })\r\n        //     history.push(redirect)\r\n        // }\r\n        // if(userInfo){\r\n        //     return history.push(redirect)\r\n        // }\r\n        if(success){\r\n            navigate(redirect)\r\n        }\r\n        if(userInfo){\r\n            return navigate(redirect)\r\n        }\r\n    }, [success, navigate, dispatch, userInfo])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(username, password))\r\n    }\r\n\r\n    return (\r\n        <Box className=\"auth-form\">\r\n            <form className=\"form-container\" onSubmit={handleSubmit}>\r\n                <Typography textAlign=\"center\" variant=\"h4\">Sign In</Typography>\r\n                {error && <Alert severity=\"error\">{error}</Alert>}\r\n                <div>   \r\n                    <FormControl sx={{mt:3, width: '100%'}}>\r\n                        <TextField \r\n                            name=\"username\" \r\n                            type=\"text\"\r\n                            label=\"Username\" \r\n                            value={username}\r\n                            onChange={(e) => setUsername(e.target.value)} \r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl sx={{mt:3, width: '100%'}}>\r\n                        <TextField \r\n                            name=\"password\" \r\n                            type=\"password\"\r\n                            label=\"Password\" \r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)} \r\n                            variant=\"outlined\"\r\n                        />\r\n                    </FormControl>\r\n                </div>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    sx={{mt:5, width:\"100%\"}}\r\n                    type=\"submit\"\r\n                > \r\n                    Sign In\r\n                </Button>\r\n                <Typography component=\"p\" variant=\"p\" color=\"light\" sx={{mt:3}}>Don't have an account? <Link to=\"/register\">Sign Up Here</Link></Typography>\r\n            </form>        \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\DashboardScreen.js",["194","195","196"],"import { useEffect, useMemo, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid, Typography, Box, Paper, Alert } from '@mui/material';\r\nimport Chart from '../../components/admin/Chart';\r\nimport { getUserStats } from '../../actions/userActions';\r\nimport AdminSidenav from '../../components/admin/AdminSidenav';\r\nimport NewUsersComponent from '../../components/admin/NewUsersComponent';\r\nimport LatestOrdersComponent from '../../components/admin/LatestOrdersComponent';\r\nimport RevenueComponent from '../../components/admin/RevenueComponent';\r\n\r\nconst DashboardScreen = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const MONTHS = useMemo(\r\n    () => [\r\n      'Jan',\r\n      'Feb',\r\n      'Mar',\r\n      'Apr',\r\n      'May',\r\n      'Jun',\r\n      'Jul',\r\n      'Aug',\r\n      'Sep',\r\n      'Oct',\r\n      'Nov',\r\n      'Dec',\r\n    ],\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    !userInfo && navigate('/login?redirect=/admin');\r\n    userInfo && !userInfo.isAdmin && navigate('/');\r\n\r\n    const getStats = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/stats`, config);\r\n\r\n        data.map((item) =>\r\n          setUserData((prev) => [\r\n            ...prev,\r\n            { name: MONTHS[item._id - 1], 'Active User': item.total },\r\n          ])\r\n        );\r\n      } catch (err) {\r\n        if (err) {\r\n          setMessage(err);\r\n        }\r\n      }\r\n    };\r\n    getStats();\r\n  }, [MONTHS]);\r\n\r\n  return (\r\n    <Box sx={{ minHeight: '85vh' }}>\r\n      <Typography\r\n        variant='h4'\r\n        sx={{ my: 3, paddingLeft: '1rem' }}\r\n        align='center'\r\n      >\r\n        ShopMart Admin\r\n      </Typography>\r\n      {message && <Alert severity='error'>{message}</Alert>}\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={6}\r\n          md={2}\r\n          sx={{ marginLeft: '0.5rem', backgroundColor: '#F2F2F5' }}\r\n        >\r\n          <AdminSidenav />\r\n        </Grid>\r\n        <Grid item xs={6} md={9}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <RevenueComponent />\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n              <Typography variant='h5'>Revenue</Typography>\r\n              <Typography\r\n                component='p'\r\n                variant='p'\r\n                sx={{ fontSize: 30, my: 2 }}\r\n              >\r\n                $3218\r\n              </Typography>\r\n              <Typography component='p' variant='p' className='text-light'>\r\n                Compared to Last Month\r\n              </Typography>\r\n            </Paper>\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n              <Typography variant='h5'>Revenue</Typography>\r\n              <Typography\r\n                component='p'\r\n                variant='p'\r\n                sx={{ fontSize: 30, my: 2 }}\r\n              >\r\n                $3218\r\n              </Typography>\r\n              <Typography component='p' variant='p' className='text-light'>\r\n                Compared to Last Month\r\n              </Typography>\r\n            </Paper>\r\n          </Box>\r\n          <Chart\r\n            data={userData}\r\n            title='User Analytics'\r\n            grid\r\n            dataKey='Active User'\r\n          />\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n              <Typography\r\n                variant='p'\r\n                sx={{ fontWeight: 600, fontSize: 20, mb: 3 }}\r\n              >\r\n                Newly Joined Members\r\n              </Typography>\r\n              <NewUsersComponent />\r\n            </Paper>\r\n            <Paper elevation={3} sx={{ padding: '2rem', width: '60%' }}>\r\n              <Typography\r\n                variant='p'\r\n                sx={{ fontWeight: 600, fontSize: 20, mb: 3 }}\r\n              >\r\n                Latest Orders\r\n              </Typography>\r\n              <LatestOrdersComponent />\r\n            </Paper>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default DashboardScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\orders\\OrdersScreen.js",["197","198"],"import React, {useEffect} from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useNavigate} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Typography, Box, Container, Alert, Button} from '@mui/material'\r\nimport { getUserOrders } from '../../actions/orderActions'\r\nimport Spinner from '../../components/Spinner'\r\n\r\nconst OrdersScreen = () => {\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userOrders = useSelector(state => state.userOrders)\r\n    let { loading, error, orders } = userOrders\r\n\r\n    useEffect(() => { \r\n        if(!userInfo){\r\n            navigate('/login?redirect=/orders')\r\n        } else{\r\n            dispatch(getUserOrders())\r\n        }\r\n    }, [dispatch])\r\n\r\n    const displayDate = (date) =>{\r\n        const newDate = new Date(date)\r\n        return moment(newDate).format('MM/DD/YYYY')\r\n    }\r\n\r\n    return (\r\n        <Container sx={{minHeight:'85vh'}}>\r\n            <Box sx={{display:'flex', justifyContent: 'space-between'}}>\r\n                <Typography variant=\"h4\" sx={{my: 3}}>Your Orders</Typography>\r\n                <Link to=\"/\" style={{alignSelf:'center'}}><Button variant=\"contained\" color=\"secondary\">Continue Shopping</Button></Link>\r\n            </Box>\r\n            {loading && <Spinner />}\r\n            {error && <Alert severity=\"error\">{error}</Alert> }\r\n            { (orders && orders.length !== 0) ? (\r\n                orders.map(order => {\r\n                   return <Box \r\n                        sx={{border:'2px solid #DCDCDC', borderRadius: '10px', padding: '1.5rem', mb: 3, boxShadow: '0 3px 10px rgb(0 0 0 / 0.2)'}}\r\n                        key={order._id}\r\n                    >\r\n                        <Box sx={{display: 'flex', justifyContent: 'space-between'}} className=\"order-details\">\r\n                            <div className=\"info\">\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Order Placed</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">{displayDate(order.createdAt)}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Total</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">${order.amount}</Typography>\r\n                                </div>\r\n                                <div>\r\n                                    <Typography component=\"p\" variant=\"p\">Ship To</Typography>\r\n                                    <Typography component=\"p\" variant=\"p\">{order.address.name && order.address.name.toUpperCase()}</Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"order-number\">\r\n                                <Typography variant=\"p\">Order #: {order._id}</Typography>\r\n                                <Link to={`/orders/${order._id}`}>View Order Details</Link>\r\n                            </div>\r\n                        </Box>\r\n                    <Box className=\"order-products\" sx={{mt: 3}}>\r\n                    {order.products && order.products.map(product => {\r\n                        return  <Link to={`/products/${product._id}`} key={product._id}>\r\n                        <img \r\n                            src={product.image} \r\n                            alt=\"image\" \r\n                        />   \r\n                    </Link>   \r\n                    })}                   \r\n                    </Box>\r\n                </Box>\r\n                })\r\n            ) : <Alert severity=\"info\">No Orders Found...</Alert>}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default OrdersScreen\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\users\\RegisterScreen.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\ProductsScreen.js",["199","200"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Typography, Alert, Button } from '@mui/material';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { deleteProduct, getProducts } from '../../actions/productAction';\r\nimport Spinner from '../../components/Spinner';\r\n\r\nconst ProductsScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const { error: deleteError, success: successDelete } = productDelete;\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, [successDelete]);\r\n\r\n  const handleDelete = (id) => {\r\n    if (window.confirm('Are you sure you want to delete this product?')) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: '_id', headerName: 'ID', width: 250 },\r\n    {\r\n      field: 'product',\r\n      headerName: 'Product',\r\n      width: 220,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div className='productListItem'>\r\n            <img className='productListImg' src={params.row.image} alt='' />\r\n            {params.row.title}\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    { field: 'inStock', headerName: 'Stock', width: 200 },\r\n    { field: 'price', headerName: 'Price', width: 160 },\r\n    {\r\n      field: 'action',\r\n      headerName: 'Action',\r\n      width: 150,\r\n      renderCell: (params) => {\r\n        return (\r\n          <>\r\n            <Link to={'/product/' + params.row._id}>\r\n              <Button\r\n                variant='contained'\r\n                size='small'\r\n                sx={{ backgroundColor: 'green !important', mr: 3 }}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </Link>\r\n            <DeleteOutlineIcon\r\n              className='productListDelete'\r\n              onClick={() => handleDelete(params.row._id)}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container sx={{ minHeight: '85vh', mt: 4 }}>\r\n        <Typography variant='h4'>Products</Typography>\r\n        <Button variant='contained' color='secondary' sx={{ mt: 1, mb: 2 }}>\r\n          <Link to={'/admin/products/create'}>Create Product</Link>\r\n        </Button>\r\n        {loading && <Spinner />}\r\n        {error && <Alert severity='error'>{error}</Alert>}\r\n        {products && (\r\n          <div style={{ height: '800', width: '100%' }} className='productList'>\r\n            <DataGrid\r\n              rows={products}\r\n              disableSelectionOnClick\r\n              columns={columns}\r\n              getRowId={(row) => row._id}\r\n              pageSize={10}\r\n              checkboxSelection\r\n            />\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsScreen;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\ShowcaseComponent.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\Spinner.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductListComponent.js",["201"],"import React, {useState, useEffect}from 'react' \r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Grid, Card, CardMedia, CardContent, Typography, Alert} from '@mui/material'\r\nimport { getProducts } from '../../actions/productAction'\r\nimport Spinner from '../Spinner'\r\n\r\n\r\nconst ProductListComponent = ({category, filters, sort}) => {\r\n    const [ displayProducts, setDisplayProducts ] = useState([])\r\n    const [currentFilters, setCurrentFilters ] = useState({})\r\n    const [currentCategory, setCurrentCategory] = useState([])\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    let { loading, error, products } = productList\r\n\r\n    useEffect(() => { \r\n        if(currentCategory !== category){\r\n            setCurrentCategory(category)\r\n            dispatch(getProducts(category))\r\n        }\r\n    }, [category, currentCategory, dispatch])\r\n \r\n    useEffect(() => {\r\n        if(products && !Object.values(filters).every(x => x === '') && filters !== currentFilters){\r\n            setCurrentFilters(filters)\r\n            setDisplayProducts(products.filter((product) => {\r\n                for (const [key, value] of Object.entries(filters)){\r\n                    if(value !== ''){\r\n                        return product[key].includes(value)\r\n                    }           \r\n                }\r\n            }))\r\n        } else if (products && Object.keys(currentFilters).length === 0){\r\n            setDisplayProducts(products)\r\n        }\r\n    }, [products, filters, currentFilters])\r\n\r\n    useEffect(() =>  {\r\n        if(sort === 'newest'){\r\n            setDisplayProducts((prev) => \r\n                [...prev].sort((a, b) => a.createdAt - b.createdAt)\r\n            )\r\n        } else if(sort === 'asc'){\r\n            setDisplayProducts((prev) => \r\n                [...prev].sort((a, b) => a.price - b.price)\r\n            )\r\n        }else{\r\n            setDisplayProducts((prev) =>\r\n                [...prev].sort((a, b) => b.price - a.price)\r\n            )\r\n        }\r\n    }, [sort])\r\n\r\n// filteredProducts ? show filtered products : show all products\r\n    return (\r\n        <>\r\n        {loading && <Spinner /> } \r\n        {displayProducts && displayProducts.length > 0 ? (\r\n            <Grid className=\"products-container\" container spacing={{ xs: 2, md: 3 }} sx={{minHeight: '70vh'}}>\r\n                { error && <Alert severity=\"error\">{error}</Alert>}\r\n                {displayProducts.map((product, index) => {\r\n                    return  <Grid className=\"product-item\" item sx={{ width:'100%' }} xs={12} sm={6} md={3} key={index}>\r\n                        <Link to={`/products/${product._id}`}>\r\n                        <Card sx={{ width:'100%'}}>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                height=\"300\"\r\n                                image={product.image}\r\n                                alt={product.title}\r\n                            />\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"p\" sx={{ color: 'text.primary', fontSize: 22, fontWeight: 'medium' }} className=\"product-title\">{product.title}</Typography>\r\n                                <Typography gutterBottom variant=\"p\" sx={{ display: 'block', color: 'text.primary', fontSize: 18, fontWeight: 'medium' }}>${product.price}</Typography>\r\n                            </CardContent>                       \r\n                        </Card>\r\n                        </Link>\r\n                    </Grid>\r\n                })}\r\n            </Grid>\r\n        ) : <Alert severity=\"warning\" sx={{display: 'block', minHeight: '70vh'}}>No Products Found...</Alert>\r\n            }        \r\n      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListComponent\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\products\\ProductsComponent.js",["202"],"import React, {useState} from 'react'\r\nimport {Box, FormControl, InputLabel, Select, MenuItem, Container, Typography} from '@mui/material'\r\nimport { useLocation } from 'react-router';\r\n\r\n\r\nimport ProductListComponent from './ProductListComponent';\r\n\r\nconst ProductsComponent = ({ home = false, category}) => {\r\n    const [filters, setFilters] = useState({color: '', size: ''});\r\n    const [sort, setSort ] = useState('newest')\r\n\r\n    const handleFilters = (e) =>{\r\n        const value = e.target.value;\r\n        setFilters({\r\n            ...filters,\r\n            [e.target.name]: value\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container sx={{mb: 5}}>\r\n            {category && <Typography variant=\"h3\">{category}</Typography>}\r\n            <Box className=\"product-filters\" sx={{ display: 'flex', marginTop: home ? '3rem' : '', justifyContent: 'space-between'}}>\r\n                <div className=\"left-section\">\r\n                    <div style={{display: 'flex', alignItems: 'center', marginRight: '1rem'}}>\r\n                        <Typography variant=\"h5\" sx={{fontSize: '1.5rem'}}>Filter Products:</Typography>\r\n                    </div>\r\n                    <Box sx={{ minWidth: 120, mr:3 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Size</InputLabel>\r\n                            <Select\r\n                                labelId=\"size\"\r\n                                label=\"Size\"\r\n                                name=\"size\"\r\n                                value={filters.size}\r\n                                onChange={(e)=>handleFilters(e)}\r\n                            >\r\n                                <MenuItem value={\"S\"}>Small</MenuItem>\r\n                                <MenuItem value={\"M\"}>Medium</MenuItem>\r\n                                <MenuItem value={\"L\"}>Large</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Color</InputLabel>\r\n                            <Select\r\n                                labelId=\"color\"\r\n                                label=\"color\"\r\n                                name=\"color\"\r\n                                value={filters.color}\r\n                                onChange={(e)=>handleFilters(e)}\r\n                            >\r\n                                <MenuItem value={\"black\"}>Black</MenuItem>\r\n                                <MenuItem value={\"yellow\"}>Yellow</MenuItem>\r\n                                <MenuItem value={\"orange\"}>Orange</MenuItem>\r\n                                <MenuItem value={\"blue\"}>Blue</MenuItem>\r\n                                <MenuItem value={\"khaki\"}>Khaki</MenuItem>\r\n                                <MenuItem value={\"beige\"}>Beige</MenuItem>\r\n                                <MenuItem value={\"pink\"}>Pink</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                </div>\r\n                <div className=\"right-section\">\r\n                    <div style={{display: 'flex', alignItems: 'center', marginRight: '1rem'}}>\r\n                        <Typography variant=\"h5\" sx={{fontSize: '1.5rem'}}>Sort Products:</Typography>\r\n                    </div>\r\n                    <Box sx={{ minWidth: 120 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id=\"size\">Sort</InputLabel>\r\n                            <Select\r\n                                labelId=\"sort\"\r\n                                id=\"sort-select\"\r\n                                value={sort}\r\n                                label=\"sort\"\r\n                                name=\"sort\"\r\n                                onChange={(e) => {setSort(e.target.value)}}\r\n                            >\r\n                                <MenuItem value={\"newest\"}>Newest</MenuItem>\r\n                                <MenuItem value={\"desc\"}>Price: High To Low</MenuItem>\r\n                                <MenuItem value={\"asc\"}>Price: Low To High</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Box>\r\n                    </div>\r\n                </Box>\r\n                <ProductListComponent category={category} filters={filters} sort={sort}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProductsComponent\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\productAction.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\cartTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\orderTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\RevenueComponent.js",["203","204"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Paper, Typography, Box } from '@mui/material';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\n\r\nconst RevenueComponent = () => {\r\n  const [income, setIncome] = useState([]);\r\n  const [perc, setPerc] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    const getIncome = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get('/api/orders/stats', config);\r\n\r\n        setIncome(data);\r\n        setPerc((data[1].total * 100) / data[0].total - 100);\r\n      } catch (err) {\r\n        err && setMessage(err);\r\n      }\r\n    };\r\n    getIncome();\r\n  }, []);\r\n\r\n  console.log(income);\r\n\r\n  return (\r\n    <>\r\n      {income && perc && (\r\n        <Paper elevation={3} sx={{ padding: '2rem', width: '30%' }}>\r\n          <Typography variant='h5'>Revenue</Typography>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Typography component='p' variant='p' sx={{ fontSize: 30, my: 2 }}>\r\n              ${income[1].total}\r\n            </Typography>\r\n            <Typography\r\n              component='p'\r\n              variant='p'\r\n              sx={{ fontSize: 15, my: 2, alignSelf: 'center' }}\r\n            >\r\n              {Math.floor(perc)}%\r\n              {perc < 0 ? (\r\n                <ArrowDownwardIcon sx={{ alignSelf: 'center', color: 'red' }} />\r\n              ) : (\r\n                <ArrowUpwardIcon sx={{ alignSelf: 'center', color: 'green' }} />\r\n              )}\r\n            </Typography>\r\n          </Box>\r\n          <Typography component='p' variant='p' className='text-light'>\r\n            Compared to Last Month\r\n          </Typography>\r\n        </Paper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RevenueComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\AdminSidenav.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\Chart.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\LatestOrdersComponent.js",["205"],"import React from 'react';\r\n\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nfunction createData(orderNumber, name, date, amount, status) {\r\n  return { orderNumber, name, date, amount, status };\r\n}\r\n\r\nconst rows = [\r\n  createData('#123', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#123', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#123', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n  createData('#123', 'Tania', 'Dec 3rd', 500, 'completed'),\r\n];\r\n\r\nconst LatestOrdersComponent = () => {\r\n  return (\r\n    <TableContainer>\r\n      <Table sx={{ minWidth: 650 }} aria-label='simple table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align='center'>Order Number</TableCell>\r\n            <TableCell align='center'>Customer</TableCell>\r\n            <TableCell align='center'>Date</TableCell>\r\n            <TableCell align='center'>Amount</TableCell>\r\n            <TableCell align='center'>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow\r\n              key={row.orderNumber}\r\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n            >\r\n              <TableCell component='th' scope='row' align='center'>\r\n                {row.orderNumber}\r\n              </TableCell>\r\n              <TableCell align='center'>{row.name}</TableCell>\r\n              <TableCell align='center'>{row.date}</TableCell>\r\n              <TableCell align='center'>{row.amount}</TableCell>\r\n              <TableCell align='center'>{row.status}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default LatestOrdersComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\components\\admin\\NewUsersComponent.js",["206"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { Box, Typography, Alert } from '@mui/material';\r\n\r\nconst NewUsersComponent = ({ users }) => {\r\n  const [newUsers, setNewUsers] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    !userInfo && navigate('/login?redirect=/admin');\r\n    userInfo && !userInfo.isAdmin && navigate('/');\r\n\r\n    const getNewUserInfo = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users?new=true`, config);\r\n\r\n        setNewUsers(data);\r\n      } catch (err) {\r\n        if (err) {\r\n          setMessage(err);\r\n        }\r\n      }\r\n    };\r\n    getNewUserInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {message && <Alert severity='error'>{message}</Alert>}\r\n      {newUsers &&\r\n        newUsers.map((user) => {\r\n          return (\r\n            <Box\r\n              sx={{ display: 'flex', justifyContent: 'space-between', my: 3 }}\r\n              key={user._id}\r\n            >\r\n              <Typography component='p' variant='p'>\r\n                {user.username}\r\n              </Typography>\r\n              <Typography component='p' variant='p'>\r\n                {user.email}\r\n              </Typography>\r\n            </Box>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewUsersComponent;\r\n","C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\productTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\actions\\actionTypes\\userTypes.js",[],"C:\\Users\\reece\\Desktop\\WebDevelopment\\myWork_2021\\shopmart_2021\\frontend\\src\\screens\\admin\\CreateProductScreen.js",["207","208","209","210","211","212","213","214","215","216","217","218","219","220"],{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","replacedBy":"224"},{"ruleId":"225","severity":1,"message":"226","line":8,"column":8,"nodeType":"227","messageId":"228","endLine":8,"endColumn":11},{"ruleId":"225","severity":1,"message":"229","line":10,"column":8,"nodeType":"227","messageId":"228","endLine":10,"endColumn":15},{"ruleId":"225","severity":1,"message":"230","line":26,"column":12,"nodeType":"227","messageId":"228","endLine":26,"endColumn":19},{"ruleId":"231","severity":1,"message":"232","line":33,"column":8,"nodeType":"233","endLine":33,"endColumn":10,"suggestions":"234"},{"ruleId":"231","severity":1,"message":"235","line":45,"column":8,"nodeType":"233","endLine":45,"endColumn":28,"suggestions":"236"},{"ruleId":"231","severity":1,"message":"237","line":77,"column":8,"nodeType":"233","endLine":77,"endColumn":27,"suggestions":"238"},{"ruleId":"225","severity":1,"message":"239","line":8,"column":10,"nodeType":"227","messageId":"228","endLine":8,"endColumn":23},{"ruleId":"225","severity":1,"message":"240","line":20,"column":20,"nodeType":"227","messageId":"228","endLine":20,"endColumn":25},{"ruleId":"231","severity":1,"message":"232","line":24,"column":8,"nodeType":"233","endLine":24,"endColumn":12,"suggestions":"241"},{"ruleId":"225","severity":1,"message":"242","line":5,"column":8,"nodeType":"227","messageId":"228","endLine":5,"endColumn":28},{"ruleId":"225","severity":1,"message":"243","line":9,"column":21,"nodeType":"227","messageId":"228","endLine":9,"endColumn":31},{"ruleId":"225","severity":1,"message":"244","line":10,"column":18,"nodeType":"227","messageId":"228","endLine":10,"endColumn":25},{"ruleId":"225","severity":1,"message":"240","line":14,"column":22,"nodeType":"227","messageId":"228","endLine":14,"endColumn":27},{"ruleId":"231","severity":1,"message":"245","line":18,"column":8,"nodeType":"233","endLine":18,"endColumn":10,"suggestions":"246"},{"ruleId":"247","severity":1,"message":"248","line":77,"column":25,"nodeType":"249","endLine":80,"endColumn":27},{"ruleId":"231","severity":1,"message":"250","line":40,"column":8,"nodeType":"233","endLine":40,"endColumn":47,"suggestions":"251"},{"ruleId":"225","severity":1,"message":"252","line":4,"column":10,"nodeType":"227","messageId":"228","endLine":4,"endColumn":21},{"ruleId":"225","severity":1,"message":"253","line":7,"column":10,"nodeType":"227","messageId":"228","endLine":7,"endColumn":22},{"ruleId":"231","severity":1,"message":"254","line":68,"column":6,"nodeType":"233","endLine":68,"endColumn":14,"suggestions":"255"},{"ruleId":"231","severity":1,"message":"254","line":26,"column":8,"nodeType":"233","endLine":26,"endColumn":18,"suggestions":"256"},{"ruleId":"247","severity":1,"message":"248","line":70,"column":25,"nodeType":"249","endLine":73,"endColumn":27},{"ruleId":"225","severity":1,"message":"257","line":17,"column":18,"nodeType":"227","messageId":"228","endLine":17,"endColumn":29},{"ruleId":"231","severity":1,"message":"232","line":21,"column":6,"nodeType":"233","endLine":21,"endColumn":21,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":29,"column":58,"nodeType":"261","messageId":"262","endLine":29,"endColumn":60},{"ruleId":"225","severity":1,"message":"263","line":3,"column":10,"nodeType":"227","messageId":"228","endLine":3,"endColumn":21},{"ruleId":"225","severity":1,"message":"264","line":11,"column":10,"nodeType":"227","messageId":"228","endLine":11,"endColumn":17},{"ruleId":"231","severity":1,"message":"265","line":35,"column":6,"nodeType":"233","endLine":35,"endColumn":8,"suggestions":"266"},{"ruleId":"225","severity":1,"message":"267","line":9,"column":8,"nodeType":"227","messageId":"228","endLine":9,"endColumn":13},{"ruleId":"231","severity":1,"message":"254","line":39,"column":6,"nodeType":"233","endLine":39,"endColumn":8,"suggestions":"268"},{"ruleId":"225","severity":1,"message":"269","line":1,"column":27,"nodeType":"227","messageId":"228","endLine":1,"endColumn":36},{"ruleId":"225","severity":1,"message":"270","line":12,"column":19,"nodeType":"227","messageId":"228","endLine":12,"endColumn":29},{"ruleId":"225","severity":1,"message":"271","line":14,"column":10,"nodeType":"227","messageId":"228","endLine":14,"endColumn":21},{"ruleId":"225","severity":1,"message":"272","line":14,"column":23,"nodeType":"227","messageId":"228","endLine":14,"endColumn":37},{"ruleId":"225","severity":1,"message":"273","line":15,"column":10,"nodeType":"227","messageId":"228","endLine":15,"endColumn":15},{"ruleId":"225","severity":1,"message":"274","line":15,"column":17,"nodeType":"227","messageId":"228","endLine":15,"endColumn":25},{"ruleId":"225","severity":1,"message":"275","line":16,"column":10,"nodeType":"227","messageId":"228","endLine":16,"endColumn":20},{"ruleId":"225","severity":1,"message":"276","line":16,"column":22,"nodeType":"227","messageId":"228","endLine":16,"endColumn":35},{"ruleId":"225","severity":1,"message":"277","line":17,"column":10,"nodeType":"227","messageId":"228","endLine":17,"endColumn":14},{"ruleId":"225","severity":1,"message":"278","line":17,"column":16,"nodeType":"227","messageId":"228","endLine":17,"endColumn":23},{"ruleId":"225","severity":1,"message":"279","line":18,"column":10,"nodeType":"227","messageId":"228","endLine":18,"endColumn":15},{"ruleId":"225","severity":1,"message":"280","line":18,"column":17,"nodeType":"227","messageId":"228","endLine":18,"endColumn":25},{"ruleId":"225","severity":1,"message":"281","line":19,"column":10,"nodeType":"227","messageId":"228","endLine":19,"endColumn":15},{"ruleId":"225","severity":1,"message":"282","line":19,"column":17,"nodeType":"227","messageId":"228","endLine":19,"endColumn":25},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"no-unused-vars","'Pay' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["285"],"React Hook useEffect has missing dependencies: 'dispatch', 'navigate', and 'order'. Either include them or remove the dependency array.",["286"],"React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo.token'. Either include them or remove the dependency array.",["287"],"'CART_ADD_ITEM' is defined but never used.","'error' is assigned a value but never used.",["288"],"'ProductListComponent' is defined but never used.","'setFilters' is assigned a value but never used.","'setSort' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'params.id'. Either include them or remove the dependency array.",["289"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["290"],"'useDispatch' is defined but never used.","'getUserStats' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate' and 'userInfo'. Either include them or remove the dependency array.",["291"],["292"],"'deleteError' is assigned a value but never used.",["293"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useLocation' is defined but never used.","'message' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo.token'. Either include it or remove the dependency array.",["294"],"'Paper' is defined but never used.",["295"],"'useEffect' is defined but never used.","'setMessage' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","'categories' is assigned a value but never used.","'setCategories' is assigned a value but never used.","'size' is assigned a value but never used.","'setSize' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","'price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},"Update the dependencies array to be: [dispatch]",{"range":"318","text":"319"},"Update the dependencies array to be: [dispatch, navigate, order, orderCreateSuccess]",{"range":"320","text":"321"},"Update the dependencies array to be: [stripeToken, cart, userInfo.token, dispatch]",{"range":"322","text":"323"},"Update the dependencies array to be: [dispatch, id]",{"range":"324","text":"325"},"Update the dependencies array to be: [dispatch, params.id]",{"range":"326","text":"327"},"Update the dependencies array to be: [success, navigate, dispatch, userInfo, redirect]",{"range":"328","text":"329"},"Update the dependencies array to be: [MONTHS, navigate, userInfo]",{"range":"330","text":"331"},"Update the dependencies array to be: [dispatch, navigate, userInfo]",{"range":"332","text":"333"},"Update the dependencies array to be: [dispatch, successDelete]",{"range":"334","text":"335"},"Update the dependencies array to be: [userInfo.token]",{"range":"336","text":"337"},"Update the dependencies array to be: [navigate, userInfo]",{"range":"338","text":"339"},[1276,1278],"[dispatch]",[1544,1564],"[dispatch, navigate, order, orderCreateSuccess]",[2740,2759],"[stripeToken, cart, userInfo.token, dispatch]",[947,951],"[dispatch, id]",[658,660],"[dispatch, params.id]",[1319,1358],"[success, navigate, dispatch, userInfo, redirect]",[1903,1911],"[MONTHS, navigate, userInfo]",[852,862],"[dispatch, navigate, userInfo]",[844,859],"[dispatch, successDelete]",[1094,1096],"[userInfo.token]",[1108,1110],"[navigate, userInfo]"]